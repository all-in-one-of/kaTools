<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="kaTools" label="kaTools">
    <memberTool name="connect"/>
    <memberTool name="disconnectOutputNodes"/>
    <memberTool name="gotToCam"/>
    <memberTool name="changeUpdateMode"/>
    <memberTool name="add_event_when_created"/>
    <memberTool name="sanity_check"/>
    <memberTool name="copyRamp"/>
    <memberTool name="colorize"/>
    <memberTool name="recursiveReferenceCopy"/>
    <memberTool name="subnet"/>
    <memberTool name="uv_fixer"/>
    <memberTool name="subnet0"/>
    <memberTool name="subnet1"/>
    <memberTool name="subnet2"/>
    <memberTool name="python"/>
    <memberTool name="timeblend"/>
    <memberTool name="subnet3"/>
    <memberTool name="opencl"/>
    <memberTool name="graph"/>
    <memberTool name="GET_all_frames_geo0"/>
    <memberTool name="CALC_size"/>
    <memberTool name="pc_crowd"/>
    <memberTool name="pc_crowd_new"/>
    <memberTool name="nonP_trans"/>
    <memberTool name="pick_up_atr_val_is_1"/>
    <memberTool name="subnet5"/>
  </toolshelf>

  <tool name="add_event_when_created" label="add_event_when_created" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import eventCallBack

eventCallBack.execute(hou.node("/"))]]></script>
  </tool>

  <tool name="sanity_check" label="sanity_check" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import sanityCheck

sanityCheck.execute(hou.node("/"))]]></script>
  </tool>

  <tool name="connect" label="Connect" icon="SOP_join">
    <script scriptType="python"><![CDATA[import connectNodes

connectNodes.execute()]]></script>
  </tool>

  <tool name="subnet" label="remesh_for_deforming_geo" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Monday October 03, 20:31 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_sphere_remesh_for_deforming_geo (Sop/subnet)
set _obj_sphere_remesh_for_deforming_geo = `run("opadd -e -n -v subnet remesh_for_deforming_geo")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_sphere_remesh_for_deforming_geo
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  dialog     }     parm {         name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  dialog     }     parm {         name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  dialog     }     parm {         name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  dialog     }     parm {         name    "remesh_frame"  label   "remesh_frame"  type    float   default { "1" }         range   { 0 10 }        export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "target_edge"   label   "Target Edge Length"    type    float   default { "0.03" }      range   { 0.001! 1 }    export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_sphere_remesh_for_deforming_geo
opcolor -c 0.86699998378753662 0 0 $_obj_sphere_remesh_for_deforming_geo
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo
opcf $_obj_sphere_remesh_for_deforming_geo

# Node $_obj_sphere_remesh_for_deforming_geo_remesh1 (Sop/remesh)
set _obj_sphere_remesh_for_deforming_geo_remesh1 = `run("opadd -e -n -v remesh remesh1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.4905300000000001` $_obj_sphere_remesh_for_deforming_geo_remesh1
opparm $_obj_sphere_remesh_for_deforming_geo_remesh1  lfs_ramp ( 2 )
chblockbegin
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_remesh1 target_edge
chkey -t 0 -v 0.029999999999999999 -m 0 -a 0 -A 0 -T a  -F 'ch("../target_edge")' $_obj_sphere_remesh_for_deforming_geo_remesh1/target_edge
chblockend
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_remesh1 target_edge ( target_edge ) lfs_ramp1c ( 0 0 1 ) lfs_ramp2pos ( 1 ) lfs_ramp2c ( 1 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_remesh1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_remesh1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_remesh1

# Node $_obj_sphere_remesh_for_deforming_geo_timeshift1 (Sop/timeshift)
set _obj_sphere_remesh_for_deforming_geo_timeshift1 = `run("opadd -e -n -v timeshift timeshift1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_sphere_remesh_for_deforming_geo_timeshift1
chblockbegin
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 frame
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../remesh_frame")' $_obj_sphere_remesh_for_deforming_geo_timeshift1/frame
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_sphere_remesh_for_deforming_geo_timeshift1/time
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_sphere_remesh_for_deforming_geo_timeshift1/frange1
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_sphere_remesh_for_deforming_geo_timeshift1/frange2
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_sphere_remesh_for_deforming_geo_timeshift1/trange1
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_sphere_remesh_for_deforming_geo_timeshift1/trange2
chblockend
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_timeshift1 frame ( frame )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_timeshift1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_timeshift1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_timeshift1

# Node $_obj_sphere_remesh_for_deforming_geo_ray1 (Sop/ray)
set _obj_sphere_remesh_for_deforming_geo_ray1 = `run("opadd -e -n -v ray ray1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.1069899999999997` $_obj_sphere_remesh_for_deforming_geo_ray1
chblockbegin
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_ray1 dirx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_sphere_remesh_for_deforming_geo_ray1/dirx
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_ray1 diry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_sphere_remesh_for_deforming_geo_ray1/diry
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_ray1 dirz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_sphere_remesh_for_deforming_geo_ray1/dirz
chblockend
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_ray1 method ( minimum ) useprimnumattrib ( on ) useprimuvwattrib ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_ray1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_ray1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_ray1

# Node $_obj_sphere_remesh_for_deforming_geo_null1 (Sop/null)
set _obj_sphere_remesh_for_deforming_geo_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + 3.5997370000000002` -y `$arg3 + 3.4905300000000001` $_obj_sphere_remesh_for_deforming_geo_null1
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_sphere_remesh_for_deforming_geo_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_null1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_null1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_null1

# Node $_obj_sphere_remesh_for_deforming_geo_null2 (Sop/null)
set _obj_sphere_remesh_for_deforming_geo_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 6.1990769999999999` -y `$arg3 + 3.4905300000000001` $_obj_sphere_remesh_for_deforming_geo_null2
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_sphere_remesh_for_deforming_geo_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_null2
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_null2
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_null2

# Node $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1 (Sop/attribinterpolate)
set _obj_sphere_remesh_for_deforming_geo_attribinterpolate1 = `run("opadd -e -n -v attribinterpolate attribinterpolate1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.93860999999999972` $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1 numberattrib ( hitprim ) weightsattrib ( hitprimuv )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1

# Node $_obj_sphere_remesh_for_deforming_geo_OUT (Sop/null)
set _obj_sphere_remesh_for_deforming_geo_OUT = `run("opadd -e -n -v null OUT")`
oplocate -x `$arg2 + 1` -y `$arg3 + -0.89910999999999941` $_obj_sphere_remesh_for_deforming_geo_OUT
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_sphere_remesh_for_deforming_geo_OUT
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_OUT
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_OUT
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_OUT

# Node $_obj_sphere_remesh_for_deforming_geo_attribute1 (Sop/attribute)
set _obj_sphere_remesh_for_deforming_geo_attribute1 = `run("opadd -e -n -v attribute attribute1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.041730000000000267` $_obj_sphere_remesh_for_deforming_geo_attribute1
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_attribute1 ptdel ( 'hitprim hitprimuv' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_attribute1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_attribute1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_attribute1

# Node $_obj_sphere_remesh_for_deforming_geo_output1 (Sop/output)
set _obj_sphere_remesh_for_deforming_geo_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -2.2995080947875977` $_obj_sphere_remesh_for_deforming_geo_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_output1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_output1
oporder -e remesh1 timeshift1 ray1 null1 null2 attribinterpolate1 OUT attribute1 output1
opcf ..
opset -p on $_obj_sphere_remesh_for_deforming_geo

opcf $arg1
opwire -n $_obj_sphere_noise -0 $_obj_sphere_remesh_for_deforming_geo
opcf $_obj_sphere_remesh_for_deforming_geo
opwire -n $_obj_sphere_remesh_for_deforming_geo_timeshift1 -0 $_obj_sphere_remesh_for_deforming_geo_remesh1
opwire -n -i 0 -0 $_obj_sphere_remesh_for_deforming_geo_timeshift1
opwire -n $_obj_sphere_remesh_for_deforming_geo_remesh1 -0 $_obj_sphere_remesh_for_deforming_geo_ray1
opwire -n $_obj_sphere_remesh_for_deforming_geo_null1 -1 $_obj_sphere_remesh_for_deforming_geo_ray1
opwire -n $_obj_sphere_remesh_for_deforming_geo_timeshift1 -0 $_obj_sphere_remesh_for_deforming_geo_null1
opwire -n -i 0 -0 $_obj_sphere_remesh_for_deforming_geo_null2
opwire -n $_obj_sphere_remesh_for_deforming_geo_ray1 -0 $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opwire -n $_obj_sphere_remesh_for_deforming_geo_null2 -1 $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opwire -n $_obj_sphere_remesh_for_deforming_geo_attribute1 -0 $_obj_sphere_remesh_for_deforming_geo_OUT
opwire -n $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1 -0 $_obj_sphere_remesh_for_deforming_geo_attribute1
opwire -n $_obj_sphere_remesh_for_deforming_geo_OUT -0 $_obj_sphere_remesh_for_deforming_geo_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_sphere_remesh_for_deforming_geo
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_sphere_remesh_for_deforming_geo
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="changeUpdateMode" label="changeUpdateMode" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import changeUpdateMode

changeUpdateMode.execute()]]></script>
  </tool>

  <tool name="copyRamp" label="copyRamp" icon="VOP_rampparm">
    <script scriptType="python"><![CDATA[import copyRamp

copyRamp.execute()]]></script>
  </tool>

  <tool name="gotToCam" label="gotToCam" icon="OBJ_camera">
    <script scriptType="python"><![CDATA[import goToCam

goToCam.executeAL()]]></script>
  </tool>

  <tool name="attribvop" label="noise" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribvop</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Sunday October 30, 18:48 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_noise (Sop/attribvop)
set _obj_geo1_noise = `run("opadd -e -n -v attribvop noise")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_noise
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector points "Modify Points"         "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      dialog  }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      dialog  }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "freq"  label   "Frequency"     type    float   size    4       default { "1" "1" "1" "1" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "offset"        label   "Offset"        type    float   size    4       default { "0" "0" "0" "0" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "amp"   label   "Amplitude"     type    float   default { "1" }         range   { -1 1 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rough"         label   "Roughness"     type    float   default { "0.5" }       range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_noise
opparm $_obj_geo1_noise  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_noise freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise/freq2
chadd -t 0 0 $_obj_geo1_noise freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise/freq3
chblockend
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_noise
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_noise
opexprlanguage -s hscript $_obj_geo1_noise
opcf $_obj_geo1_noise

# Node $_obj_geo1_noise_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_noise_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_geo1_noise_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_noise_geometryvopglobal1

# Node $_obj_geo1_noise_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_noise_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 9.8721227645874023` -y `$arg3 + 4.2877378463745117` $_obj_geo1_noise_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_noise_geometryvopoutput1

# Node $_obj_geo1_noise_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_noise_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 5.7316727638244629` -y `$arg3 + 2.5695571899414063` $_obj_geo1_noise_aaflownoise1
opparm $_obj_geo1_noise_aaflownoise1 signature ( vp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_noise_aaflownoise1

# Node $_obj_geo1_noise_vectohvec1 (Vop/vectohvec)
set _obj_geo1_noise_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 3.7922172546386719` -y `$arg3 + 3.5579569339752197` $_obj_geo1_noise_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_vectohvec1
opexprlanguage -s hscript $_obj_geo1_noise_vectohvec1

# Node $_obj_geo1_noise_add1 (Vop/add)
set _obj_geo1_noise_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 7.6962054016113282` -y `$arg3 + 4.5701378211975099` $_obj_geo1_noise_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_add1
opexprlanguage -s hscript $_obj_geo1_noise_add1

# Node $_obj_geo1_noise_freq (Vop/parameter)
set _obj_geo1_noise_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 3.0316727757453918` -y `$arg3 + 3.9695571660995483` $_obj_geo1_noise_freq
opparm -V 15.5.480 $_obj_geo1_noise_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_freq
opexprlanguage -s hscript $_obj_geo1_noise_freq

# Node $_obj_geo1_noise_offset (Vop/parameter)
set _obj_geo1_noise_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 3.131672739982605` -y `$arg3 + 3.7695572376251221` $_obj_geo1_noise_offset
opparm -V 15.5.480 $_obj_geo1_noise_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_offset
opexprlanguage -s hscript $_obj_geo1_noise_offset

# Node $_obj_geo1_noise_amp (Vop/parameter)
set _obj_geo1_noise_amp = `run("opadd -e -n -v parameter amp")`
oplocate -x `$arg2 + 3.2316727638244629` -y `$arg3 + 3.5695571899414063` $_obj_geo1_noise_amp
opparm -V 15.5.480 $_obj_geo1_noise_amp parmname ( amp ) parmlabel ( Amplitude ) floatdef ( 1 ) rangeflt ( -1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_amp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_amp
opexprlanguage -s hscript $_obj_geo1_noise_amp

# Node $_obj_geo1_noise_rough (Vop/parameter)
set _obj_geo1_noise_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 3.3316727578639984` -y `$arg3 + 3.3695572018623352` $_obj_geo1_noise_rough
opparm -V 15.5.480 $_obj_geo1_noise_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_rough
opexprlanguage -s hscript $_obj_geo1_noise_rough
opcf ..
opcf $_obj_geo1_noise
oporder -e geometryvopglobal1 geometryvopoutput1 aaflownoise1 vectohvec1 add1 freq offset amp rough 
opcf ..
opset -p on $_obj_geo1_noise

opcf $arg1
opwire -n $_obj_geo1_uvunwrap1 -0 $_obj_geo1_noise
opcf $_obj_geo1_noise
opwire -n $_obj_geo1_noise_add1 -0 $_obj_geo1_noise_geometryvopoutput1
opwire -n $_obj_geo1_noise_vectohvec1 -0 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_freq -1 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_offset -2 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_amp -3 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_rough -4 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_geometryvopglobal1 -0 $_obj_geo1_noise_vectohvec1
opwire -n $_obj_geo1_noise_geometryvopglobal1 -0 $_obj_geo1_noise_add1
opwire -n $_obj_geo1_noise_aaflownoise1 -1 $_obj_geo1_noise_add1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_noise
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_noise
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="uv_fixer" label="uv_fixer" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Tuesday November 01, 00:42 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_uv_fixer (Sop/subnet)
set _obj_geo1_uv_fixer = `run("opadd -e -n -v subnet uv_fixer")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_uv_fixer
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer
opexprlanguage -s hscript $_obj_geo1_uv_fixer
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer
opcf $_obj_geo1_uv_fixer

# Node $_obj_geo1_uv_fixer_color2 (Sop/color)
set _obj_geo1_uv_fixer_color2 = `run("opadd -e -n -v color color2")`
oplocate -x `$arg2 + -9.3327799999999996` -y `$arg3 + -8.77182` $_obj_geo1_uv_fixer_color2
opparm $_obj_geo1_uv_fixer_color2  ramp ( 2 )
opparm $_obj_geo1_uv_fixer_color2 class ( 3 ) colortype ( 4 ) rampattribute ( piece ) ramprange ( 0 4 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_color2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_color2
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_color2
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_uv_fixer_color2
opuserdata -n '___toolid___' -v 'sop_color' $_obj_geo1_uv_fixer_color2

# Node $_obj_geo1_uv_fixer_noise (Sop/attribvop)
set _obj_geo1_uv_fixer_noise = `run("opadd -e -n -v attribvop noise")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.91273000000000004` $_obj_geo1_uv_fixer_noise
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector points "Modify Points"         "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "freq"  label   "Frequency"     type    float   size    4       default { "1" "1" "1" "1" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "offset"        label   "Offset"        type    float   size    4       default { "0" "0" "0" "0" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "amp"   label   "Amplitude"     type    float   default { "1" }         range   { -1 1 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rough"         label   "Roughness"     type    float   default { "0.5" }       range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_uv_fixer_noise
opparm $_obj_geo1_uv_fixer_noise  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_noise freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_uv_fixer_noise/freq2
chadd -t 0 0 $_obj_geo1_uv_fixer_noise freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_uv_fixer_noise/freq3
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise freq ( 1 freq2 freq3 1 ) amp ( 0.5 )
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_uv_fixer_noise
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_noise
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise
opcf $_obj_geo1_uv_fixer_noise

# Node $_obj_geo1_uv_fixer_noise_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_uv_fixer_noise_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_geo1_uv_fixer_noise_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_noise_geometryvopglobal1

# Node $_obj_geo1_uv_fixer_noise_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_uv_fixer_noise_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 9.8721200000000007` -y `$arg3 + 4.2877400000000003` $_obj_geo1_uv_fixer_noise_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_noise_geometryvopoutput1

# Node $_obj_geo1_uv_fixer_noise_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_uv_fixer_noise_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 5.7316700000000003` -y `$arg3 + 2.5695600000000001` $_obj_geo1_uv_fixer_noise_aaflownoise1
opparm $_obj_geo1_uv_fixer_noise_aaflownoise1 signature ( vp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_aaflownoise1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_noise_aaflownoise1

# Node $_obj_geo1_uv_fixer_noise_vectohvec1 (Vop/vectohvec)
set _obj_geo1_uv_fixer_noise_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 3.7922199999999999` -y `$arg3 + 3.55796` $_obj_geo1_uv_fixer_noise_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_vectohvec1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_vectohvec1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_noise_vectohvec1

# Node $_obj_geo1_uv_fixer_noise_add1 (Vop/add)
set _obj_geo1_uv_fixer_noise_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 7.6962099999999998` -y `$arg3 + 4.5701400000000003` $_obj_geo1_uv_fixer_noise_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_add1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_add1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_add1

# Node $_obj_geo1_uv_fixer_noise_freq (Vop/parameter)
set _obj_geo1_uv_fixer_noise_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 3.0316700000000001` -y `$arg3 + 3.96956` $_obj_geo1_uv_fixer_noise_freq
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_uv_fixer_noise_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_freq
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_freq
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_freq

# Node $_obj_geo1_uv_fixer_noise_offset (Vop/parameter)
set _obj_geo1_uv_fixer_noise_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 3.1316700000000002` -y `$arg3 + 3.7695599999999998` $_obj_geo1_uv_fixer_noise_offset
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_uv_fixer_noise_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_offset
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_offset
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_offset

# Node $_obj_geo1_uv_fixer_noise_amp (Vop/parameter)
set _obj_geo1_uv_fixer_noise_amp = `run("opadd -e -n -v parameter amp")`
oplocate -x `$arg2 + 3.2316699999999998` -y `$arg3 + 3.5695600000000001` $_obj_geo1_uv_fixer_noise_amp
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise_amp parmname ( amp ) parmlabel ( Amplitude ) floatdef ( 1 ) rangeflt ( -1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_uv_fixer_noise_amp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_amp
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_amp
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_amp

# Node $_obj_geo1_uv_fixer_noise_rough (Vop/parameter)
set _obj_geo1_uv_fixer_noise_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 3.3316699999999999` -y `$arg3 + 3.3695599999999999` $_obj_geo1_uv_fixer_noise_rough
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_uv_fixer_noise_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_rough
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_rough
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_rough
opcf ..

# Node $_obj_geo1_uv_fixer_convertline1 (Sop/convertline)
set _obj_geo1_uv_fixer_convertline1 = `run("opadd -e -n -v convertline convertline1")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -9.2699098587036133` $_obj_geo1_uv_fixer_convertline1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_convertline1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_convertline1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_convertline1

# Node $_obj_geo1_uv_fixer_subnet1 (Sop/subnet)
set _obj_geo1_uv_fixer_subnet1 = `run("opadd -e -n -v subnet subnet1")`
oplocate -x `$arg2 + -5.7131891250610352` -y `$arg3 + -13.194344520568848` $_obj_geo1_uv_fixer_subnet1
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        export  dialog     }     parm {         name    "label2"        baseparm        label   "Input #2 Label"        export  dialog     }     parm {         name    "label3"        baseparm        label   "Input #3 Label"        export  dialog     }     parm {         name    "label4"        baseparm        label   "Input #4 Label"        export  dialog     }     parm {         name    "uv_check"      label   "uv_check"      type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "clorize_piece"         label   "clorize_piece"         type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_geo1_uv_fixer_subnet1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet1 uv_check ( on )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_uv_fixer_subnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1
opcf $_obj_geo1_uv_fixer_subnet1

# Node $_obj_geo1_uv_fixer_subnet1_attribwrangle2 (Sop/attribwrangle)
set _obj_geo1_uv_fixer_subnet1_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opparm $_obj_geo1_uv_fixer_subnet1_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_uv_fixer_subnet1_attribwrangle2 class ( primitive ) snippet ( 'int vers[] = primvertices(0, @primnum);\nint length = len(vers);\nint newPts[];\nint pts[];\n\n\nfor(int i=0; i<length; i++)\n{\n    int hedge = vertexhedge(0, vers[i]);\n    \n    int destVer = hedge_dstvertex(0,hedge);\n    \n    float srcPiece = vertex(0,"piece", vers[i]);\n    float destPiece = vertex(0,"piece", destVer);\n    //printf("%d + %d  ",srcPiece, destPiece);\n    \n    int srcPoint = vertexpoint(@OpInput1, vers[i]);\n    int destPoint = vertexpoint(@OpInput1, destVer);\n    \n    //push(pts, srcPoint);\n    \n    if(srcPiece != destPiece)\n    {\n        vector srcP = point(0,"P",srcPoint);\n        vector destP = point(0,"P",destPoint);\n        \n        float srcDist = xyzdist(1, srcP);\n        float destDist = xyzdist(1, destP);\n        \n        float prop = srcDist/(srcDist + destDist);\n        int newPt = addpoint(geoself(), lerp(srcP, destP, prop));\n        push(newPts, newPt);\n        push(pts, newPt);\n        \n    }\n    push(pts,destPoint);\n\n}\n\n//printf("%d ", len(pts));\n\nif(len(newPts)>0)\n{\n    for(int i = 0;i < len(newPts) + 1; i++)\n    {\n        if(len(newPts) == 3)\n        {\n            if(i != len(newPts))\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[i*2]);\n                addvertex(geoself(), newPrim, pts[i*2+1]);\n                if(i*2 + 2 >= len(pts))\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2 - len(pts)]);\n                }\n                else\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2]);\n                }\n            }\n            else\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[0]);\n                addvertex(geoself(), newPrim, pts[2]);\n                addvertex(geoself(), newPrim, pts[4]);\n            }\n            \n        }\n        else if(len(newPts) == 2)\n        {\n            if(pts[0] != newPts[0] && pts[0] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[i]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[i*2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(0,0,1);\n            }\n            else if(pts[2] != newPts[0] && pts[2] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(1,0,0);\n            }\n            else\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                @Cd = set(0,1,0);\n            }\n        }\n    }\n    removeprim(geoself(),@primnum,1);\n}\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet1_attribwrangle2

# Node $_obj_geo1_uv_fixer_subnet1_color3 (Sop/color)
set _obj_geo1_uv_fixer_subnet1_color3 = `run("opadd -e -n -v color color3")`
oplocate -x `$arg2 + 2.5176472663879395` -y `$arg3 + -0.91022348403930664` $_obj_geo1_uv_fixer_subnet1_color3
opparm $_obj_geo1_uv_fixer_subnet1_color3  ramp ( 2 )
opparm $_obj_geo1_uv_fixer_subnet1_color3 class ( 3 ) colortype ( 4 ) rampattribute ( piece ) ramprange ( 0 4 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_color3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_color3
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet1_color3
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_uv_fixer_subnet1_color3
opuserdata -n '___toolid___' -v 'sop_color' $_obj_geo1_uv_fixer_subnet1_color3
opcf ..

# Node $_obj_geo1_uv_fixer_subnet2 (Sop/subnet)
set _obj_geo1_uv_fixer_subnet2 = `run("opadd -e -n -v subnet subnet2")`
oplocate -x `$arg2 + -4.8983566520690918` -y `$arg3 + -14.656028617858887` $_obj_geo1_uv_fixer_subnet2
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        export  all     }     parm {    name    "uv_check"      label   "uv_check"      type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "clorize_piece"         label   "clorize_piece"         type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_geo1_uv_fixer_subnet2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet2 uv_check ( on )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_uv_fixer_subnet2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2
opcf $_obj_geo1_uv_fixer_subnet2

# Node $_obj_geo1_uv_fixer_subnet2_attribwrangle2 (Sop/attribwrangle)
set _obj_geo1_uv_fixer_subnet2_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opparm $_obj_geo1_uv_fixer_subnet2_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_uv_fixer_subnet2_attribwrangle2 class ( primitive ) snippet ( 'int vers[] = primvertices(0, @primnum);\nint length = len(vers);\nint newPts[];\nint pts[];\n\n\nfor(int i=0; i<length; i++)\n{\n    int hedge = vertexhedge(0, vers[i]);\n    \n    int destVer = hedge_dstvertex(0,hedge);\n    \n    float srcPiece = vertex(0,"piece", vers[i]);\n    float destPiece = vertex(0,"piece", destVer);\n    //printf("%d + %d  ",srcPiece, destPiece);\n    \n    int srcPoint = vertexpoint(@OpInput1, vers[i]);\n    int destPoint = vertexpoint(@OpInput1, destVer);\n    \n    //push(pts, srcPoint);\n    \n    if(srcPiece != destPiece)\n    {\n        vector srcP = point(0,"P",srcPoint);\n        vector destP = point(0,"P",destPoint);\n        \n        float srcDist = xyzdist(1, srcP);\n        float destDist = xyzdist(1, destP);\n        \n        float prop = srcDist/(srcDist + destDist);\n        int newPt = addpoint(geoself(), lerp(srcP, destP, prop));\n        push(newPts, newPt);\n        push(pts, newPt);\n        \n    }\n    push(pts,destPoint);\n\n}\n\n//printf("%d ", len(pts));\n\nif(len(newPts)>0)\n{\n    for(int i = 0;i < len(newPts) + 1; i++)\n    {\n        if(len(newPts) == 3)\n        {\n            if(i != len(newPts))\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[i*2]);\n                addvertex(geoself(), newPrim, pts[i*2+1]);\n                if(i*2 + 2 >= len(pts))\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2 - len(pts)]);\n                }\n                else\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2]);\n                }\n            }\n            else\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[0]);\n                addvertex(geoself(), newPrim, pts[2]);\n                addvertex(geoself(), newPrim, pts[4]);\n            }\n            \n        }\n        else if(len(newPts) == 2)\n        {\n            if(pts[0] != newPts[0] && pts[0] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[i]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[i*2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(0,0,1);\n            }\n            else if(pts[2] != newPts[0] && pts[2] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(1,0,0);\n            }\n            else\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                @Cd = set(0,1,0);\n            }\n        }\n    }\n    removeprim(geoself(),@primnum,1);\n}\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet2_attribwrangle2

# Node $_obj_geo1_uv_fixer_subnet2_color3 (Sop/color)
set _obj_geo1_uv_fixer_subnet2_color3 = `run("opadd -e -n -v color color3")`
oplocate -x `$arg2 + 2.5176500000000002` -y `$arg3 + -0.910223` $_obj_geo1_uv_fixer_subnet2_color3
opparm $_obj_geo1_uv_fixer_subnet2_color3  ramp ( 2 )
opparm $_obj_geo1_uv_fixer_subnet2_color3 class ( 3 ) colortype ( 4 ) rampattribute ( piece ) ramprange ( 0 4 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_color3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_color3
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet2_color3
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_uv_fixer_subnet2_color3
opuserdata -n '___toolid___' -v 'sop_color' $_obj_geo1_uv_fixer_subnet2_color3
opcf ..

# Node $_obj_geo1_uv_fixer_subnet3 (Sop/subnet)
set _obj_geo1_uv_fixer_subnet3 = `run("opadd -e -n -v subnet subnet3")`
oplocate -x `$arg2 + -4.4767925498962402` -y `$arg3 + -15.773671974182129` $_obj_geo1_uv_fixer_subnet3
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        export  all     }     parm {    name    "uv_check"      label   "uv_check"      type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "clorize_piece"         label   "clorize_piece"         type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_geo1_uv_fixer_subnet3
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet3 uv_check ( on )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_uv_fixer_subnet3
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3
opcf $_obj_geo1_uv_fixer_subnet3

# Node $_obj_geo1_uv_fixer_subnet3_attribwrangle2 (Sop/attribwrangle)
set _obj_geo1_uv_fixer_subnet3_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opparm $_obj_geo1_uv_fixer_subnet3_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_uv_fixer_subnet3_attribwrangle2 class ( primitive ) snippet ( 'int vers[] = primvertices(0, @primnum);\nint length = len(vers);\nint newPts[];\nint pts[];\n\n\nfor(int i=0; i<length; i++)\n{\n    int hedge = vertexhedge(0, vers[i]);\n    \n    int destVer = hedge_dstvertex(0,hedge);\n    \n    float srcPiece = vertex(0,"piece", vers[i]);\n    float destPiece = vertex(0,"piece", destVer);\n    //printf("%d + %d  ",srcPiece, destPiece);\n    \n    int srcPoint = vertexpoint(@OpInput1, vers[i]);\n    int destPoint = vertexpoint(@OpInput1, destVer);\n    \n    //push(pts, srcPoint);\n    \n    if(srcPiece != destPiece)\n    {\n        vector srcP = point(0,"P",srcPoint);\n        vector destP = point(0,"P",destPoint);\n        \n        float srcDist = xyzdist(1, srcP);\n        float destDist = xyzdist(1, destP);\n        \n        float prop = srcDist/(srcDist + destDist);\n        int newPt = addpoint(geoself(), lerp(srcP, destP, prop));\n        push(newPts, newPt);\n        push(pts, newPt);\n        \n    }\n    push(pts,destPoint);\n\n}\n\n//printf("%d ", len(pts));\n\nif(len(newPts)>0)\n{\n    for(int i = 0;i < len(newPts) + 1; i++)\n    {\n        if(len(newPts) == 3)\n        {\n            if(i != len(newPts))\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[i*2]);\n                addvertex(geoself(), newPrim, pts[i*2+1]);\n                if(i*2 + 2 >= len(pts))\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2 - len(pts)]);\n                }\n                else\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2]);\n                }\n            }\n            else\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[0]);\n                addvertex(geoself(), newPrim, pts[2]);\n                addvertex(geoself(), newPrim, pts[4]);\n            }\n            \n        }\n        else if(len(newPts) == 2)\n        {\n            if(pts[0] != newPts[0] && pts[0] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[i]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[i*2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(0,0,1);\n            }\n            else if(pts[2] != newPts[0] && pts[2] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(1,0,0);\n            }\n            else\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                @Cd = set(0,1,0);\n            }\n        }\n    }\n    removeprim(geoself(),@primnum,1);\n}\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet3_attribwrangle2

# Node $_obj_geo1_uv_fixer_subnet3_color3 (Sop/color)
set _obj_geo1_uv_fixer_subnet3_color3 = `run("opadd -e -n -v color color3")`
oplocate -x `$arg2 + 2.5176500000000002` -y `$arg3 + -0.910223` $_obj_geo1_uv_fixer_subnet3_color3
opparm $_obj_geo1_uv_fixer_subnet3_color3  ramp ( 2 )
opparm $_obj_geo1_uv_fixer_subnet3_color3 class ( 3 ) colortype ( 4 ) rampattribute ( piece ) ramprange ( 0 4 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_color3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_color3
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet3_color3
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_uv_fixer_subnet3_color3
opuserdata -n '___toolid___' -v 'sop_color' $_obj_geo1_uv_fixer_subnet3_color3
opcf ..
opcf ..
opcf $_obj_geo1_uv_fixer
opcf $_obj_geo1_uv_fixer_noise
oporder -e geometryvopglobal1 geometryvopoutput1 aaflownoise1 vectohvec1 add1 freq offset amp rough 
opcf ..

# Node $_obj_geo1_uv_fixer_box1 (Sop/box)
set _obj_geo1_uv_fixer_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_geo1_uv_fixer_box1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_box1 size ( 2 2 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_box1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_box1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_box1

# Node $_obj_geo1_uv_fixer_subdivide1 (Sop/subdivide)
set _obj_geo1_uv_fixer_subdivide1 = `run("opadd -e -n -v subdivide subdivide1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.1093600000000001` $_obj_geo1_uv_fixer_subdivide1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subdivide1 iterations ( 4 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subdivide1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subdivide1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subdivide1

# Node $_obj_geo1_uv_fixer_uvunwrap1 (Sop/uvunwrap)
set _obj_geo1_uv_fixer_uvunwrap1 = `run("opadd -e -n -v uvunwrap uvunwrap1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.0081799999999999` $_obj_geo1_uv_fixer_uvunwrap1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvunwrap1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvunwrap1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_uvunwrap1

# Node $_obj_geo1_uv_fixer_uvquickshade1 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade1 = `run("opadd -e -n -v uvquickshade uvquickshade1")`
oplocate -x `$arg2 + 12.9572` -y `$arg3 + -4.0475099999999999` $_obj_geo1_uv_fixer_uvquickshade1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvquickshade1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade1

# Node $_obj_geo1_uv_fixer_connectivity1 (Sop/connectivity)
set _obj_geo1_uv_fixer_connectivity1 = `run("opadd -e -n -v connectivity connectivity1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -2.0451600000000001` $_obj_geo1_uv_fixer_connectivity1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_connectivity1 connecttype ( prim ) attribname ( piece ) byuv ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_connectivity1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_connectivity1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_connectivity1

# Node $_obj_geo1_uv_fixer_remesh2 (Sop/remesh)
set _obj_geo1_uv_fixer_remesh2 = `run("opadd -e -n -v remesh remesh2")`
oplocate -x `$arg2 + 1` -y `$arg3 + -7.9133199999999997` $_obj_geo1_uv_fixer_remesh2
opparm $_obj_geo1_uv_fixer_remesh2  lfs_ramp ( 2 )
opparm -V 15.5.480 $_obj_geo1_uv_fixer_remesh2 smoothing_level ( 1 ) target_edge ( 0.10000000000000001 ) lfs_ramp1c ( 0 0 1 ) lfs_ramp2pos ( 1 ) lfs_ramp2c ( 1 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_remesh2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_remesh2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_remesh2

# Node $_obj_geo1_uv_fixer_foreach_end1 (Sop/block_end)
set _obj_geo1_uv_fixer_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -5.4491399999999999` $_obj_geo1_uv_fixer_foreach_end1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_foreach_end1 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( piece ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_uv_fixer_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_foreach_end1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_foreach_end1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_foreach_end1

# Node $_obj_geo1_uv_fixer_foreach_begin1 (Sop/block_begin)
set _obj_geo1_uv_fixer_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -3.87643` $_obj_geo1_uv_fixer_foreach_begin1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_foreach_begin1 method ( piece ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_uv_fixer_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_foreach_begin1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_foreach_begin1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_foreach_begin1

# Node $_obj_geo1_uv_fixer_group1 (Sop/group)
set _obj_geo1_uv_fixer_group1 = `run("opadd -e -n -v group group1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -4.6551999999999998` $_obj_geo1_uv_fixer_group1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_group1 rangeend
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$N' $_obj_geo1_uv_fixer_group1/rangeend
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_group1 crname ( edge ) entity ( edge ) switcher2 ( 3 3 3 3 ) groupnumber ( off ) groupedges ( on ) unshared ( on )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_group1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_group1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_group1

# Node $_obj_geo1_uv_fixer_fuse1 (Sop/fuse)
set _obj_geo1_uv_fixer_fuse1 = `run("opadd -e -n -v fuse fuse1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -6.2892599999999996` $_obj_geo1_uv_fixer_fuse1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_fuse1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_fuse1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_fuse1

# Node $_obj_geo1_uv_fixer_uvquickshade3 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade3 = `run("opadd -e -n -v uvquickshade uvquickshade3")`
oplocate -x `$arg2 + 1.01362` -y `$arg3 + -9.8695199999999996` $_obj_geo1_uv_fixer_uvquickshade3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvquickshade3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade3
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade3

# Node $_obj_geo1_uv_fixer_remesh3 (Sop/remesh)
set _obj_geo1_uv_fixer_remesh3 = `run("opadd -e -n -v remesh remesh3")`
oplocate -x `$arg2 + 9.3443900000000006` -y `$arg3 + -4.0475099999999999` $_obj_geo1_uv_fixer_remesh3
opparm $_obj_geo1_uv_fixer_remesh3  lfs_ramp ( 2 )
opparm -V 15.5.480 $_obj_geo1_uv_fixer_remesh3 hard_edges ( * ) target_edge ( 0.10000000000000001 ) lfs_ramp1c ( 0 0 1 ) lfs_ramp2pos ( 1 ) lfs_ramp2c ( 1 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_remesh3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_remesh3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_remesh3

# Node $_obj_geo1_uv_fixer_uvquickshade4 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade4 = `run("opadd -e -n -v uvquickshade uvquickshade4")`
oplocate -x `$arg2 + 9.3443900000000006` -y `$arg3 + -5.6973000000000003` $_obj_geo1_uv_fixer_uvquickshade4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvquickshade4
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade4
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade4

# Node $_obj_geo1_uv_fixer_vertexsplit1 (Sop/vertexsplit)
set _obj_geo1_uv_fixer_vertexsplit1 = `run("opadd -e -n -v vertexsplit vertexsplit1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -7.1037699999999999` $_obj_geo1_uv_fixer_vertexsplit1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_vertexsplit1 attribname ( uv )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_vertexsplit1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_vertexsplit1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_vertexsplit1

# Node $_obj_geo1_uv_fixer_fuse2 (Sop/fuse)
set _obj_geo1_uv_fixer_fuse2 = `run("opadd -e -n -v fuse fuse2")`
oplocate -x `$arg2 + 1` -y `$arg3 + -9.0577199999999998` $_obj_geo1_uv_fixer_fuse2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_fuse2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_fuse2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_fuse2

# Node $_obj_geo1_uv_fixer_attribpromote1 (Sop/attribpromote)
set _obj_geo1_uv_fixer_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + -3.6851000785827637` -y `$arg3 + -2.7654500007629395` $_obj_geo1_uv_fixer_attribpromote1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_attribpromote1 inname ( piece ) inclass ( primitive ) outclass ( vertex ) method ( first )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_attribpromote1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_attribpromote1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_attribpromote1

# Node $_obj_geo1_uv_fixer_convertvdb1 (Sop/convertvdb)
set _obj_geo1_uv_fixer_convertvdb1 = `run("opadd -e -n -v convertvdb convertvdb1")`
oplocate -x `$arg2 + -9.3327799999999996` -y `$arg3 + -5.7664099999999996` $_obj_geo1_uv_fixer_convertvdb1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_convertvdb1 conversion ( poly ) adaptivity ( 1.6739999999999999 ) transferattributes ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_convertvdb1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_convertvdb1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_convertvdb1

# Node $_obj_geo1_uv_fixer_vdbfrompolygons1 (Sop/vdbfrompolygons)
set _obj_geo1_uv_fixer_vdbfrompolygons1 = `run("opadd -e -n -v vdbfrompolygons vdbfrompolygons1")`
oplocate -x `$arg2 + -10.307087898254395` -y `$arg3 + -4.5771198272705078` $_obj_geo1_uv_fixer_vdbfrompolygons1
opparm $_obj_geo1_uv_fixer_vdbfrompolygons1  numattrib ( 0 )
opparm -V 15.5.480 $_obj_geo1_uv_fixer_vdbfrompolygons1 voxelsize ( 0.0050000000000000001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_vdbfrompolygons1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_vdbfrompolygons1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_vdbfrompolygons1

# Node $_obj_geo1_uv_fixer_uvquickshade6 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade6 = `run("opadd -e -n -v uvquickshade uvquickshade6")`
oplocate -x `$arg2 + -9.3327798843383789` -y `$arg3 + -9.6241550445556641` $_obj_geo1_uv_fixer_uvquickshade6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_uvquickshade6
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade6
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade6

# Node $_obj_geo1_uv_fixer_attribtransfer1 (Sop/attribtransfer)
set _obj_geo1_uv_fixer_attribtransfer1 = `run("opadd -e -n -v attribtransfer attribtransfer1")`
oplocate -x `$arg2 + -9.3327799999999996` -y `$arg3 + -7.8936200000000003` $_obj_geo1_uv_fixer_attribtransfer1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_attribtransfer1 cardswitcher ( 1 1 ) primitiveattribs ( off ) pointattribs ( off ) vertexattribs ( on ) vertexattriblist ( 'uv piece' ) copyvariable ( off ) thresholddist ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_attribtransfer1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_attribtransfer1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_attribtransfer1

# Node $_obj_geo1_uv_fixer_divide1 (Sop/divide)
set _obj_geo1_uv_fixer_divide1 = `run("opadd -e -n -v divide divide1")`
oplocate -x `$arg2 + -9.3327799999999996` -y `$arg3 + -6.6151400000000002` $_obj_geo1_uv_fixer_divide1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_divide1 noslivers ( on ) avoidsmallangles ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_divide1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_divide1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_divide1

# Node $_obj_geo1_uv_fixer_attribcast1 (Sop/attribcast)
set _obj_geo1_uv_fixer_attribcast1 = `run("opadd -e -n -v attribcast attribcast1")`
oplocate -x `$arg2 + -3.6850999999999998` -y `$arg3 + -4.1086099999999997` $_obj_geo1_uv_fixer_attribcast1
opparm $_obj_geo1_uv_fixer_attribcast1  numcasts ( 1 )
opparm -V 15.5.480 $_obj_geo1_uv_fixer_attribcast1 class1 ( vertex ) attribs1 ( piece )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_attribcast1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_attribcast1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_attribcast1

# Node $_obj_geo1_uv_fixer_foreach_end2 (Sop/block_end)
set _obj_geo1_uv_fixer_foreach_end2 = `run("opadd -e -n -v block_end foreach_end2")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -7.4022445678710938` $_obj_geo1_uv_fixer_foreach_end2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_foreach_end2 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( piece ) blockpath ( ../foreach_begin2 ) templatepath ( ../foreach_begin2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_uv_fixer_foreach_end2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_foreach_end2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_foreach_end2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_foreach_end2

# Node $_obj_geo1_uv_fixer_foreach_begin2 (Sop/block_begin)
set _obj_geo1_uv_fixer_foreach_begin2 = `run("opadd -e -n -v block_begin foreach_begin2")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -5.2711033821105957` $_obj_geo1_uv_fixer_foreach_begin2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_foreach_begin2 method ( piece ) blockpath ( ../foreach_end2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_uv_fixer_foreach_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_foreach_begin2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_foreach_begin2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_foreach_begin2

# Node $_obj_geo1_uv_fixer_group2 (Sop/group)
set _obj_geo1_uv_fixer_group2 = `run("opadd -e -n -v group group2")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -6.0703954696655273` $_obj_geo1_uv_fixer_group2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_group2 rangeend
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$N' $_obj_geo1_uv_fixer_group2/rangeend
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_group2 crname ( edge ) entity ( edge ) switcher2 ( 3 3 3 3 ) groupnumber ( off ) groupedges ( on ) unshared ( on )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_group2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_group2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_group2

# Node $_obj_geo1_uv_fixer_dissolve1 (Sop/dissolve::2.0)
set _obj_geo1_uv_fixer_dissolve1 = `run("opadd -e -n -v dissolve::2.0 dissolve1")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -8.4151134490966797` $_obj_geo1_uv_fixer_dissolve1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_dissolve1 group ( edge ) invertsel ( keep ) reminlinepts ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_dissolve1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_dissolve1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_dissolve1

# Node $_obj_geo1_uv_fixer_uvquickshade8 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade8 = `run("opadd -e -n -v uvquickshade uvquickshade8")`
oplocate -x `$arg2 + -3.6851000785827637` -y `$arg3 + -3.425006628036499` $_obj_geo1_uv_fixer_uvquickshade8
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvquickshade8
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade8
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade8
opcf $_obj_geo1_uv_fixer_subnet1

# Node $_obj_geo1_uv_fixer_subnet1_uvquickshade7 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_subnet1_uvquickshade7 = `run("opadd -e -n -v uvquickshade uvquickshade7")`
oplocate -x `$arg2 + 2.8235292434692383` -y `$arg3 + 1.2404530048370361` $_obj_geo1_uv_fixer_subnet1_uvquickshade7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_uvquickshade7
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_uvquickshade7
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet1_uvquickshade7

# Node $_obj_geo1_uv_fixer_subnet1_attribtransfer2 (Sop/attribtransfer)
set _obj_geo1_uv_fixer_subnet1_attribtransfer2 = `run("opadd -e -n -v attribtransfer attribtransfer2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.5065000000000008` $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet1_attribtransfer2 cardswitcher ( 1 1 ) primitiveattribs ( off ) pointattribs ( off ) vertexattribs ( on ) vertexattriblist ( 'uv piece' ) copyvariable ( off ) kernelradius ( 0.10000000000000001 ) threshold ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_attribtransfer2

# Node $_obj_geo1_uv_fixer_subnet1_fuse3 (Sop/fuse)
set _obj_geo1_uv_fixer_subnet1_fuse3 = `run("opadd -e -n -v fuse fuse3")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.8710000000000004` $_obj_geo1_uv_fixer_subnet1_fuse3
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet1_fuse3 dist ( 0.0001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_fuse3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_fuse3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_fuse3

# Node $_obj_geo1_uv_fixer_subnet1_output1 (Sop/output)
set _obj_geo1_uv_fixer_subnet1_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.1667292358398438` -y `$arg3 + -2.9095188274383545` $_obj_geo1_uv_fixer_subnet1_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_output1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_output1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_output1

# Node $_obj_geo1_uv_fixer_subnet1_switch1 (Sop/switch)
set _obj_geo1_uv_fixer_subnet1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.1667294502258301` -y `$arg3 + -1.9918718338012695` $_obj_geo1_uv_fixer_subnet1_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet1_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../clorize_piece")' $_obj_geo1_uv_fixer_subnet1_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_switch1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_switch1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_switch1

# Node $_obj_geo1_uv_fixer_subnet1_switch2 (Sop/switch)
set _obj_geo1_uv_fixer_subnet1_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.52901172637939453` $_obj_geo1_uv_fixer_subnet1_switch2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet1_switch2 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../uv_check")' $_obj_geo1_uv_fixer_subnet1_switch2/input
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet1_switch2 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_switch2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_switch2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_switch2
oporder -e attribwrangle2 color3 uvquickshade7 attribtransfer2 fuse3 output1 switch1 switch2 
opcf ..

# Node $_obj_geo1_uv_fixer_ray1 (Sop/ray)
set _obj_geo1_uv_fixer_ray1 = `run("opadd -e -n -v ray ray1")`
oplocate -x `$arg2 + -2.4993896484375` -y `$arg3 + -11.242351531982422` $_obj_geo1_uv_fixer_ray1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_ray1 dirx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_uv_fixer_ray1/dirx
chadd -t 0 0 $_obj_geo1_uv_fixer_ray1 diry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_uv_fixer_ray1/diry
chadd -t 0 0 $_obj_geo1_uv_fixer_ray1 dirz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_uv_fixer_ray1/dirz
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_ray1 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_ray1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_ray1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_ray1

# Node $_obj_geo1_uv_fixer_null1 (Sop/null)
set _obj_geo1_uv_fixer_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -2.4993886947631836` -y `$arg3 + -11.988811492919922` $_obj_geo1_uv_fixer_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_null1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_null1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_null1

# Node $_obj_geo1_uv_fixer_ray2 (Sop/ray)
set _obj_geo1_uv_fixer_ray2 = `run("opadd -e -n -v ray ray2")`
oplocate -x `$arg2 + -8.6422478912353515` -y `$arg3 + -11.761212219238281` $_obj_geo1_uv_fixer_ray2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_ray2 dirx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_uv_fixer_ray2/dirx
chadd -t 0 0 $_obj_geo1_uv_fixer_ray2 diry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_uv_fixer_ray2/diry
chadd -t 0 0 $_obj_geo1_uv_fixer_ray2 dirz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_uv_fixer_ray2/dirz
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_ray2 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_ray2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_ray2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_ray2

# Node $_obj_geo1_uv_fixer_ray3 (Sop/ray)
set _obj_geo1_uv_fixer_ray3 = `run("opadd -e -n -v ray ray3")`
oplocate -x `$arg2 + -5.4212689399719238` -y `$arg3 + -11.595293045043945` $_obj_geo1_uv_fixer_ray3
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_ray3 dirx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_uv_fixer_ray3/dirx
chadd -t 0 0 $_obj_geo1_uv_fixer_ray3 diry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_uv_fixer_ray3/diry
chadd -t 0 0 $_obj_geo1_uv_fixer_ray3 dirz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_uv_fixer_ray3/dirz
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_ray3 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_ray3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_ray3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_ray3
opcf $_obj_geo1_uv_fixer_subnet2

# Node $_obj_geo1_uv_fixer_subnet2_uvquickshade7 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_subnet2_uvquickshade7 = `run("opadd -e -n -v uvquickshade uvquickshade7")`
oplocate -x `$arg2 + 2.8235299999999999` -y `$arg3 + 1.2404500000000001` $_obj_geo1_uv_fixer_subnet2_uvquickshade7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_uvquickshade7
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_uvquickshade7
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet2_uvquickshade7

# Node $_obj_geo1_uv_fixer_subnet2_attribtransfer2 (Sop/attribtransfer)
set _obj_geo1_uv_fixer_subnet2_attribtransfer2 = `run("opadd -e -n -v attribtransfer attribtransfer2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.5065` $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet2_attribtransfer2 cardswitcher ( 1 1 ) primitiveattribs ( off ) pointattribs ( off ) vertexattribs ( on ) vertexattriblist ( 'uv piece' ) copyvariable ( off ) kernelradius ( 0.10000000000000001 ) threshold ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_attribtransfer2

# Node $_obj_geo1_uv_fixer_subnet2_fuse3 (Sop/fuse)
set _obj_geo1_uv_fixer_subnet2_fuse3 = `run("opadd -e -n -v fuse fuse3")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.871` $_obj_geo1_uv_fixer_subnet2_fuse3
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet2_fuse3 dist ( 0.0001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_fuse3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_fuse3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_fuse3

# Node $_obj_geo1_uv_fixer_subnet2_output1 (Sop/output)
set _obj_geo1_uv_fixer_subnet2_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.16673` -y `$arg3 + -2.9095200000000001` $_obj_geo1_uv_fixer_subnet2_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_output1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_output1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_output1

# Node $_obj_geo1_uv_fixer_subnet2_switch1 (Sop/switch)
set _obj_geo1_uv_fixer_subnet2_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.16673` -y `$arg3 + -1.99187` $_obj_geo1_uv_fixer_subnet2_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet2_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../clorize_piece")' $_obj_geo1_uv_fixer_subnet2_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_switch1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_switch1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_switch1

# Node $_obj_geo1_uv_fixer_subnet2_switch2 (Sop/switch)
set _obj_geo1_uv_fixer_subnet2_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.52901200000000004` $_obj_geo1_uv_fixer_subnet2_switch2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet2_switch2 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../uv_check")' $_obj_geo1_uv_fixer_subnet2_switch2/input
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet2_switch2 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_switch2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_switch2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_switch2
oporder -e attribwrangle2 color3 uvquickshade7 attribtransfer2 fuse3 output1 switch1 switch2 
opcf ..
opcf $_obj_geo1_uv_fixer_subnet3

# Node $_obj_geo1_uv_fixer_subnet3_uvquickshade7 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_subnet3_uvquickshade7 = `run("opadd -e -n -v uvquickshade uvquickshade7")`
oplocate -x `$arg2 + 2.8235299999999999` -y `$arg3 + 1.2404500000000001` $_obj_geo1_uv_fixer_subnet3_uvquickshade7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_uvquickshade7
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_uvquickshade7
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet3_uvquickshade7

# Node $_obj_geo1_uv_fixer_subnet3_attribtransfer2 (Sop/attribtransfer)
set _obj_geo1_uv_fixer_subnet3_attribtransfer2 = `run("opadd -e -n -v attribtransfer attribtransfer2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.5065` $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet3_attribtransfer2 cardswitcher ( 1 1 ) primitiveattribs ( off ) pointattribs ( off ) vertexattribs ( on ) vertexattriblist ( 'uv piece' ) copyvariable ( off ) kernelradius ( 0.10000000000000001 ) threshold ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_attribtransfer2

# Node $_obj_geo1_uv_fixer_subnet3_fuse3 (Sop/fuse)
set _obj_geo1_uv_fixer_subnet3_fuse3 = `run("opadd -e -n -v fuse fuse3")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.871` $_obj_geo1_uv_fixer_subnet3_fuse3
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet3_fuse3 dist ( 0.0001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_fuse3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_fuse3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_fuse3

# Node $_obj_geo1_uv_fixer_subnet3_output1 (Sop/output)
set _obj_geo1_uv_fixer_subnet3_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.16673` -y `$arg3 + -2.9095200000000001` $_obj_geo1_uv_fixer_subnet3_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_output1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_output1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_output1

# Node $_obj_geo1_uv_fixer_subnet3_switch1 (Sop/switch)
set _obj_geo1_uv_fixer_subnet3_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.16673` -y `$arg3 + -1.99187` $_obj_geo1_uv_fixer_subnet3_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet3_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../clorize_piece")' $_obj_geo1_uv_fixer_subnet3_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_switch1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_switch1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_switch1

# Node $_obj_geo1_uv_fixer_subnet3_switch2 (Sop/switch)
set _obj_geo1_uv_fixer_subnet3_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.52901200000000004` $_obj_geo1_uv_fixer_subnet3_switch2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet3_switch2 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../uv_check")' $_obj_geo1_uv_fixer_subnet3_switch2/input
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet3_switch2 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_switch2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_switch2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_switch2
oporder -e attribwrangle2 color3 uvquickshade7 attribtransfer2 fuse3 output1 switch1 switch2 
opcf ..
oporder -e color2 noise box1 subdivide1 uvunwrap1 uvquickshade1 connectivity1 remesh2 foreach_end1 foreach_begin1 group1 fuse1 uvquickshade3 remesh3 uvquickshade4 vertexsplit1 fuse2 attribpromote1 convertvdb1 vdbfrompolygons1 uvquickshade6 attribtransfer1 divide1 attribcast1 foreach_end2 foreach_begin2 group2 dissolve1 convertline1 uvquickshade8 subnet1 ray1 null1 ray2 ray3 subnet2 subnet3 
opcf ..
opset -p on $_obj_geo1_uv_fixer

opcf $arg1
opcf $_obj_geo1_uv_fixer
opwire -n $_obj_geo1_uv_fixer_attribtransfer1 -0 $_obj_geo1_uv_fixer_color2
opwire -n $_obj_geo1_uv_fixer_uvunwrap1 -0 $_obj_geo1_uv_fixer_noise
opcf $_obj_geo1_uv_fixer_noise
opwire -n $_obj_geo1_uv_fixer_noise_add1 -0 $_obj_geo1_uv_fixer_noise_geometryvopoutput1
opwire -n $_obj_geo1_uv_fixer_noise_vectohvec1 -0 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_freq -1 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_offset -2 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_amp -3 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_rough -4 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_geometryvopglobal1 -0 $_obj_geo1_uv_fixer_noise_vectohvec1
opwire -n $_obj_geo1_uv_fixer_noise_geometryvopglobal1 -0 $_obj_geo1_uv_fixer_noise_add1
opwire -n $_obj_geo1_uv_fixer_noise_aaflownoise1 -1 $_obj_geo1_uv_fixer_noise_add1
opcf ..
opwire -n $_obj_geo1_uv_fixer_box1 -0 $_obj_geo1_uv_fixer_subdivide1
opwire -n $_obj_geo1_uv_fixer_subdivide1 -0 $_obj_geo1_uv_fixer_uvunwrap1
opwire -n $_obj_geo1_uv_fixer_noise -0 $_obj_geo1_uv_fixer_uvquickshade1
opwire -n $_obj_geo1_uv_fixer_noise -0 $_obj_geo1_uv_fixer_connectivity1
opwire -n $_obj_geo1_uv_fixer_vertexsplit1 -0 $_obj_geo1_uv_fixer_remesh2
opwire -n $_obj_geo1_uv_fixer_group1 -0 $_obj_geo1_uv_fixer_foreach_end1
opwire -n $_obj_geo1_uv_fixer_connectivity1 -0 $_obj_geo1_uv_fixer_foreach_begin1
opwire -n $_obj_geo1_uv_fixer_foreach_begin1 -0 $_obj_geo1_uv_fixer_group1
opwire -n $_obj_geo1_uv_fixer_foreach_end1 -0 $_obj_geo1_uv_fixer_fuse1
opwire -n $_obj_geo1_uv_fixer_fuse2 -0 $_obj_geo1_uv_fixer_uvquickshade3
opwire -n $_obj_geo1_uv_fixer_noise -0 $_obj_geo1_uv_fixer_remesh3
opwire -n $_obj_geo1_uv_fixer_remesh3 -0 $_obj_geo1_uv_fixer_uvquickshade4
opwire -n $_obj_geo1_uv_fixer_fuse1 -0 $_obj_geo1_uv_fixer_vertexsplit1
opwire -n $_obj_geo1_uv_fixer_remesh2 -0 $_obj_geo1_uv_fixer_fuse2
opwire -n $_obj_geo1_uv_fixer_connectivity1 -0 $_obj_geo1_uv_fixer_attribpromote1
opwire -n $_obj_geo1_uv_fixer_vdbfrompolygons1 -0 $_obj_geo1_uv_fixer_convertvdb1
opwire -n $_obj_geo1_uv_fixer_attribcast1 -1 $_obj_geo1_uv_fixer_convertvdb1
opwire -n $_obj_geo1_uv_fixer_attribcast1 -0 $_obj_geo1_uv_fixer_vdbfrompolygons1
opwire -n $_obj_geo1_uv_fixer_color2 -0 $_obj_geo1_uv_fixer_uvquickshade6
opwire -n $_obj_geo1_uv_fixer_divide1 -0 $_obj_geo1_uv_fixer_attribtransfer1
opwire -n $_obj_geo1_uv_fixer_attribcast1 -1 $_obj_geo1_uv_fixer_attribtransfer1
opwire -n $_obj_geo1_uv_fixer_convertvdb1 -0 $_obj_geo1_uv_fixer_divide1
opwire -n $_obj_geo1_uv_fixer_uvquickshade8 -0 $_obj_geo1_uv_fixer_attribcast1
opwire -n $_obj_geo1_uv_fixer_group2 -0 $_obj_geo1_uv_fixer_foreach_end2
opwire -n $_obj_geo1_uv_fixer_connectivity1 -0 $_obj_geo1_uv_fixer_foreach_begin2
opwire -n $_obj_geo1_uv_fixer_foreach_begin2 -0 $_obj_geo1_uv_fixer_group2
opwire -n $_obj_geo1_uv_fixer_foreach_end2 -0 $_obj_geo1_uv_fixer_dissolve1
opwire -n $_obj_geo1_uv_fixer_dissolve1 -0 $_obj_geo1_uv_fixer_convertline1
opwire -n $_obj_geo1_uv_fixer_attribpromote1 -0 $_obj_geo1_uv_fixer_uvquickshade8
opwire -n $_obj_geo1_uv_fixer_ray2 -0 $_obj_geo1_uv_fixer_subnet1
opwire -n $_obj_geo1_uv_fixer_null1 -1 $_obj_geo1_uv_fixer_subnet1
opwire -n $_obj_geo1_uv_fixer_ray3 -2 $_obj_geo1_uv_fixer_subnet1
opcf $_obj_geo1_uv_fixer_subnet1
opwire -n -i 0 -0 $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opwire -n -i 1 -1 $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opwire -n $_obj_geo1_uv_fixer_subnet1_switch2 -0 $_obj_geo1_uv_fixer_subnet1_color3
opwire -n $_obj_geo1_uv_fixer_subnet1_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet1_uvquickshade7
opwire -n $_obj_geo1_uv_fixer_subnet1_fuse3 -0 $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opwire -n -i 2 -1 $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opwire -n $_obj_geo1_uv_fixer_subnet1_attribwrangle2 -0 $_obj_geo1_uv_fixer_subnet1_fuse3
opwire -n $_obj_geo1_uv_fixer_subnet1_switch1 -0 $_obj_geo1_uv_fixer_subnet1_output1
opwire -n $_obj_geo1_uv_fixer_subnet1_switch2 -0 $_obj_geo1_uv_fixer_subnet1_switch1
opwire -n $_obj_geo1_uv_fixer_subnet1_color3 -1 $_obj_geo1_uv_fixer_subnet1_switch1
opwire -n $_obj_geo1_uv_fixer_subnet1_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet1_switch2
opwire -n $_obj_geo1_uv_fixer_subnet1_uvquickshade7 -1 $_obj_geo1_uv_fixer_subnet1_switch2
opcf ..
opwire -n $_obj_geo1_uv_fixer_convertline1 -0 $_obj_geo1_uv_fixer_ray1
opwire -n $_obj_geo1_uv_fixer_uvquickshade6 -1 $_obj_geo1_uv_fixer_ray1
opwire -n $_obj_geo1_uv_fixer_ray1 -0 $_obj_geo1_uv_fixer_null1
opwire -n $_obj_geo1_uv_fixer_uvquickshade6 -0 $_obj_geo1_uv_fixer_ray2
opwire -n $_obj_geo1_uv_fixer_attribcast1 -1 $_obj_geo1_uv_fixer_ray2
opwire -n $_obj_geo1_uv_fixer_attribcast1 -0 $_obj_geo1_uv_fixer_ray3
opwire -n $_obj_geo1_uv_fixer_uvquickshade6 -1 $_obj_geo1_uv_fixer_ray3
opwire -n $_obj_geo1_uv_fixer_subnet1 -0 $_obj_geo1_uv_fixer_subnet2
opwire -n $_obj_geo1_uv_fixer_null1 -1 $_obj_geo1_uv_fixer_subnet2
opwire -n $_obj_geo1_uv_fixer_ray3 -2 $_obj_geo1_uv_fixer_subnet2
opcf $_obj_geo1_uv_fixer_subnet2
opwire -n -i 0 -0 $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opwire -n -i 1 -1 $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opwire -n $_obj_geo1_uv_fixer_subnet2_switch2 -0 $_obj_geo1_uv_fixer_subnet2_color3
opwire -n $_obj_geo1_uv_fixer_subnet2_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet2_uvquickshade7
opwire -n $_obj_geo1_uv_fixer_subnet2_fuse3 -0 $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opwire -n -i 2 -1 $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opwire -n $_obj_geo1_uv_fixer_subnet2_attribwrangle2 -0 $_obj_geo1_uv_fixer_subnet2_fuse3
opwire -n $_obj_geo1_uv_fixer_subnet2_switch1 -0 $_obj_geo1_uv_fixer_subnet2_output1
opwire -n $_obj_geo1_uv_fixer_subnet2_switch2 -0 $_obj_geo1_uv_fixer_subnet2_switch1
opwire -n $_obj_geo1_uv_fixer_subnet2_color3 -1 $_obj_geo1_uv_fixer_subnet2_switch1
opwire -n $_obj_geo1_uv_fixer_subnet2_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet2_switch2
opwire -n $_obj_geo1_uv_fixer_subnet2_uvquickshade7 -1 $_obj_geo1_uv_fixer_subnet2_switch2
opcf ..
opwire -n $_obj_geo1_uv_fixer_subnet2 -0 $_obj_geo1_uv_fixer_subnet3
opwire -n $_obj_geo1_uv_fixer_null1 -1 $_obj_geo1_uv_fixer_subnet3
opwire -n $_obj_geo1_uv_fixer_ray3 -2 $_obj_geo1_uv_fixer_subnet3
opcf $_obj_geo1_uv_fixer_subnet3
opwire -n -i 0 -0 $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opwire -n -i 1 -1 $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opwire -n $_obj_geo1_uv_fixer_subnet3_switch2 -0 $_obj_geo1_uv_fixer_subnet3_color3
opwire -n $_obj_geo1_uv_fixer_subnet3_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet3_uvquickshade7
opwire -n $_obj_geo1_uv_fixer_subnet3_fuse3 -0 $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opwire -n -i 2 -1 $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opwire -n $_obj_geo1_uv_fixer_subnet3_attribwrangle2 -0 $_obj_geo1_uv_fixer_subnet3_fuse3
opwire -n $_obj_geo1_uv_fixer_subnet3_switch1 -0 $_obj_geo1_uv_fixer_subnet3_output1
opwire -n $_obj_geo1_uv_fixer_subnet3_switch2 -0 $_obj_geo1_uv_fixer_subnet3_switch1
opwire -n $_obj_geo1_uv_fixer_subnet3_color3 -1 $_obj_geo1_uv_fixer_subnet3_switch1
opwire -n $_obj_geo1_uv_fixer_subnet3_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet3_switch2
opwire -n $_obj_geo1_uv_fixer_subnet3_uvquickshade7 -1 $_obj_geo1_uv_fixer_subnet3_switch2
opcf ..
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_uv_fixer
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_uv_fixer
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="colorize" label="colorize" icon="SOP_color">
    <script scriptType="python"><![CDATA[import colorize

colorize.execute()]]></script>
  </tool>

  <tool name="recursiveReferenceCopy" label="recursiveReferenceCopy" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import recursiveReferenceCopy

reload(recursiveReferenceCopy)

recursiveReferenceCopy.execute()]]></script>
  </tool>

  <tool name="disconnectOutputNodes" label="disconnectOutputNodes" icon="SOP_join">
    <script scriptType="python"><![CDATA[import disconnectOutputNodes

disconnectOutputNodes.execute()]]></script>
  </tool>

  <tool name="attribvop0" label="noise_1d" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribvop</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Tuesday November 08, 22:40 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_noise_1d (Sop/attribvop)
set _obj_geo1_noise_1d = `run("opadd -e -n -v attribvop noise_1d")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_noise_1d
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector points "Modify Points"         "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "freq"  label   "Frequency"     type    float   size    4       default { "1" "1" "1" "1" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "offset"        label   "Offset"        type    float   size    4       default { "0" "0" "0" "0" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "amp"   label   "Amplitude"     type    float   default { "1" }         range   { -1 1 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rough"         label   "Roughness"     type    float   default { "0.5" }       range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "ramp"  label   "ramp"  type    ramp_flt        default { "2" }         range   { 1! 10 }       export  none    parmtag { "parmvop" "1" }       parmtag { "rampbasis_var" "ramp_the_basis_strings" }    parmtag { "rampbasisdefault" "linear" }         parmtag { "rampkeys_var" "ramp_the_key_positions" }     parmtag { "rampshowcontrolsdefault" "1" }       parmtag { "rampvalues_var" "ramp_the_key_values" }      parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_noise_1d
opparm $_obj_geo1_noise_1d  bindings ( 0 ) groupbindings ( 0 ) ramp ( 2 )
chblockbegin
chadd -t 0 0 $_obj_geo1_noise_1d freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise_1d/freq2
chadd -t 0 0 $_obj_geo1_noise_1d freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise_1d/freq3
chblockend
opparm -V 15.5.480 $_obj_geo1_noise_1d freq ( 1 freq2 freq3 1 ) ramp2pos ( 1 ) ramp2value ( 1 )
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_noise_1d
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_noise_1d
opexprlanguage -s hscript $_obj_geo1_noise_1d
opcf $_obj_geo1_noise_1d

# Node $_obj_geo1_noise_1d_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_noise_1d_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 2.9616677732799999` -y `$arg3 + 1.69100370842` $_obj_geo1_noise_1d_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_noise_1d_geometryvopglobal1

# Node $_obj_geo1_noise_1d_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_noise_1d_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 12.87767219543457` -y `$arg3 + 2.8490509986877441` $_obj_geo1_noise_1d_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_noise_1d_geometryvopoutput1

# Node $_obj_geo1_noise_1d_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_noise_1d_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 6.7875505371045` -y `$arg3 + 2.2842508983614001` $_obj_geo1_noise_1d_aaflownoise1
opparm $_obj_geo1_noise_1d_aaflownoise1 signature ( fp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_noise_1d_aaflownoise1

# Node $_obj_geo1_noise_1d_vectohvec1 (Vop/vectohvec)
set _obj_geo1_noise_1d_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 4.8480950279187001` -y `$arg3 + 3.2726506423952002` $_obj_geo1_noise_1d_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_vectohvec1
opexprlanguage -s hscript $_obj_geo1_noise_1d_vectohvec1

# Node $_obj_geo1_noise_1d_freq (Vop/parameter)
set _obj_geo1_noise_1d_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 4.0875505490253996` -y `$arg3 + 3.6842508745195` $_obj_geo1_noise_1d_freq
opparm -V 15.5.480 $_obj_geo1_noise_1d_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_freq
opexprlanguage -s hscript $_obj_geo1_noise_1d_freq

# Node $_obj_geo1_noise_1d_offset (Vop/parameter)
set _obj_geo1_noise_1d_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 4.1875505132626003` -y `$arg3 + 3.4842509460450999` $_obj_geo1_noise_1d_offset
opparm -V 15.5.480 $_obj_geo1_noise_1d_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_offset
opexprlanguage -s hscript $_obj_geo1_noise_1d_offset

# Node $_obj_geo1_noise_1d_amp (Vop/parameter)
set _obj_geo1_noise_1d_amp = `run("opadd -e -n -v parameter amp")`
oplocate -x `$arg2 + 4.2875505371045` -y `$arg3 + 3.2842508983614001` $_obj_geo1_noise_1d_amp
opparm -V 15.5.480 $_obj_geo1_noise_1d_amp parmname ( amp ) parmlabel ( Amplitude ) floatdef ( 1 ) rangeflt ( -1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_amp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_amp
opexprlanguage -s hscript $_obj_geo1_noise_1d_amp

# Node $_obj_geo1_noise_1d_rough (Vop/parameter)
set _obj_geo1_noise_1d_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 4.387550531144` -y `$arg3 + 3.0842509102823001` $_obj_geo1_noise_1d_rough
opparm -V 15.5.480 $_obj_geo1_noise_1d_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_rough
opexprlanguage -s hscript $_obj_geo1_noise_1d_rough

# Node $_obj_geo1_noise_1d_fit1 (Vop/fit)
set _obj_geo1_noise_1d_fit1 = `run("opadd -e -n -v fit fit1")`
oplocate -x `$arg2 + 8.498382568359375` -y `$arg3 + 2.8490509986877441` $_obj_geo1_noise_1d_fit1
opparm $_obj_geo1_noise_1d_fit1 srcmin ( -0.5 ) srcmax ( 0.5 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_fit1
opexprlanguage -s hscript $_obj_geo1_noise_1d_fit1

# Node $_obj_geo1_noise_1d_ramp1 (Vop/rampparm)
set _obj_geo1_noise_1d_ramp1 = `run("opadd -e -n -v rampparm ramp1")`
oplocate -x `$arg2 + 10.572565078735352` -y `$arg3 + 2.7078509330749512` $_obj_geo1_noise_1d_ramp1
opparm -V 15.5.480 $_obj_geo1_noise_1d_ramp1 ramptype ( flt )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_ramp1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_ramp1
opexprlanguage -s hscript $_obj_geo1_noise_1d_ramp1
opcf ..
opcf $_obj_geo1_noise_1d
oporder -e geometryvopglobal1 geometryvopoutput1 aaflownoise1 vectohvec1 freq offset amp rough fit1 ramp1 
opcf ..
opset -p on $_obj_geo1_noise_1d

opcf $arg1
opcf $_obj_geo1_noise_1d
opwire -n $_obj_geo1_noise_1d_ramp1 -3 $_obj_geo1_noise_1d_geometryvopoutput1
opwire -n $_obj_geo1_noise_1d_vectohvec1 -0 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_freq -1 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_offset -2 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_amp -3 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_rough -4 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_geometryvopglobal1 -0 $_obj_geo1_noise_1d_vectohvec1
opwire -n $_obj_geo1_noise_1d_aaflownoise1 -0 $_obj_geo1_noise_1d_fit1
opwire -n $_obj_geo1_noise_1d_fit1 -0 $_obj_geo1_noise_1d_ramp1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_noise_1d
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_noise_1d
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet0" label="mix_to_noise" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Tuesday November 08, 22:50 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_mix_to_noise (Sop/subnet)
set _obj_geo1_mix_to_noise = `run("opadd -e -n -v subnet mix_to_noise")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_mix_to_noise
opspareds '    parm { 	name	"label1" 	baseparm 	label	"Input #1 Label" 	invisible 	export	dialog     }     parm { 	name	"label2" 	baseparm 	label	"Input #2 Label" 	invisible 	export	dialog     }     parm { 	name	"label3" 	baseparm 	label	"Input #3 Label" 	invisible 	export	dialog     }     parm { 	name	"label4" 	baseparm 	label	"Input #4 Label" 	invisible 	export	dialog     }     parm { 	name	"parm_name" 	label	"parm_name" 	type	string 	default	{ "parm" } 	range	{ 0 1 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" }     }     parm { 	name	"freq" 	label	"Frequency" 	type	float 	size	4 	default	{ "1" [ "ch(\\"freq1\\")" hscript-expr ] [ "ch(\\"freq1\\")" hscript-expr ] "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" } 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"offset" 	label	"Offset" 	type	float 	size	4 	default	{ "0" "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" } 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"rough" 	label	"Roughness" 	type	float 	default	{ "0.5" } 	range	{ 0 1 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" } 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"bias" 	label	"Bias" 	type	float 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" }     } ' $_obj_geo1_mix_to_noise
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise freq2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise/freq2
chadd -t 0 0 $_obj_geo1_mix_to_noise freq3
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise/freq3
chblockend
opparm -V 15.5.480 $_obj_geo1_mix_to_noise parm_name ( v )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_mix_to_noise
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise
opexprlanguage -s hscript $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise

# Node $_obj_geo1_mix_to_noise_noise (Sop/attribvop)
set _obj_geo1_mix_to_noise_noise = `run("opadd -e -n -v attribvop noise")`
oplocate -x `$arg2 + 2.7294120788574219` -y `$arg3 + 3.9117059707641602` $_obj_geo1_mix_to_noise_noise
opspareds '    parm { 	name	"bindgroup" 	baseparm 	label	"Group" 	export	none 	bindselector points "Modify Points" 	    "Select the points to affect and press Enter to complete." 	    0 1 0xffffffff 0 bindgrouptype 0     }     parm { 	name	"bindgrouptype" 	baseparm 	label	"Group Type" 	export	none     }     parm { 	name	"bindclass" 	baseparm 	label	"Run Over" 	export	none     }     parm { 	name	"vex_numcount" 	baseparm 	label	"Number Count" 	export	none     }     parm { 	name	"vex_threadjobsize" 	baseparm 	label	"Thread Job Size" 	export	none     }     group { 	name	"stdswitcher3" 	label	"Vex Setup"  	parm { 	    name	"vexsrc" 	    baseparm 	    label	"Vex Source" 	    export	all 	} 	parm { 	    name	"shoppath" 	    baseparm 	    label	"Shop Path" 	    export	all 	} 	parm { 	    name	"script" 	    baseparm 	    label	"Script" 	    export	all 	} 	parm { 	    name	"clear" 	    baseparm 	    label	"Re-load VEX Functions" 	    export	all 	} 	parm { 	    name	"vop_compiler" 	    baseparm 	    label	"Compiler" 	    export	none 	} 	parm { 	    name	"vop_forcecompile" 	    baseparm 	    label	"Force Compile" 	    export	none 	} 	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_multithread" 	    baseparm 	    label	"Enable Multithreading" 	    export	none 	}     }      group { 	name	"stdswitcher3_1" 	label	"Attribute Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	}     }      parm { 	name	"ptnum" 	label	"Point Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"vtxnum" 	label	"Vertex Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"primnum" 	label	"Primitive Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"id" 	label	"Id" 	type	integer 	invisible 	default	{ "-1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numpt" 	label	"Number of Points" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numvtx" 	label	"Number of Vertices" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numprim" 	label	"Number of Prims" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Time" 	label	"Time" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"TimeInc" 	label	"Time Inc" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Frame" 	label	"Frame" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"life" 	label	"Life" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"age" 	label	"Age" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput2" 	label	"Second Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput3" 	label	"Third Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput4" 	label	"Fourth Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput1" 	label	"First Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"uv" 	label	"UV" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"P" 	label	"P" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"force" 	label	"Force" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Cd" 	label	"Cd" 	type	float 	invisible 	size	3 	default	{ "1" "1" "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"N" 	label	"N" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"freq" 	label	"Frequency" 	type	float 	size	4 	default	{ "1" "1" "1" "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"offset" 	label	"Offset" 	type	float 	size	4 	default	{ "0" "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"rough" 	label	"Roughness" 	type	float 	default	{ "0.5" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_mix_to_noise_noise
opparm $_obj_geo1_mix_to_noise_noise  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../freq1")' $_obj_geo1_mix_to_noise_noise/freq1
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise_noise/freq2
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise_noise/freq3
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq4
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../freq4")' $_obj_geo1_mix_to_noise_noise/freq4
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset1")' $_obj_geo1_mix_to_noise_noise/offset1
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset2")' $_obj_geo1_mix_to_noise_noise/offset2
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset3
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset3")' $_obj_geo1_mix_to_noise_noise/offset3
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset4
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset4")' $_obj_geo1_mix_to_noise_noise/offset4
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise rough
chkey -t 0 -v 0.5 -m 0 -a 0 -A 0 -T a  -F 'ch("../rough")' $_obj_geo1_mix_to_noise_noise/rough
chblockend
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_mix_to_noise_noise
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_noise
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise
opcf $_obj_geo1_mix_to_noise_noise

# Node $_obj_geo1_mix_to_noise_noise_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_mix_to_noise_noise_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.49108` -y `$arg3 + 1.3733599999999999` $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_geometryvopglobal1

# Node $_obj_geo1_mix_to_noise_noise_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_mix_to_noise_noise_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 5.3169599999999999` -y `$arg3 + 1.96661` $_obj_geo1_mix_to_noise_noise_aaflownoise1
opparm $_obj_geo1_mix_to_noise_noise_aaflownoise1 signature ( vp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_aaflownoise1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_aaflownoise1

# Node $_obj_geo1_mix_to_noise_noise_vectohvec1 (Vop/vectohvec)
set _obj_geo1_mix_to_noise_noise_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 3.37751` -y `$arg3 + 2.9550100000000001` $_obj_geo1_mix_to_noise_noise_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_vectohvec1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_vectohvec1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_vectohvec1

# Node $_obj_geo1_mix_to_noise_noise_freq (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 2.6169600000000002` -y `$arg3 + 3.3666100000000001` $_obj_geo1_mix_to_noise_noise_freq
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_freq
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_freq
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_freq

# Node $_obj_geo1_mix_to_noise_noise_offset (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 2.7169599999999998` -y `$arg3 + 3.1666099999999999` $_obj_geo1_mix_to_noise_noise_offset
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_offset
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_offset
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_offset

# Node $_obj_geo1_mix_to_noise_noise_rough (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 2.91696` -y `$arg3 + 2.76661` $_obj_geo1_mix_to_noise_noise_rough
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_rough
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_rough
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_rough

# Node $_obj_geo1_mix_to_noise_noise_bind1 (Vop/bind)
set _obj_geo1_mix_to_noise_noise_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 8.295659065246582` -y `$arg3 + 2.955009937286377` $_obj_geo1_mix_to_noise_noise_bind1
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_bind1 parmname ( '`chs("../../parm_name")`' ) parmtype ( vector ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_geo1_mix_to_noise_noise_bind1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_bind1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_bind1
opcf ..

# Node $_obj_geo1_mix_to_noise_mix (Sop/attribwrangle)
set _obj_geo1_mix_to_noise_mix = `run("opadd -e -n -v attribwrangle mix")`
oplocate -x `$arg2 + 1.2623496055603027` -y `$arg3 + 1.5378241539001465` $_obj_geo1_mix_to_noise_mix
opspareds '    group { 	name	"folder1" 	label	"Code"  	parm { 	    name	"group" 	    baseparm 	    label	"Group" 	    export	none 	    bindselector points "Modify Points" 	        "Select the points to affect and press Enter to complete." 	        0 1 0xffffffff 0 grouptype 0 	} 	parm { 	    name	"grouptype" 	    baseparm 	    label	"Group Type" 	    export	none 	} 	parm { 	    name	"class" 	    baseparm 	    label	"Run Over" 	    export	none 	} 	parm { 	    name	"vex_numcount" 	    baseparm 	    label	"Number Count" 	    export	none 	} 	parm { 	    name	"vex_threadjobsize" 	    baseparm 	    label	"Thread Job Size" 	    export	none 	} 	parm { 	    name	"snippet" 	    baseparm 	    label	"VEXpression" 	    export	all 	} 	parm { 	    name	"exportlist" 	    baseparm 	    label	"Attributes to Create" 	    export	none 	} 	parm { 	    name	"vex_strict" 	    baseparm 	    label	"Enforce Prototypes" 	    export	none 	}     }      group { 	name	"folder1_1" 	label	"Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	}     }      parm { 	name	"bias" 	label	"Bias" 	type	float 	default	{ "0" } 	range	{ 0 1 } 	export	none     } ' $_obj_geo1_mix_to_noise_mix
opparm $_obj_geo1_mix_to_noise_mix  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise_mix bias
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../bias")' $_obj_geo1_mix_to_noise_mix/bias
chblockend
opparm $_obj_geo1_mix_to_noise_mix snippet ( 'v@`chs("../parm_name")` = normalize(lerp(normalize(v@`chs("../parm_name")`), normalize(v@opinput1_`chs("../parm_name")`), ch("bias"))) * length(v@`chs("../parm_name")`);' ) bias ( bias )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_mix_to_noise_mix
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_mix
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_mix
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_mix
opcf ..
opcf $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise_noise
oporder -e geometryvopglobal1 aaflownoise1 vectohvec1 freq offset rough bind1 
opcf ..

# Node $_obj_geo1_mix_to_noise_output1 (Sop/output)
set _obj_geo1_mix_to_noise_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.2623496055603027` -y `$arg3 + 0.29860782623291016` $_obj_geo1_mix_to_noise_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_output1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_output1
oporder -e noise mix output1 
opcf ..
opset -p on $_obj_geo1_mix_to_noise

opcf $arg1
opwire -n $_obj_geo1_attribwrangle1 -0 $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise
opwire -n -i 0 -0 $_obj_geo1_mix_to_noise_noise
opcf $_obj_geo1_mix_to_noise_noise
opwire -n $_obj_geo1_mix_to_noise_noise_vectohvec1 -0 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_freq -1 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_offset -2 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_rough -4 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_geometryvopglobal1 -0 $_obj_geo1_mix_to_noise_noise_vectohvec1
opwire -n $_obj_geo1_mix_to_noise_noise_aaflownoise1 -0 $_obj_geo1_mix_to_noise_noise_bind1
opcf ..
opwire -n -i 0 -0 $_obj_geo1_mix_to_noise_mix
opwire -n $_obj_geo1_mix_to_noise_noise -1 $_obj_geo1_mix_to_noise_mix
opwire -n $_obj_geo1_mix_to_noise_mix -0 $_obj_geo1_mix_to_noise_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_mix_to_noise
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_mix_to_noise
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet1" label="GET_interporation_by_id" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_GET_interporation_by_id (Sop/subnet)
set _obj_geo1_GET_interporation_by_id = `run("opadd -e -n -v subnet GET_interporation_by_id")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_GET_interporation_by_id
opspareds '    parm { 	name	"label1" 	baseparm 	label	"Input #1 Label" 	invisible 	export	dialog     }     parm { 	name	"label2" 	baseparm 	label	"Input #2 Label" 	invisible 	export	dialog     }     parm { 	name	"label3" 	baseparm 	label	"Input #3 Label" 	invisible 	export	dialog     }     parm { 	name	"label4" 	baseparm 	label	"Input #4 Label" 	invisible 	export	dialog     }     parm { 	name	"match_by_id" 	label	"match_by_id" 	type	toggle 	default	{ "1" } 	range	{ 0! 10 } 	parmtag	{ "autoscope" "0000000000000000" }     }     parm { 	name	"id_atr" 	label	"id_atr" 	type	string 	default	{ "id" } 	range	{ 0 1 } 	parmtag	{ "autoscope" "0000000000000000" }     } ' $_obj_geo1_GET_interporation_by_id
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_GET_interporation_by_id
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id
opcf $_obj_geo1_GET_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_interporation_by_id (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_interporation_by_id = `run("opadd -e -n -v attribwrangle interporation_by_id")`
oplocate -x `$arg2 + -0.0030000111758708981` -y `$arg3 + -3.6293055612140224` $_obj_geo1_GET_interporation_by_id_interporation_by_id
opspareds '    group { 	name	"folder1" 	label	"Code"  	parm { 	    name	"group" 	    baseparm 	    label	"Group" 	    export	none 	    bindselector points "Modify Points" 	        "Select the points to affect and press Enter to complete." 	        0 1 0xffffffff 0 grouptype 0 	} 	parm { 	    name	"grouptype" 	    baseparm 	    label	"Group Type" 	    export	none 	} 	parm { 	    name	"class" 	    baseparm 	    label	"Run Over" 	    export	none 	} 	parm { 	    name	"vex_numcount" 	    baseparm 	    label	"Number Count" 	    export	none 	} 	parm { 	    name	"vex_threadjobsize" 	    baseparm 	    label	"Thread Job Size" 	    export	none 	} 	parm { 	    name	"snippet" 	    baseparm 	    label	"VEXpression" 	    export	all 	} 	parm { 	    name	"exportlist" 	    baseparm 	    label	"Attributes to Create" 	    export	none 	} 	parm { 	    name	"vex_strict" 	    baseparm 	    label	"Enforce Prototypes" 	    export	none 	}     }      group { 	name	"folder1_1" 	label	"Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	} 	parm { 	    name	"vex_inplace" 	    baseparm 	    label	"Compute Results In Place" 	    export	none 	} 	parm { 	    name	"vex_selectiongroup" 	    baseparm 	    label	"Output Selection Group" 	    export	none 	}     }      parm { 	name	"second_previous_frame" 	label	"Second Previous Frame" 	type	oppath 	default	{ "" } 	parmtag	{ "oprelative" "." }     } ' $_obj_geo1_GET_interporation_by_id_interporation_by_id
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_id  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_interporation_by_id vex_matchattrib
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("../id_atr")' $_obj_geo1_GET_interporation_by_id_interporation_by_id/vex_matchattrib
chblockend
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_id snippet ( 'vector p = @P;\nvector prevPrevP = @P;\nvector prevP = @P;\nvector nextP = @P;\nvector nextNextP = @P;\n\nint idPt = findattribval(1,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    prevP = v@opinput1_P;\n}\n\nidPt = findattribval(2,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    nextP = v@opinput2_P;\n}\n\nidPt = findattribval(3,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    nextNextP = v@opinput3_P;\n}\n\nidPt = findattribval("op:" + chs("second_previous_frame"),"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    prevPrevP = point("op:" + chs("second_previous_frame"),"P", idPt);\n}\n\nvector arrayP[];\nif(rint(@Frame)==floor(@Frame))\n{\n    arrayP = vector[](array(prevP,p,nextP,nextNextP));\n}\nelse\n{\n    arrayP = vector[](array(prevPrevP,prevP,p,nextP));\n}\n\n@P = spline("cubic",frac(@Frame),arrayP);' ) vex_matchattrib ( vex_matchattrib ) folder1 ( 1 1 ) second_previous_frame ( ../OUT_prevPrev_f )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_interporation_by_id
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_interporation_by_id
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_interporation_by_ptnum = `run("opadd -e -n -v attribwrangle interporation_by_ptnum")`
oplocate -x `$arg2 + 4.1869576662367223` -y `$arg3 + -3.6293055612140224` $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opspareds '    group { 	name	"folder1" 	label	"Code"  	parm { 	    name	"group" 	    baseparm 	    label	"Group" 	    export	none 	    bindselector points "Modify Points" 	        "Select the points to affect and press Enter to complete." 	        0 1 0xffffffff 0 grouptype 0 	} 	parm { 	    name	"grouptype" 	    baseparm 	    label	"Group Type" 	    export	none 	} 	parm { 	    name	"class" 	    baseparm 	    label	"Run Over" 	    export	none 	} 	parm { 	    name	"vex_numcount" 	    baseparm 	    label	"Number Count" 	    export	none 	} 	parm { 	    name	"vex_threadjobsize" 	    baseparm 	    label	"Thread Job Size" 	    export	none 	} 	parm { 	    name	"snippet" 	    baseparm 	    label	"VEXpression" 	    export	all 	} 	parm { 	    name	"exportlist" 	    baseparm 	    label	"Attributes to Create" 	    export	none 	} 	parm { 	    name	"vex_strict" 	    baseparm 	    label	"Enforce Prototypes" 	    export	none 	}     }      group { 	name	"folder1_1" 	label	"Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	} 	parm { 	    name	"vex_inplace" 	    baseparm 	    label	"Compute Results In Place" 	    export	none 	} 	parm { 	    name	"vex_selectiongroup" 	    baseparm 	    label	"Output Selection Group" 	    export	none 	}     }      parm { 	name	"second_previous_frame" 	label	"Second Previous Frame" 	type	oppath 	default	{ "" } 	parmtag	{ "oprelative" "." }     } ' $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum snippet ( 'vector p = @P;\nvector prevPrevP = @P;\nvector prevP = @P;\nvector nextP = @P;\nvector nextNextP = @P;\n\nprevP = point(1,"P",@ptnum);\n\nnextP = point(2,"P",@ptnum);\n\nnextNextP = point(3,"P",@ptnum);\n\nprevPrevP = point("op:" + chs("second_previous_frame"),"P", @ptnum);\n\n\nvector arrayP[];\nif(rint(@Frame)==floor(@Frame))\n{\n    arrayP = vector[](array(prevP,p,nextP,nextNextP));\n}\nelse\n{\n    arrayP = vector[](array(prevPrevP,prevP,p,nextP));\n}\n\n@P = spline("cubic",frac(@Frame),arrayP);' ) second_previous_frame ( ../OUT_prevPrev_f )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opcf ..
opcf $_obj_geo1_GET_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_current_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_current_f = `run("opadd -e -n -v timeshift current_f")`
oplocate -x `$arg2 + -1.1175870895385742e-08` -y `$arg3 + 1.0738444387859776` $_obj_geo1_GET_interporation_by_id_current_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)' $_obj_geo1_GET_interporation_by_id_current_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_current_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_current_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_current_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_current_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_current_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_current_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_current_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_current_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_current_f

# Node $_obj_geo1_GET_interporation_by_id_prev_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_prev_f = `run("opadd -e -n -v timeshift prev_f")`
oplocate -x `$arg2 + 3.057974988824129` -y `$arg3 + 0.83243443878597745` $_obj_geo1_GET_interporation_by_id_prev_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)-1' $_obj_geo1_GET_interporation_by_id_prev_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_prev_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_prev_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_prev_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_prev_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_prev_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_prev_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_prev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_prev_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_prev_f

# Node $_obj_geo1_GET_interporation_by_id_next_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_next_f = `run("opadd -e -n -v timeshift next_f")`
oplocate -x `$arg2 + 5.1191549888241292` -y `$arg3 + 0.38067443878597818` $_obj_geo1_GET_interporation_by_id_next_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)+1' $_obj_geo1_GET_interporation_by_id_next_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_next_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_next_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_next_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_next_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_next_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_next_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_next_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_next_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_next_f

# Node $_obj_geo1_GET_interporation_by_id_prevPrev_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_prevPrev_f = `run("opadd -e -n -v timeshift prevPrev_f")`
oplocate -x `$arg2 + 10.616564988824129` -y `$arg3 + -0.36756556121402184` $_obj_geo1_GET_interporation_by_id_prevPrev_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)-2' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_prevPrev_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_prevPrev_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_prevPrev_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_prevPrev_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_prevPrev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_prevPrev_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_prevPrev_f

# Node $_obj_geo1_GET_interporation_by_id_next_Next_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_next_Next_f = `run("opadd -e -n -v timeshift next_Next_f")`
oplocate -x `$arg2 + 7.523674988824129` -y `$arg3 + -0.15749556121402186` $_obj_geo1_GET_interporation_by_id_next_Next_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)+2' $_obj_geo1_GET_interporation_by_id_next_Next_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_next_Next_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_next_Next_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_next_Next_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_next_Next_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_next_Next_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_next_Next_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_next_Next_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_next_Next_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_next_Next_f

# Node $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f (Sop/null)
set _obj_geo1_GET_interporation_by_id_OUT_prevPrev_f = `run("opadd -e -n -v null OUT_prevPrev_f")`
oplocate -x `$arg2 + 10.616564988824129` -y `$arg3 + -1.2417255612140226` $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f

# Node $_obj_geo1_GET_interporation_by_id_null1 (Sop/null)
set _obj_geo1_GET_interporation_by_id_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -1.1175870895385742e-08` -y `$arg3 + 3.6873253402957116` $_obj_geo1_GET_interporation_by_id_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_null1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_null1

# Node $_obj_geo1_GET_interporation_by_id_output1 (Sop/output)
set _obj_geo1_GET_interporation_by_id_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.4642253617913603e-08` -y `$arg3 + -7.8299650733225654` $_obj_geo1_GET_interporation_by_id_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_output1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_output1

# Node $_obj_geo1_GET_interporation_by_id_switch1 (Sop/switch)
set _obj_geo1_GET_interporation_by_id_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + -2.3955479308557237e-08` -y `$arg3 + -6.2432114844687128` $_obj_geo1_GET_interporation_by_id_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../match_by_id")' $_obj_geo1_GET_interporation_by_id_switch1/input
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_switch1 input ( input )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_switch1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_switch1
oporder -e interporation_by_id current_f prev_f next_f prevPrev_f next_Next_f OUT_prevPrev_f null1 output1 interporation_by_ptnum switch1 
opcf ..
opset -p on $_obj_geo1_GET_interporation_by_id

opcf $arg1
opwire -n $_obj_geo1_sort1 -0 $_obj_geo1_GET_interporation_by_id
opcf $_obj_geo1_GET_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_current_f -0 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_prev_f -1 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_next_f -2 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_next_Next_f -3 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_current_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_prev_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_next_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_prevPrev_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_next_Next_f
opwire -n $_obj_geo1_GET_interporation_by_id_prevPrev_f -0 $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opwire -n -i 0 -0 $_obj_geo1_GET_interporation_by_id_null1
opwire -n $_obj_geo1_GET_interporation_by_id_switch1 -0 $_obj_geo1_GET_interporation_by_id_output1
opwire -n $_obj_geo1_GET_interporation_by_id_current_f -0 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_prev_f -1 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_next_f -2 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_next_Next_f -3 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum -0 $_obj_geo1_GET_interporation_by_id_switch1
opwire -n $_obj_geo1_GET_interporation_by_id_interporation_by_id -1 $_obj_geo1_GET_interporation_by_id_switch1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_GET_interporation_by_id
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_GET_interporation_by_id
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet2" label="GET_subframe_geo" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_GET_subframe_geo (Sop/subnet)
set _obj_geo1_GET_subframe_geo = `run("opadd -e -n -v subnet GET_subframe_geo")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_GET_subframe_geo
opspareds '    parm { 	name	"label1" 	baseparm 	label	"Input #1 Label" 	invisible 	export	dialog     }     parm { 	name	"label2" 	baseparm 	label	"Input #2 Label" 	invisible 	export	dialog     }     parm { 	name	"label3" 	baseparm 	label	"Input #3 Label" 	invisible 	export	dialog     }     parm { 	name	"label4" 	baseparm 	label	"Input #4 Label" 	invisible 	export	dialog     }     parm { 	name	"substeps" 	label	"substeps" 	type	integer 	default	{ "10" } 	range	{ 0 10 } 	parmtag	{ "autoscope" "0000000000000000" }     }     parm { 	name	"shutter" 	label	"shutter" 	type	vector2 	size	2 	default	{ "-0.25" "0.25" } 	range	{ -1 1 } 	parmtag	{ "autoscope" "0000000000000000" }     } ' $_obj_geo1_GET_subframe_geo
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_GET_subframe_geo
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_subframe_geo
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo
opcf $_obj_geo1_GET_subframe_geo

# Node $_obj_geo1_GET_subframe_geo_foreach_end1 (Sop/block_end)
set _obj_geo1_GET_subframe_geo_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 0.0015999999999999903` -y `$arg3 + 1.5632552955012902` $_obj_geo1_GET_subframe_geo_foreach_end1
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_foreach_end1 iterations
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../substeps")' $_obj_geo1_GET_subframe_geo_foreach_end1/iterations
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_subframe_geo_foreach_end1 itermethod ( count ) method ( merge ) iterations ( iterations ) class ( primitive ) useattrib ( off ) attrib ( name ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_GET_subframe_geo_foreach_end1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_subframe_geo_foreach_end1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_foreach_end1
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_foreach_end1

# Node $_obj_geo1_GET_subframe_geo_foreach_begin1 (Sop/block_begin)
set _obj_geo1_GET_subframe_geo_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + -2.3491150000000003` -y `$arg3 + 4.0414000000000012` $_obj_geo1_GET_subframe_geo_foreach_begin1
opparm -V 16.0.504.20 $_obj_geo1_GET_subframe_geo_foreach_begin1 method ( piece ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_GET_subframe_geo_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_subframe_geo_foreach_begin1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_foreach_begin1
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_foreach_begin1

# Node $_obj_geo1_GET_subframe_geo_timeshift1 (Sop/timeshift)
set _obj_geo1_GET_subframe_geo_timeshift1 = `run("opadd -e -n -v timeshift timeshift1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 2.9167000000000005` $_obj_geo1_GET_subframe_geo_timeshift1
opspareds '    parm { 	name	"method" 	baseparm 	label	"Method" 	export	none     }     parm { 	name	"frame" 	baseparm 	label	"Frame" 	export	none     }     parm { 	name	"integerframe" 	baseparm 	label	"Integer Frames" 	export	none     }     parm { 	name	"time" 	baseparm 	label	"Time" 	export	none     }     parm { 	name	"rangeclamp" 	baseparm 	label	"Clamp" 	export	none     }     parm { 	name	"frange" 	baseparm 	label	"Start/End Frame" 	export	none     }     parm { 	name	"trange" 	baseparm 	label	"Start/End Time" 	export	none     }     parm { 	name	"bias" 	label	"bias" 	type	float 	default	{ "0" } 	range	{ 0 10 }     }     parm { 	name	"shutter" 	label	"shutter" 	type	vector2 	size	2 	default	{ "0" "0" } 	range	{ -1 1 }     } ' $_obj_geo1_GET_subframe_geo_timeshift1
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF + (1 - ch("bias")) * ch("shutterx") + ch("bias") * ch("shuttery")' $_obj_geo1_GET_subframe_geo_timeshift1/frame
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_subframe_geo_timeshift1/time
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_subframe_geo_timeshift1/frange1
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_subframe_geo_timeshift1/frange2
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_subframe_geo_timeshift1/trange1
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_subframe_geo_timeshift1/trange2
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 bias
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'detail("../foreach_begin1_metadata1","iteration",0)/(ch("../foreach_end1/iterations")-1)' $_obj_geo1_GET_subframe_geo_timeshift1/bias
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 shutterx
chkey -t 0 -v -0.25 -m 0 -a 0 -A 0 -T a  -F 'ch("../shutterx")' $_obj_geo1_GET_subframe_geo_timeshift1/shutterx
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 shuttery
chkey -t 0 -v 0.25 -m 0 -a 0 -A 0 -T a  -F 'ch("../shuttery")' $_obj_geo1_GET_subframe_geo_timeshift1/shuttery
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_subframe_geo_timeshift1 frame ( frame ) integerframe ( off ) bias ( bias ) shutter ( shutterx shuttery )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_subframe_geo_timeshift1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_timeshift1
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_timeshift1

# Node $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1 (Sop/block_begin)
set _obj_geo1_GET_subframe_geo_foreach_begin1_metadata1 = `run("opadd -e -n -v block_begin foreach_begin1_metadata1")`
oplocate -x `$arg2 + 2.0408149999999998` -y `$arg3 + 4.0414000000000012` $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1
opparm -V 16.0.504.20 $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1 method ( metadata ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1

# Node $_obj_geo1_GET_subframe_geo_IN (Sop/null)
set _obj_geo1_GET_subframe_geo_IN = `run("opadd -e -n -v null IN")`
oplocate -x `$arg2 + 0` -y `$arg3 + 5.2176000000000009` $_obj_geo1_GET_subframe_geo_IN
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_subframe_geo_IN
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_IN
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_IN

# Node $_obj_geo1_GET_subframe_geo_output1 (Sop/output)
set _obj_geo1_GET_subframe_geo_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.3521965547269588e-08` -y `$arg3 + 0.29837161290678677` $_obj_geo1_GET_subframe_geo_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_subframe_geo_output1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_output1
oporder -e foreach_end1 foreach_begin1 timeshift1 foreach_begin1_metadata1 IN output1 
opcf ..
opset -p on $_obj_geo1_GET_subframe_geo

opcf $arg1
opwire -n $_obj_geo1_GET_interporation_by_id -0 $_obj_geo1_GET_subframe_geo
opcf $_obj_geo1_GET_subframe_geo
opwire -n $_obj_geo1_GET_subframe_geo_timeshift1 -0 $_obj_geo1_GET_subframe_geo_foreach_end1
opwire -n $_obj_geo1_GET_subframe_geo_IN -0 $_obj_geo1_GET_subframe_geo_foreach_begin1
opwire -n $_obj_geo1_GET_subframe_geo_IN -0 $_obj_geo1_GET_subframe_geo_timeshift1
opwire -n -i 0 -0 $_obj_geo1_GET_subframe_geo_IN
opwire -n $_obj_geo1_GET_subframe_geo_foreach_end1 -0 $_obj_geo1_GET_subframe_geo_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_GET_subframe_geo
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_GET_subframe_geo
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <shelfSet name="shelf_set_3" label="New Shelf Set">
    <memberToolshelf name="kaTools"/>
    <memberToolshelf name="kaToolsVop"/>
    <memberToolshelf name="kaToolsDOP"/>
  </shelfSet>

  <tool name="python" label="python_verb" icon="SOP_python">
    <helpURL>operator:Sop/python</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/python</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('python'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_python_verb (Sop/python)
set _obj_geo1_python_verb = `run("opadd -e -n -v python python_verb")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_python_verb
opparm -V 16.0.557 $_obj_geo1_python_verb python ( '#prep\nnode = hou.pwd()\ngeo = node.geometry()\nresult = hou.Geometry()\ninputNodes = node.inputs()\n#geo1 = inputNodes[1].geometry()\n#geo2 = inputNodes[2].geometry()\n#geo3 = inputNodes[3].geometry()\n\n#operate\nsops = hou.sopNodeTypeCategory()\nsubverb = sops.nodeVerb("subdivide")\nsubverb.setParms({"iterations":3})\nsubverb.execute(result,[geo])\n\nsubverb1 = sops.nodeVerb("subdivide")\nsubverb1.setParms({"iterations":3})\nsubverb1.execute(result,[result])\n\n#update geo\ngeo.clear()\ngeo.merge(result)' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_python_verb
opexprlanguage -s hscript $_obj_geo1_python_verb
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_python_verb
opset -p on $_obj_geo1_python_verb

opcf $arg1
opwire -n $_obj_geo1_file1 -0 $_obj_geo1_python_verb

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_python_verb
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_python_verb
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="timeblend" label="timeblend_vol" icon="SOP_timeblend">
    <helpURL>operator:Sop/timeblend</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/timeblend</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('timeblend'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_timeblend_vol (Sop/timeblend)
set _obj_geo1_timeblend_vol = `run("opadd -e -n -u -v timeblend timeblend_vol")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_timeblend_vol
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol
opexprlanguage -s hscript $_obj_geo1_timeblend_vol
opuserdata -n '___Version___' -v '' $_obj_geo1_timeblend_vol
opcf $_obj_geo1_timeblend_vol

# Node $_obj_geo1_timeblend_vol_floor_frame (Sop/timeshift)
set _obj_geo1_timeblend_vol_floor_frame = `run("opadd -e -n -v timeshift floor_frame")`
oplocate -x `$arg2 + 0.61177000000000004` -y `$arg3 + 3.3500000000000001` $_obj_geo1_timeblend_vol_floor_frame
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_floor_frame frame
chkey -t 0 -v 4 -m 0 -a 0 -A 0 -T a  -F 'floor($FF)' $_obj_geo1_timeblend_vol_floor_frame/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_floor_frame time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_floor_frame/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_floor_frame frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeblend_vol_floor_frame/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_floor_frame frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeblend_vol_floor_frame/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_floor_frame trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_floor_frame/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_floor_frame trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_floor_frame/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_floor_frame frame ( frame )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_timeblend_vol_floor_frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_floor_frame
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_floor_frame
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_floor_frame

# Node $_obj_geo1_timeblend_vol_ceil_frame (Sop/timeshift)
set _obj_geo1_timeblend_vol_ceil_frame = `run("opadd -e -n -v timeshift ceil_frame")`
oplocate -x `$arg2 + 3.0117699999999998` -y `$arg3 + 3.3500000000000001` $_obj_geo1_timeblend_vol_ceil_frame
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_ceil_frame frame
chkey -t 0 -v 5 -m 0 -a 0 -A 0 -T a  -F 'ceil($FF)' $_obj_geo1_timeblend_vol_ceil_frame/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_ceil_frame time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_ceil_frame/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_ceil_frame frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeblend_vol_ceil_frame/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_ceil_frame frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeblend_vol_ceil_frame/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_ceil_frame trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_ceil_frame/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_ceil_frame trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_ceil_frame/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_ceil_frame frame ( frame )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_timeblend_vol_ceil_frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_ceil_frame
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_ceil_frame
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_ceil_frame

# Node $_obj_geo1_timeblend_vol_null1 (Sop/null)
set _obj_geo1_timeblend_vol_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.75` $_obj_geo1_timeblend_vol_null1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_timeblend_vol_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_null1
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_null1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_null1

# Node $_obj_geo1_timeblend_vol_first_frame (Sop/timeshift)
set _obj_geo1_timeblend_vol_first_frame = `run("opadd -e -n -v timeshift first_frame")`
oplocate -x `$arg2 + -1.5058800000000001` -y `$arg3 + 2.85588` $_obj_geo1_timeblend_vol_first_frame
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_first_frame frame
chkey -t 0 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../firstframe")' $_obj_geo1_timeblend_vol_first_frame/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_first_frame time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_first_frame/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_first_frame frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeblend_vol_first_frame/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_first_frame frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeblend_vol_first_frame/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_first_frame trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_first_frame/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_first_frame trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_first_frame/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_first_frame frame ( frame ) integerframe ( off )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_timeblend_vol_first_frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_first_frame
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_first_frame
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_first_frame

# Node $_obj_geo1_timeblend_vol_last_frame (Sop/timeshift)
set _obj_geo1_timeblend_vol_last_frame = `run("opadd -e -n -v timeshift last_frame")`
oplocate -x `$arg2 + 5.3882399999999997` -y `$arg3 + 3.3500000000000001` $_obj_geo1_timeblend_vol_last_frame
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_last_frame frame
chkey -t 0 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../lastframe")' $_obj_geo1_timeblend_vol_last_frame/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_last_frame time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_last_frame/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_last_frame frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeblend_vol_last_frame/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_last_frame frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeblend_vol_last_frame/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_last_frame trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_last_frame/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_last_frame trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_last_frame/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_last_frame frame ( frame ) integerframe ( off )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_timeblend_vol_last_frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_last_frame
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_last_frame
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_last_frame

# Node $_obj_geo1_timeblend_vol_switch1 (Sop/switch)
set _obj_geo1_timeblend_vol_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.9211800000000001` -y `$arg3 + 0.15564` $_obj_geo1_timeblend_vol_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(!ch("../holdfirst") || ($FF > ch("../firstframe"))) + (ch("../holdlast") && ($FF > ch("../lastframe")))' $_obj_geo1_timeblend_vol_switch1/input
chblockend
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_timeblend_vol_switch1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_switch1
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_switch1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_switch1

# Node $_obj_geo1_timeblend_vol_switch2 (Sop/switch)
set _obj_geo1_timeblend_vol_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 1` -y `$arg3 + -1.0090699999999999` $_obj_geo1_timeblend_vol_switch2
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_switch2 input
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -F 'hou.pwd().inputs()[0].isTimeDependent()' -l p $_obj_geo1_timeblend_vol_switch2/input
chblockend
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_timeblend_vol_switch2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_switch2
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_switch2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_switch2

# Node $_obj_geo1_timeblend_vol_time_clamp (Sop/timeshift)
set _obj_geo1_timeblend_vol_time_clamp = `run("opadd -e -n -v timeshift time_clamp")`
oplocate -x `$arg2 + 1` -y `$arg3 + -2.06413` $_obj_geo1_timeblend_vol_time_clamp
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_time_clamp frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF' $_obj_geo1_timeblend_vol_time_clamp/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_time_clamp time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_time_clamp/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_time_clamp rangeclamp
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '{\n    if (ch("../holdfirst") == 0 && ch("../holdlast") == 0)\n        return 0;\n    if (ch("../holdfirst") != 0 && ch("../holdlast") == 0)\n        return 1;\n    if (ch("../holdfirst") == 0 && ch("../holdlast") != 0)\n        return 2;\n    return 3;\n}' $_obj_geo1_timeblend_vol_time_clamp/rangeclamp
chadd -t 0 0 $_obj_geo1_timeblend_vol_time_clamp frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../firstframe")' $_obj_geo1_timeblend_vol_time_clamp/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_time_clamp frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../lastframe")' $_obj_geo1_timeblend_vol_time_clamp/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_time_clamp trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_time_clamp/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_time_clamp trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_time_clamp/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_time_clamp frame ( frame ) integerframe ( off ) rangeclamp ( rangeclamp ) frange ( frange1 frange2 )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_timeblend_vol_time_clamp
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_time_clamp
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_time_clamp
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_time_clamp

# Node $_obj_geo1_timeblend_vol_volumemix1 (Sop/volumemix)
set _obj_geo1_timeblend_vol_volumemix1 = `run("opadd -e -n -v volumemix volumemix1")`
oplocate -x `$arg2 + 1.9211800093132261` -y `$arg3 + 1.9978228356805885` $_obj_geo1_timeblend_vol_volumemix1
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_volumemix1 blend
chkey -t 0 -v 0.5 -m 0 -a 0 -A 0 -T a  -F '$FF - floor($FF)' $_obj_geo1_timeblend_vol_volumemix1/blend
chadd -t 0 0 $_obj_geo1_timeblend_vol_volumemix1 expr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$V' $_obj_geo1_timeblend_vol_volumemix1/expr
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_volumemix1 mixmethod ( blend ) blend ( blend )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_volumemix1
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_volumemix1
oporder -e floor_frame ceil_frame null1 first_frame last_frame switch1 switch2 time_clamp volumemix1 
opcf ..
opset -p on $_obj_geo1_timeblend_vol

opcf $arg1
opcf $_obj_geo1_timeblend_vol
opwire -n $_obj_geo1_timeblend_vol_null1 -0 $_obj_geo1_timeblend_vol_floor_frame
opwire -n $_obj_geo1_timeblend_vol_null1 -0 $_obj_geo1_timeblend_vol_ceil_frame
opwire -n -i 0 -0 $_obj_geo1_timeblend_vol_null1
opwire -n $_obj_geo1_timeblend_vol_null1 -0 $_obj_geo1_timeblend_vol_first_frame
opwire -n $_obj_geo1_timeblend_vol_null1 -0 $_obj_geo1_timeblend_vol_last_frame
opwire -n $_obj_geo1_timeblend_vol_first_frame -0 $_obj_geo1_timeblend_vol_switch1
opwire -n $_obj_geo1_timeblend_vol_volumemix1 -1 $_obj_geo1_timeblend_vol_switch1
opwire -n $_obj_geo1_timeblend_vol_last_frame -2 $_obj_geo1_timeblend_vol_switch1
opwire -n $_obj_geo1_timeblend_vol_null1 -0 $_obj_geo1_timeblend_vol_switch2
opwire -n $_obj_geo1_timeblend_vol_switch1 -1 $_obj_geo1_timeblend_vol_switch2
opwire -n $_obj_geo1_timeblend_vol_switch2 -0 $_obj_geo1_timeblend_vol_time_clamp
opwire -n $_obj_geo1_timeblend_vol_floor_frame -0 $_obj_geo1_timeblend_vol_volumemix1
opwire -n $_obj_geo1_timeblend_vol_ceil_frame -1 $_obj_geo1_timeblend_vol_volumemix1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_timeblend_vol
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_timeblend_vol
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet3" label="timeblend_vol_with_advection" icon="SOP_timeblend">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_timeblend_vol_with_advection (Sop/subnet)
set _obj_geo1_timeblend_vol_with_advection = `run("opadd -e -n -v subnet timeblend_vol_with_advection")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_timeblend_vol_with_advection
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_timeblend_vol_with_advection
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection
opcf $_obj_geo1_timeblend_vol_with_advection

# Node $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 (Sop/vdbadvectsdf)
set _obj_geo1_timeblend_vol_with_advection_vdbadvect4 = `run("opadd -e -n -v vdbadvectsdf vdbadvect4")`
oplocate -x `$arg2 + -5.0039786101366279e-05` -y `$arg3 + 0.25351246547703754` $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opspareds '    parm {   name    "group"         baseparm        label   "Group"         export  none     }     parm {   name    "velgroup"      baseparm        label   "Velocity"      export  none     }     parm {   name    "respectclass"  baseparm        label   "Respect Grid Class"    export  none     }     parm {   name    "timestep"      baseparm        label   "Time Step"     export  none     }     parm {   name    "general"       baseparm        label   "General Advection"     export  none     }     parm {   name    "substeps"      baseparm        label   "Sub-steps"     export  none     }     parm {   name    "advection"     baseparm        label   "Advection Scheme"      export  none     }     parm {   name    "limiter"       baseparm        label   "Limiter Scheme"        export  none     }     parm {   name    "advectionHeading"      baseparm        label   "Level Set Advection"   export  none     }     parm {   name    "advectspatial"         baseparm        label   "Spatial Scheme"        export  none     }     parm {   name    "advecttemporal"        baseparm        label   "Temporal Scheme"       export  none     }     parm {   name    "renormheading"         baseparm        label   "Renormalization"       export  none     }     parm {   name    "normsteps"     baseparm        label   "Steps"         export  none     }     parm {   name    "renormspatial"         baseparm        label   "Spatial Scheme"        export  none     }     parm {   name    "renormtemporal"        baseparm        label   "Temporal Scheme"       export  none     }     parm {   name    "frac"  label   "frac"  type    float   default { "0" }         range   { 0 10 }     } ' $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 timestep
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '1.0/$FPS * ch("frac")' $_obj_geo1_timeblend_vol_with_advection_vdbadvect4/timestep
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 frac
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'frac($FF)' $_obj_geo1_timeblend_vol_with_advection_vdbadvect4/frac
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 group ( * ) velgroup ( '@name=vel' ) timestep ( timestep ) frac ( frac )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_vdbadvect4

# Node $_obj_geo1_timeblend_vol_with_advection_convertvdb2 (Sop/convertvdb)
set _obj_geo1_timeblend_vol_with_advection_convertvdb2 = `run("opadd -e -n -v convertvdb convertvdb2")`
oplocate -x `$arg2 + -0.0012500397861003459` -y `$arg3 + 4.4621424654770365` $_obj_geo1_timeblend_vol_with_advection_convertvdb2
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_convertvdb2 group ( * ) conversion ( vdb )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_convertvdb2
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_convertvdb2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_convertvdb2

# Node $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2 (Sop/vdbvectormerge)
set _obj_geo1_timeblend_vol_with_advection_vdbvectormerge2 = `run("opadd -e -n -v vdbvectormerge vdbvectormerge2")`
oplocate -x `$arg2 + -5.0039786101366279e-05` -y `$arg3 + 3.2643024654770376` $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2

# Node $_obj_geo1_timeblend_vol_with_advection_timeshift8 (Sop/timeshift)
set _obj_geo1_timeblend_vol_with_advection_timeshift8 = `run("opadd -e -n -v timeshift timeshift8")`
oplocate -x `$arg2 + -5.0039786101366279e-05` -y `$arg3 + 2.192172465477038` $_obj_geo1_timeblend_vol_with_advection_timeshift8
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'floor($FF)' $_obj_geo1_timeblend_vol_with_advection_timeshift8/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_with_advection_timeshift8/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeblend_vol_with_advection_timeshift8/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeblend_vol_with_advection_timeshift8/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_with_advection_timeshift8/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_with_advection_timeshift8/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_timeshift8 frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_timeshift8
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_timeshift8
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_timeshift8

# Node $_obj_geo1_timeblend_vol_with_advection_timeshift9 (Sop/timeshift)
set _obj_geo1_timeblend_vol_with_advection_timeshift9 = `run("opadd -e -n -v timeshift timeshift9")`
oplocate -x `$arg2 + 2.6222499602138996` -y `$arg3 + 2.192172465477038` $_obj_geo1_timeblend_vol_with_advection_timeshift9
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'floor($FF)+1' $_obj_geo1_timeblend_vol_with_advection_timeshift9/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_with_advection_timeshift9/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeblend_vol_with_advection_timeshift9/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeblend_vol_with_advection_timeshift9/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_with_advection_timeshift9/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_with_advection_timeshift9/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_timeshift9 frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_timeshift9
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_timeshift9
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_timeshift9

# Node $_obj_geo1_timeblend_vol_with_advection_volumemix2 (Sop/volumemix)
set _obj_geo1_timeblend_vol_with_advection_volumemix2 = `run("opadd -e -n -v volumemix volumemix2")`
oplocate -x `$arg2 + -5.0039786101366279e-05` -y `$arg3 + -1.5140875345229623` $_obj_geo1_timeblend_vol_with_advection_volumemix2
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_volumemix2 blend
chkey -t 0 -v 0.5 -m 0 -a 0 -A 0 -T a  -F 'frac($FF)' $_obj_geo1_timeblend_vol_with_advection_volumemix2/blend
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_volumemix2 expr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$V' $_obj_geo1_timeblend_vol_with_advection_volumemix2/expr
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_volumemix2 group ( '@name=density' ) mixgrp ( '@name=density' ) mixmethod ( blend ) blend ( blend )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_volumemix2
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_volumemix2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_volumemix2

# Node $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 (Sop/vdbadvectsdf)
set _obj_geo1_timeblend_vol_with_advection_vdbadvect5 = `run("opadd -e -n -v vdbadvectsdf vdbadvect5")`
oplocate -x `$arg2 + 2.6222499602138996` -y `$arg3 + 0.25351246547703754` $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opspareds '    parm {   name    "group"         baseparm        label   "Group"         export  none     }     parm {   name    "velgroup"      baseparm        label   "Velocity"      export  none     }     parm {   name    "respectclass"  baseparm        label   "Respect Grid Class"    export  none     }     parm {   name    "timestep"      baseparm        label   "Time Step"     export  none     }     parm {   name    "general"       baseparm        label   "General Advection"     export  none     }     parm {   name    "substeps"      baseparm        label   "Sub-steps"     export  none     }     parm {   name    "advection"     baseparm        label   "Advection Scheme"      export  none     }     parm {   name    "limiter"       baseparm        label   "Limiter Scheme"        export  none     }     parm {   name    "advectionHeading"      baseparm        label   "Level Set Advection"   export  none     }     parm {   name    "advectspatial"         baseparm        label   "Spatial Scheme"        export  none     }     parm {   name    "advecttemporal"        baseparm        label   "Temporal Scheme"       export  none     }     parm {   name    "renormheading"         baseparm        label   "Renormalization"       export  none     }     parm {   name    "normsteps"     baseparm        label   "Steps"         export  none     }     parm {   name    "renormspatial"         baseparm        label   "Spatial Scheme"        export  none     }     parm {   name    "renormtemporal"        baseparm        label   "Temporal Scheme"       export  none     }     parm {   name    "frac"  label   "frac"  type    float   default { "0" }         range   { 0 10 }     } ' $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 timestep
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '-1.0/$FPS * (1-ch("frac"))' $_obj_geo1_timeblend_vol_with_advection_vdbadvect5/timestep
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 frac
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'frac($FF)' $_obj_geo1_timeblend_vol_with_advection_vdbadvect5/frac
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 group ( * ) velgroup ( '@name=vel' ) timestep ( timestep ) frac ( frac )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_vdbadvect5

# Node $_obj_geo1_timeblend_vol_with_advection_output1 (Sop/output)
set _obj_geo1_timeblend_vol_with_advection_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -5.0039786101407913e-05` -y `$arg3 + -3.313842405424122` $_obj_geo1_timeblend_vol_with_advection_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_output1
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_output1
oporder -e vdbadvect4 convertvdb2 vdbvectormerge2 timeshift8 timeshift9 volumemix2 vdbadvect5 output1 
opcf ..
opset -p on $_obj_geo1_timeblend_vol_with_advection

opcf $arg1
opwire -n $_obj_geo1_timeshift1 -0 $_obj_geo1_timeblend_vol_with_advection
opcf $_obj_geo1_timeblend_vol_with_advection
opwire -n $_obj_geo1_timeblend_vol_with_advection_timeshift8 -0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opwire -n $_obj_geo1_timeblend_vol_with_advection_timeshift8 -1 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opwire -n -i 0 -0 $_obj_geo1_timeblend_vol_with_advection_convertvdb2
opwire -n $_obj_geo1_timeblend_vol_with_advection_convertvdb2 -0 $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2
opwire -n $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2 -0 $_obj_geo1_timeblend_vol_with_advection_timeshift8
opwire -n $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2 -0 $_obj_geo1_timeblend_vol_with_advection_timeshift9
opwire -n $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 -0 $_obj_geo1_timeblend_vol_with_advection_volumemix2
opwire -n $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 -1 $_obj_geo1_timeblend_vol_with_advection_volumemix2
opwire -n $_obj_geo1_timeblend_vol_with_advection_timeshift9 -0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opwire -n $_obj_geo1_timeblend_vol_with_advection_timeshift9 -1 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opwire -n $_obj_geo1_timeblend_vol_with_advection_volumemix2 -0 $_obj_geo1_timeblend_vol_with_advection_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_timeblend_vol_with_advection
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_timeblend_vol_with_advection
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="opencl" label="opencl1" icon="SOP_opencl">
    <helpURL>operator:Sop/opencl</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/opencl</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('opencl'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_sphere1_opencl1 (Sop/opencl)
set _obj_sphere1_opencl1 = `run("opadd -e -n -v opencl opencl1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_sphere1_opencl1
opparm $_obj_sphere1_opencl1  bindings ( 1 ) bindings1_ramp ( 2 )
opparm -V 16.0.557 $_obj_sphere1_opencl1 kernelname ( simple ) usecode ( on ) kernelcode ( 'kernel void simple( int p_length,  global float * p )\n{\n    int idx = get_global_id(0);\n    //if (idx >= p_length)\n    //    return;\n    p[idx*3] += 1;\n}' ) bindings1_name ( p ) stdswitcher_child_1 ( 1 ) bindings1_type ( attribute ) bindings1_attribute ( P ) bindings1_attribsize ( 3 ) bindings1_writeable ( on ) bindings1_ramp2pos ( 1 ) bindings1_ramp2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sphere1_opencl1
opexprlanguage -s hscript $_obj_sphere1_opencl1
opset -p on $_obj_sphere1_opencl1

opcf $arg1
opwire -n $_obj_sphere1_sphere1 -0 $_obj_sphere1_opencl1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_sphere1_opencl1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_sphere1_opencl1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <toolshelf name="kaToolsVop" label="kaToolsVop">
    <memberTool name="attribvop1"/>
    <memberTool name="attribvop2"/>
    <memberTool name="attribwrangle"/>
    <memberTool name="subnet4"/>
    <memberTool name="attribvop"/>
    <memberTool name="attribvop0"/>
    <memberTool name="attribwrangle0"/>
    <memberTool name="attribwrangle1"/>
    <memberTool name="attribwrangle2"/>
    <memberTool name="attribwrangle3"/>
    <memberTool name="attribwrangle4"/>
    <memberTool name="attribwrangle6"/>
    <memberTool name="attribwrangle7"/>
    <memberTool name="attribwrangle8"/>
    <memberTool name="rotate_by_quar"/>
    <memberTool name="clip"/>
    <memberTool name="pt_trans_and_rotate_orient"/>
    <memberTool name="align_orient2"/>
    <memberTool name="crt_partId"/>
  </toolshelf>

  <tool name="attribvop1" label="trans_by_n_up" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribvop</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_trans_by_n_up (Sop/attribvop)
set _obj_geo1_trans_by_n_up = `run("opadd -e -n -v attribvop trans_by_n_up")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_trans_by_n_up
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_trans_by_n_up
opparm $_obj_geo1_trans_by_n_up  bindings ( 0 ) groupbindings ( 0 )
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_trans_by_n_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_trans_by_n_up
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up
opcf $_obj_geo1_trans_by_n_up

# Node $_obj_geo1_trans_by_n_up_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_trans_by_n_up_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_geo1_trans_by_n_up_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_geometryvopglobal1

# Node $_obj_geo1_trans_by_n_up_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_trans_by_n_up_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 33.2684` -y `$arg3 + -0.80214600000000003` $_obj_geo1_trans_by_n_up_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_geometryvopoutput1

# Node $_obj_geo1_trans_by_n_up_lookat1 (Vop/lookat)
set _obj_geo1_trans_by_n_up_lookat1 = `run("opadd -e -n -v lookat lookat1")`
oplocate -x `$arg2 + 7.2511700000000001` -y `$arg3 + -6.1882999999999999` $_obj_geo1_trans_by_n_up_lookat1
opparm $_obj_geo1_trans_by_n_up_lookat1 from ( 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_lookat1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_lookat1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_lookat1

# Node $_obj_geo1_trans_by_n_up_bind2 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -8.0587199999999992` $_obj_geo1_trans_by_n_up_bind2
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind2 parmname ( opinput1_up ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind2
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind2
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind2

# Node $_obj_geo1_trans_by_n_up_bind3 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind3 = `run("opadd -e -n -v bind bind3")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -6.1882999999999999` $_obj_geo1_trans_by_n_up_bind3
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind3 parmname ( opinput1_N ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind3
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind3
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind3

# Node $_obj_geo1_trans_by_n_up_bind4 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind4 = `run("opadd -e -n -v bind bind4")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -14.1234` $_obj_geo1_trans_by_n_up_bind4
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind4 parmname ( opinput2_up ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind4
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind4
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind4

# Node $_obj_geo1_trans_by_n_up_bind5 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind5 = `run("opadd -e -n -v bind bind5")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -12.253` $_obj_geo1_trans_by_n_up_bind5
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind5 parmname ( opinput2_N ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind5
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind5
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind5

# Node $_obj_geo1_trans_by_n_up_translate1 (Vop/translate)
set _obj_geo1_trans_by_n_up_translate1 = `run("opadd -e -n -v translate translate1")`
oplocate -x `$arg2 + 13.420400000000001` -y `$arg3 + -6.3383000000000003` $_obj_geo1_trans_by_n_up_translate1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_translate1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_translate1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_translate1

# Node $_obj_geo1_trans_by_n_up_lookat2 (Vop/lookat)
set _obj_geo1_trans_by_n_up_lookat2 = `run("opadd -e -n -v lookat lookat2")`
oplocate -x `$arg2 + 7.5644200000000001` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_n_up_lookat2
opparm $_obj_geo1_trans_by_n_up_lookat2 from ( 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_lookat2
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_lookat2
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_lookat2

# Node $_obj_geo1_trans_by_n_up_bind6 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind6 = `run("opadd -e -n -v bind bind6")`
oplocate -x `$arg2 + 3.6255500000000001` -y `$arg3 + -9.91892` $_obj_geo1_trans_by_n_up_bind6
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind6 parmname ( opinput1_P ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind6
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind6
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind6

# Node $_obj_geo1_trans_by_n_up_bind7 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind7 = `run("opadd -e -n -v bind bind7")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -16.365600000000001` $_obj_geo1_trans_by_n_up_bind7
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind7 parmname ( opinput2_P ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind7
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind7
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind7

# Node $_obj_geo1_trans_by_n_up_m3tom41 (Vop/m3tom4)
set _obj_geo1_trans_by_n_up_m3tom41 = `run("opadd -e -n -v m3tom4 m3tom41")`
oplocate -x `$arg2 + 10.4072` -y `$arg3 + -6.3383000000000003` $_obj_geo1_trans_by_n_up_m3tom41
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_m3tom41
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_m3tom41
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_m3tom41

# Node $_obj_geo1_trans_by_n_up_translate2 (Vop/translate)
set _obj_geo1_trans_by_n_up_translate2 = `run("opadd -e -n -v translate translate2")`
oplocate -x `$arg2 + 13.9018` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_n_up_translate2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_translate2
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_translate2
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_translate2

# Node $_obj_geo1_trans_by_n_up_m3tom42 (Vop/m3tom4)
set _obj_geo1_trans_by_n_up_m3tom42 = `run("opadd -e -n -v m3tom4 m3tom42")`
oplocate -x `$arg2 + 10.8886` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_n_up_m3tom42
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_m3tom42
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_m3tom42
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_m3tom42

# Node $_obj_geo1_trans_by_n_up_multiply1 (Vop/multiply)
set _obj_geo1_trans_by_n_up_multiply1 = `run("opadd -e -n -v multiply multiply1")`
oplocate -x `$arg2 + 22.006699999999999` -y `$arg3 + -6.6035199999999996` $_obj_geo1_trans_by_n_up_multiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_multiply1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_multiply1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_multiply1

# Node $_obj_geo1_trans_by_n_up_multiply2 (Vop/multiply)
set _obj_geo1_trans_by_n_up_multiply2 = `run("opadd -e -n -v multiply multiply2")`
oplocate -x `$arg2 + 26.380400000000002` -y `$arg3 + -4.8594200000000001` $_obj_geo1_trans_by_n_up_multiply2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_multiply2
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_multiply2
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_multiply2

# Node $_obj_geo1_trans_by_n_up_invert1 (Vop/invert)
set _obj_geo1_trans_by_n_up_invert1 = `run("opadd -e -n -v invert invert1")`
oplocate -x `$arg2 + 17.741599999999998` -y `$arg3 + -6.4882999999999997` $_obj_geo1_trans_by_n_up_invert1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_invert1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_invert1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_invert1
opcf ..
opcf $_obj_geo1_trans_by_n_up
oporder -e geometryvopglobal1 geometryvopoutput1 lookat1 bind2 bind3 bind4 bind5 translate1 lookat2 bind6 bind7 m3tom41 translate2 m3tom42 multiply1 multiply2 invert1 
opcf ..
opset -p on $_obj_geo1_trans_by_n_up

opcf $arg1
opwire -n $_obj_geo1_polyframe1 -0 $_obj_geo1_trans_by_n_up
opwire -n $_obj_geo1_polyframe1 -1 $_obj_geo1_trans_by_n_up
opwire -n $_obj_geo1_transform1 -2 $_obj_geo1_trans_by_n_up
opcf $_obj_geo1_trans_by_n_up
opwire -n $_obj_geo1_trans_by_n_up_multiply2 -0 $_obj_geo1_trans_by_n_up_geometryvopoutput1
opwire -n $_obj_geo1_trans_by_n_up_bind3 -1 $_obj_geo1_trans_by_n_up_lookat1
opwire -n $_obj_geo1_trans_by_n_up_bind2 -2 $_obj_geo1_trans_by_n_up_lookat1
opwire -n $_obj_geo1_trans_by_n_up_m3tom41 -0 $_obj_geo1_trans_by_n_up_translate1
opwire -n $_obj_geo1_trans_by_n_up_bind6 -1 $_obj_geo1_trans_by_n_up_translate1
opwire -n $_obj_geo1_trans_by_n_up_bind5 -1 $_obj_geo1_trans_by_n_up_lookat2
opwire -n $_obj_geo1_trans_by_n_up_bind4 -2 $_obj_geo1_trans_by_n_up_lookat2
opwire -n $_obj_geo1_trans_by_n_up_lookat1 -0 $_obj_geo1_trans_by_n_up_m3tom41
opwire -n $_obj_geo1_trans_by_n_up_m3tom42 -0 $_obj_geo1_trans_by_n_up_translate2
opwire -n $_obj_geo1_trans_by_n_up_bind7 -1 $_obj_geo1_trans_by_n_up_translate2
opwire -n $_obj_geo1_trans_by_n_up_lookat2 -0 $_obj_geo1_trans_by_n_up_m3tom42
opwire -n $_obj_geo1_trans_by_n_up_invert1 -0 $_obj_geo1_trans_by_n_up_multiply1
opwire -n $_obj_geo1_trans_by_n_up_translate2 -1 $_obj_geo1_trans_by_n_up_multiply1
opwire -n $_obj_geo1_trans_by_n_up_geometryvopglobal1 -0 $_obj_geo1_trans_by_n_up_multiply2
opwire -n $_obj_geo1_trans_by_n_up_multiply1 -1 $_obj_geo1_trans_by_n_up_multiply2
opwire -n $_obj_geo1_trans_by_n_up_translate1 -0 $_obj_geo1_trans_by_n_up_invert1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_trans_by_n_up
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_trans_by_n_up
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribvop2" label="trans_by_pt" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribvop</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_trans_by_pt (Sop/attribvop)
set _obj_geo1_trans_by_pt = `run("opadd -e -n -v attribvop trans_by_pt")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_trans_by_pt
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "pt_0"  label   "pt_0"  type    integer         default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "pt_1"  label   "pt_1"  type    integer         default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "pt_2"  label   "pt_2"  type    integer         default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_trans_by_pt
opparm $_obj_geo1_trans_by_pt  bindings ( 0 ) groupbindings ( 0 )
opparm -V 16.0.633 $_obj_geo1_trans_by_pt pt_1 ( 1 ) pt_2 ( 2 )
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_trans_by_pt
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_trans_by_pt
opexprlanguage -s hscript $_obj_geo1_trans_by_pt
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt
opcf $_obj_geo1_trans_by_pt

# Node $_obj_geo1_trans_by_pt_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_trans_by_pt_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_geo1_trans_by_pt_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_geometryvopglobal1

# Node $_obj_geo1_trans_by_pt_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_trans_by_pt_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 33.2684` -y `$arg3 + -0.80214600000000003` $_obj_geo1_trans_by_pt_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_geometryvopoutput1

# Node $_obj_geo1_trans_by_pt_lookat1 (Vop/lookat)
set _obj_geo1_trans_by_pt_lookat1 = `run("opadd -e -n -v lookat lookat1")`
oplocate -x `$arg2 + 7.2511700000000001` -y `$arg3 + -6.1882999999999999` $_obj_geo1_trans_by_pt_lookat1
opparm $_obj_geo1_trans_by_pt_lookat1 from ( 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_lookat1
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_lookat1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_lookat1

# Node $_obj_geo1_trans_by_pt_translate1 (Vop/translate)
set _obj_geo1_trans_by_pt_translate1 = `run("opadd -e -n -v translate translate1")`
oplocate -x `$arg2 + 13.420400000000001` -y `$arg3 + -6.3383000000000003` $_obj_geo1_trans_by_pt_translate1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_translate1
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_translate1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_translate1

# Node $_obj_geo1_trans_by_pt_lookat2 (Vop/lookat)
set _obj_geo1_trans_by_pt_lookat2 = `run("opadd -e -n -v lookat lookat2")`
oplocate -x `$arg2 + 7.5644200000000001` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_pt_lookat2
opparm $_obj_geo1_trans_by_pt_lookat2 from ( 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_lookat2
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_lookat2
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_lookat2

# Node $_obj_geo1_trans_by_pt_m3tom41 (Vop/m3tom4)
set _obj_geo1_trans_by_pt_m3tom41 = `run("opadd -e -n -v m3tom4 m3tom41")`
oplocate -x `$arg2 + 10.4072` -y `$arg3 + -6.3383000000000003` $_obj_geo1_trans_by_pt_m3tom41
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_m3tom41
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_m3tom41
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_m3tom41

# Node $_obj_geo1_trans_by_pt_translate2 (Vop/translate)
set _obj_geo1_trans_by_pt_translate2 = `run("opadd -e -n -v translate translate2")`
oplocate -x `$arg2 + 13.9018` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_pt_translate2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_translate2
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_translate2
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_translate2

# Node $_obj_geo1_trans_by_pt_m3tom42 (Vop/m3tom4)
set _obj_geo1_trans_by_pt_m3tom42 = `run("opadd -e -n -v m3tom4 m3tom42")`
oplocate -x `$arg2 + 10.8886` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_pt_m3tom42
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_m3tom42
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_m3tom42
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_m3tom42

# Node $_obj_geo1_trans_by_pt_multiply1 (Vop/multiply)
set _obj_geo1_trans_by_pt_multiply1 = `run("opadd -e -n -v multiply multiply1")`
oplocate -x `$arg2 + 22.006699999999999` -y `$arg3 + -6.6035199999999996` $_obj_geo1_trans_by_pt_multiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_multiply1
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_multiply1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_multiply1

# Node $_obj_geo1_trans_by_pt_multiply2 (Vop/multiply)
set _obj_geo1_trans_by_pt_multiply2 = `run("opadd -e -n -v multiply multiply2")`
oplocate -x `$arg2 + 26.380400000000002` -y `$arg3 + -4.8594200000000001` $_obj_geo1_trans_by_pt_multiply2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_multiply2
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_multiply2
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_multiply2

# Node $_obj_geo1_trans_by_pt_invert1 (Vop/invert)
set _obj_geo1_trans_by_pt_invert1 = `run("opadd -e -n -v invert invert1")`
oplocate -x `$arg2 + 17.741599999999998` -y `$arg3 + -6.4882999999999997` $_obj_geo1_trans_by_pt_invert1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_invert1
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_invert1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_pt_invert1

# Node $_obj_geo1_trans_by_pt_snippet2 (Vop/snippet)
set _obj_geo1_trans_by_pt_snippet2 = `run("opadd -e -n -v snippet snippet2")`
oplocate -x `$arg2 + 3.3162202690466405` -y `$arg3 + -5.5394406100947222` $_obj_geo1_trans_by_pt_snippet2
opparm $_obj_geo1_trans_by_pt_snippet2  namenum ( 7 )
opparm -V 16.0.633 $_obj_geo1_trans_by_pt_snippet2 code ( 'p = point(in,"P",pt0);\nn = point(in,"P",pt1);\nup = point(in,"P",pt2);\n\nn = normalize(n-p);\nup = normalize(up-p);' ) namenum ( 7 ) name1 ( p ) name2 ( n ) name3 ( up ) name4 ( pt0 ) name5 ( pt1 ) name6 ( pt2 ) name7 ( in )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_snippet2
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_snippet2
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_snippet2

# Node $_obj_geo1_trans_by_pt_next1 (Vop/constant)
set _obj_geo1_trans_by_pt_next1 = `run("opadd -e -n -v constant next1")`
oplocate -x `$arg2 + 1.3162202690466402` -y `$arg3 + -5.5394406100947222` $_obj_geo1_trans_by_pt_next1
opparm -V 16.0.633 $_obj_geo1_trans_by_pt_next1 consttype ( vector ) constname ( next ) constlabel ( 'next: 0' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_next1
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_next1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_next1

# Node $_obj_geo1_trans_by_pt_pt_0 (Vop/parameter)
set _obj_geo1_trans_by_pt_pt_0 = `run("opadd -e -n -v parameter pt_0")`
oplocate -x `$arg2 + -0.97510473095335959` -y `$arg3 + -6.4933406100947213` $_obj_geo1_trans_by_pt_pt_0
opparm -V 16.0.633 $_obj_geo1_trans_by_pt_pt_0 parmname ( '$OS' ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_pt_0
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_pt_0
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_pt_0

# Node $_obj_geo1_trans_by_pt_pt_1 (Vop/parameter)
set _obj_geo1_trans_by_pt_pt_1 = `run("opadd -e -n -v parameter pt_1")`
oplocate -x `$arg2 + -0.97510473095335948` -y `$arg3 + -8.1382612694916521` $_obj_geo1_trans_by_pt_pt_1
opparm -V 16.0.633 $_obj_geo1_trans_by_pt_pt_1 parmname ( '$OS' ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_pt_1
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_pt_1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_pt_1

# Node $_obj_geo1_trans_by_pt_pt_2 (Vop/parameter)
set _obj_geo1_trans_by_pt_pt_2 = `run("opadd -e -n -v parameter pt_2")`
oplocate -x `$arg2 + -0.97510473095335948` -y `$arg3 + -9.7328878704516555` $_obj_geo1_trans_by_pt_pt_2
opparm -V 16.0.633 $_obj_geo1_trans_by_pt_pt_2 parmname ( '$OS' ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_pt_2
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_pt_2
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_pt_2

# Node $_obj_geo1_trans_by_pt_next_4 (Vop/constant)
set _obj_geo1_trans_by_pt_next_4 = `run("opadd -e -n -v constant next_4")`
oplocate -x `$arg2 + -0.97510473095335948` -y `$arg3 + -11.408690760494727` $_obj_geo1_trans_by_pt_next_4
opparm -V 16.0.633 $_obj_geo1_trans_by_pt_next_4 consttype ( int ) intdef ( 1 ) constname ( next_4 ) constlabel ( 'next_4: 0' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_next_4
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_next_4
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_next_4

# Node $_obj_geo1_trans_by_pt_snippet3 (Vop/snippet)
set _obj_geo1_trans_by_pt_snippet3 = `run("opadd -e -n -v snippet snippet3")`
oplocate -x `$arg2 + 3.4402684828475558` -y `$arg3 + -12.415199964237214` $_obj_geo1_trans_by_pt_snippet3
opparm $_obj_geo1_trans_by_pt_snippet3  namenum ( 7 )
opparm -V 16.0.633 $_obj_geo1_trans_by_pt_snippet3 code ( 'p = point(in,"P",pt0);\nn = point(in,"P",pt1);\nup = point(in,"P",pt2);\n\nn = normalize(n-p);\nup = normalize(up-p);' ) namenum ( 7 ) name1 ( p ) name2 ( n ) name3 ( up ) name4 ( pt0 ) name5 ( pt1 ) name6 ( pt2 ) name7 ( in )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_snippet3
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_snippet3
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_snippet3

# Node $_obj_geo1_trans_by_pt_next_5 (Vop/constant)
set _obj_geo1_trans_by_pt_next_5 = `run("opadd -e -n -v constant next_5")`
oplocate -x `$arg2 + -0.97510473095335959` -y `$arg3 + -14.56941811079721` $_obj_geo1_trans_by_pt_next_5
opparm -V 16.0.633 $_obj_geo1_trans_by_pt_next_5 consttype ( int ) intdef ( 2 ) constname ( next_4 ) constlabel ( 'next_4: 0' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_pt_next_5
opexprlanguage -s hscript $_obj_geo1_trans_by_pt_next_5
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_pt_next_5
opcf ..
opcf $_obj_geo1_trans_by_pt
oporder -e geometryvopglobal1 geometryvopoutput1 lookat1 translate1 lookat2 m3tom41 translate2 m3tom42 multiply1 multiply2 invert1 snippet2 next1 pt_0 pt_1 pt_2 next_4 snippet3 next_5 
opcf ..
opset -p on $_obj_geo1_trans_by_pt

opcf $arg1
opwire -n $_obj_geo1_polyframe1 -0 $_obj_geo1_trans_by_pt
opwire -n $_obj_geo1_polyframe1 -1 $_obj_geo1_trans_by_pt
opwire -n $_obj_geo1_transform1 -2 $_obj_geo1_trans_by_pt
opcf $_obj_geo1_trans_by_pt
opwire -n $_obj_geo1_trans_by_pt_multiply2 -0 $_obj_geo1_trans_by_pt_geometryvopoutput1
opwire -n -o 1 $_obj_geo1_trans_by_pt_snippet2 -1 $_obj_geo1_trans_by_pt_lookat1
opwire -n -o 2 $_obj_geo1_trans_by_pt_snippet2 -2 $_obj_geo1_trans_by_pt_lookat1
opwire -n $_obj_geo1_trans_by_pt_m3tom41 -0 $_obj_geo1_trans_by_pt_translate1
opwire -n $_obj_geo1_trans_by_pt_snippet2 -1 $_obj_geo1_trans_by_pt_translate1
opwire -n -o 1 $_obj_geo1_trans_by_pt_snippet3 -1 $_obj_geo1_trans_by_pt_lookat2
opwire -n -o 2 $_obj_geo1_trans_by_pt_snippet3 -2 $_obj_geo1_trans_by_pt_lookat2
opwire -n $_obj_geo1_trans_by_pt_lookat1 -0 $_obj_geo1_trans_by_pt_m3tom41
opwire -n $_obj_geo1_trans_by_pt_m3tom42 -0 $_obj_geo1_trans_by_pt_translate2
opwire -n $_obj_geo1_trans_by_pt_snippet3 -1 $_obj_geo1_trans_by_pt_translate2
opwire -n $_obj_geo1_trans_by_pt_lookat2 -0 $_obj_geo1_trans_by_pt_m3tom42
opwire -n $_obj_geo1_trans_by_pt_invert1 -0 $_obj_geo1_trans_by_pt_multiply1
opwire -n $_obj_geo1_trans_by_pt_translate2 -1 $_obj_geo1_trans_by_pt_multiply1
opwire -n $_obj_geo1_trans_by_pt_geometryvopglobal1 -0 $_obj_geo1_trans_by_pt_multiply2
opwire -n $_obj_geo1_trans_by_pt_multiply1 -1 $_obj_geo1_trans_by_pt_multiply2
opwire -n $_obj_geo1_trans_by_pt_translate1 -0 $_obj_geo1_trans_by_pt_invert1
opwire -n $_obj_geo1_trans_by_pt_next1 -0 $_obj_geo1_trans_by_pt_snippet2
opwire -n $_obj_geo1_trans_by_pt_next1 -1 $_obj_geo1_trans_by_pt_snippet2
opwire -n $_obj_geo1_trans_by_pt_next1 -2 $_obj_geo1_trans_by_pt_snippet2
opwire -n $_obj_geo1_trans_by_pt_pt_0 -3 $_obj_geo1_trans_by_pt_snippet2
opwire -n $_obj_geo1_trans_by_pt_pt_1 -4 $_obj_geo1_trans_by_pt_snippet2
opwire -n $_obj_geo1_trans_by_pt_pt_2 -5 $_obj_geo1_trans_by_pt_snippet2
opwire -n $_obj_geo1_trans_by_pt_next_4 -6 $_obj_geo1_trans_by_pt_snippet2
opwire -n $_obj_geo1_trans_by_pt_next1 -0 $_obj_geo1_trans_by_pt_snippet3
opwire -n $_obj_geo1_trans_by_pt_next1 -1 $_obj_geo1_trans_by_pt_snippet3
opwire -n $_obj_geo1_trans_by_pt_next1 -2 $_obj_geo1_trans_by_pt_snippet3
opwire -n $_obj_geo1_trans_by_pt_pt_0 -3 $_obj_geo1_trans_by_pt_snippet3
opwire -n $_obj_geo1_trans_by_pt_pt_1 -4 $_obj_geo1_trans_by_pt_snippet3
opwire -n $_obj_geo1_trans_by_pt_pt_2 -5 $_obj_geo1_trans_by_pt_snippet3
opwire -n $_obj_geo1_trans_by_pt_next_5 -6 $_obj_geo1_trans_by_pt_snippet3
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_trans_by_pt
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_trans_by_pt
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle" label="rot_packed_obj" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_rot_packed_obj (Sop/attribwrangle)
set _obj_geo1_rot_packed_obj = `run("opadd -e -n -v attribwrangle rot_packed_obj")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_rot_packed_obj
opparm $_obj_geo1_rot_packed_obj  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rot_packed_obj snippet ( '@P = qrotate(p@orient,(@P - v@pivot)) + v@packP;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_rot_packed_obj
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_rot_packed_obj
opexprlanguage -s hscript $_obj_geo1_rot_packed_obj
opuserdata -n '___Version___' -v '' $_obj_geo1_rot_packed_obj
opset -p on $_obj_geo1_rot_packed_obj

opcf $arg1
opwire -n $_obj_geo1_attribcopy1 -0 $_obj_geo1_rot_packed_obj

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_rot_packed_obj
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_rot_packed_obj
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet4" label="rotate_packed_obj" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_rotate_packed_obj (Sop/subnet)
set _obj_geo1_rotate_packed_obj = `run("opadd -e -n -v subnet rotate_packed_obj")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_rotate_packed_obj
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rotate_packed_obj
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj
opcf $_obj_geo1_rotate_packed_obj

# Node $_obj_geo1_rotate_packed_obj_attribwrangle4 (Sop/attribwrangle)
set _obj_geo1_rotate_packed_obj_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + 2.6811499937534311` -y `$arg3 + 3.9803443569272265` $_obj_geo1_rotate_packed_obj_attribwrangle4
opparm $_obj_geo1_rotate_packed_obj_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rotate_packed_obj_attribwrangle4 snippet ( 'v@packP = @P;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_rotate_packed_obj_attribwrangle4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_rotate_packed_obj_attribwrangle4
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_geo1_rotate_packed_obj_attribwrangle4

# Node $_obj_geo1_rotate_packed_obj_rot_packed_obj (Sop/attribwrangle)
set _obj_geo1_rotate_packed_obj_rot_packed_obj = `run("opadd -e -n -v attribwrangle rot_packed_obj")`
oplocate -x `$arg2 + -0.0029500062465679378` -y `$arg3 + 1.8730443569272279` $_obj_geo1_rotate_packed_obj_rot_packed_obj
opparm $_obj_geo1_rotate_packed_obj_rot_packed_obj  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rotate_packed_obj_rot_packed_obj snippet ( '@P = qrotate(p@orient,(@P - v@pivot)) + v@packP;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_rotate_packed_obj_rot_packed_obj
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_rotate_packed_obj_rot_packed_obj
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_rot_packed_obj
opuserdata -n '___Version___' -v '' $_obj_geo1_rotate_packed_obj_rot_packed_obj
opcf ..
opcf $_obj_geo1_rotate_packed_obj

# Node $_obj_geo1_rotate_packed_obj_attribcopy1 (Sop/attribcopy)
set _obj_geo1_rotate_packed_obj_attribcopy1 = `run("opadd -e -n -v attribcopy attribcopy1")`
oplocate -x `$arg2 + -0.0034500062465667725` -y `$arg3 + 3.0672443569272265` $_obj_geo1_rotate_packed_obj_attribcopy1
opparm -V 16.0.633 $_obj_geo1_rotate_packed_obj_attribcopy1 matchbyattribute ( on ) attributetomatch ( name ) attribname ( 'orient pivot packP' ) copyp ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rotate_packed_obj_attribcopy1
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_attribcopy1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_rotate_packed_obj_attribcopy1

# Node $_obj_geo1_rotate_packed_obj_attribute1 (Sop/attribute)
set _obj_geo1_rotate_packed_obj_attribute1 = `run("opadd -e -n -v attribute attribute1")`
oplocate -x `$arg2 + -0.0034500062465667725` -y `$arg3 + 0.79954435692722692` $_obj_geo1_rotate_packed_obj_attribute1
opparm $_obj_geo1_rotate_packed_obj_attribute1  ptrenames ( 5 ) vtxrenames ( 5 ) primrenames ( 5 ) detailrenames ( 5 ) rmanconversions ( 5 )
opparm -V 16.0.633 $_obj_geo1_rotate_packed_obj_attribute1 ptdel ( packP )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rotate_packed_obj_attribute1
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_attribute1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_rotate_packed_obj_attribute1

# Node $_obj_geo1_rotate_packed_obj_output1 (Sop/output)
set _obj_geo1_rotate_packed_obj_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.1175870895385742e-08` -y `$arg3 + -0.76824698720249895` $_obj_geo1_rotate_packed_obj_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rotate_packed_obj_output1
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_output1
oporder -e attribwrangle4 rot_packed_obj attribcopy1 attribute1 output1 
opcf ..
opset -p on $_obj_geo1_rotate_packed_obj

opcf $arg1
opwire -n $_obj_geo1_attribpromote2 -0 $_obj_geo1_rotate_packed_obj
opwire -n $_obj_geo1_dopimport1 -1 $_obj_geo1_rotate_packed_obj
opcf $_obj_geo1_rotate_packed_obj
opwire -n -i 1 -0 $_obj_geo1_rotate_packed_obj_attribwrangle4
opwire -n $_obj_geo1_rotate_packed_obj_attribcopy1 -0 $_obj_geo1_rotate_packed_obj_rot_packed_obj
opwire -n -i 0 -0 $_obj_geo1_rotate_packed_obj_attribcopy1
opwire -n $_obj_geo1_rotate_packed_obj_attribwrangle4 -1 $_obj_geo1_rotate_packed_obj_attribcopy1
opwire -n $_obj_geo1_rotate_packed_obj_rot_packed_obj -0 $_obj_geo1_rotate_packed_obj_attribute1
opwire -n $_obj_geo1_rotate_packed_obj_attribute1 -0 $_obj_geo1_rotate_packed_obj_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_rotate_packed_obj
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_rotate_packed_obj
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle0" label="rev_slerp" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_rev_slerp (Sop/attribwrangle)
set _obj_geo1_rev_slerp = `run("opadd -e -n -v attribwrangle rev_slerp")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_rev_slerp
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "bias"  label   "Bias"  type    float   default { "0" }         range   { 0 1 }     } ' $_obj_geo1_rev_slerp
opparm $_obj_geo1_rev_slerp  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rev_slerp snippet ( 'float qdotproduct(vector4 q1, q2)\n{\n    return q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\n}\n\nvector4 qnormalize(vector4 q)\n{\n    int len = len(q);\n    float sum=0;\n    for(int i = 0; i < len; i++)\n    {\n        sum += pow(q[i],2);\n    }\n    sum = pow(sum,0.5);\n    \n    return q/sum;\n}\n\nvector4 q1 = p@orient;\nq1 = qnormalize(q1);\nvector4 q2 = p@opinput1_orient;\nq2 = qnormalize(q2);\nfloat dot = qdotproduct(q1, q2);\n\nif(dot>0)\n{\n    q2 = -q2;\n    dot = -dot;\n}\n\n\nfloat theta = acos(dot);\ntheta = theta * ch("bias");\n\nvector4 q3 = q2 - q1 * dot;\nq3 = qnormalize(q3);\n\np@orient = q1 * cos(theta) + q3 * sin(theta);\n' ) bias ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_rev_slerp
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_rev_slerp
opexprlanguage -s hscript $_obj_geo1_rev_slerp
opuserdata -n '___Version___' -v '' $_obj_geo1_rev_slerp
opset -p on $_obj_geo1_rev_slerp

opcf $arg1
opwire -n $_obj_geo1_attribwrangle1 -0 $_obj_geo1_rev_slerp
opwire -n $_obj_geo1_transform1 -1 $_obj_geo1_rev_slerp

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_rev_slerp
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_rev_slerp
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle1" label="ka_slerp" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_slerp (Sop/attribwrangle)
set _obj_geo1_slerp = `run("opadd -e -n -v attribwrangle slerp")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_slerp
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "bias"  label   "Bias"  type    float   default { "0" }         range   { 0 1 }     } ' $_obj_geo1_slerp
opparm $_obj_geo1_slerp  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_slerp snippet ( 'p@orient = slerp(p@orient, p@opinput1_orient,ch("bias"));' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_slerp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_slerp
opexprlanguage -s hscript $_obj_geo1_slerp
opuserdata -n '___Version___' -v '' $_obj_geo1_slerp
opuserdata -n '___toolcount___' -v '6' $_obj_geo1_slerp
opuserdata -n '___toolid___' -v 'attribwrangle1' $_obj_geo1_slerp
opset -p on $_obj_geo1_slerp

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_slerp
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_slerp
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle2" label="ndc_culling" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_ndc_culling (Sop/attribwrangle)
set _obj_geo1_ndc_culling = `run("opadd -e -n -v attribwrangle ndc_culling")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_ndc_culling
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "uvxx"  label   "Uvxx"  type    float   joinnext        default { "0" }         range   { 0 1 }     }     parm {        name    "uvxy"  label   "Uvxy"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "uvyx"  label   "Uvyx"  type    float   joinnext        default { "0" }         range   { 0 1 }     }     parm {        name    "uvyy"  label   "Uvyy"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "uvzx"  label   "Uvzx"  type    float   joinnext        default { "0" }         range   { 0 1 }     }     parm {        name    "uvzy"  label   "Uvzy"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "cam"   label   "Cam"   type    string  default { "" }     } ' $_obj_geo1_ndc_culling
opparm $_obj_geo1_ndc_culling  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_ndc_culling snippet ( 'vector ndcP = toNDC(chs("cam"),@P);\n\nif(ndcP.x<ch("uvxx") || ndcP.x>ch("uvxy"))removepoint(geoself(),@ptnum);\nelse if(ndcP.y<ch("uvyx") || ndcP.y>1+ch("uvyy"))removepoint(geoself(),@ptnum);\nelse if(ndcP.z<ch("uvzx") || ndcP.z>1+ch("uvzy"))removepoint(geoself(),@ptnum);' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_ndc_culling
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_ndc_culling
opexprlanguage -s hscript $_obj_geo1_ndc_culling
opuserdata -n '___Version___' -v '' $_obj_geo1_ndc_culling
opset -p on $_obj_geo1_ndc_culling

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_ndc_culling
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_ndc_culling
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle3" label="del_by_atr_list" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_del_by_atr_list (Sop/attribwrangle)
set _obj_geo1_del_by_atr_list = `run("opadd -e -n -v attribwrangle del_by_atr_list")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_del_by_atr_list
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "val_list"      label   "Val List"      type    string  default { "" }     }     parm {         name    "atr"   label   "Atr"   type    string  default { "" }     } ' $_obj_geo1_del_by_atr_list
opparm $_obj_geo1_del_by_atr_list  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_del_by_atr_list snippet ( 'string vals = chs("val_list");\nstring valList[] = split(vals, " ");\nint len = len(valList);\n\nfor(int i =0; i < len; i++)\n{\n    if(i@`chs("atr")`==atoi(valList[i]))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n}' ) atr ( id )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_del_by_atr_list
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_del_by_atr_list
opexprlanguage -s hscript $_obj_geo1_del_by_atr_list
opuserdata -n '___Version___' -v '' $_obj_geo1_del_by_atr_list
opset -p on $_obj_geo1_del_by_atr_list

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_del_by_atr_list
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_del_by_atr_list
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle4" label="del_by_atr_list_run_over_detail" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_del_by_atr_list_run_over_detail (Sop/attribwrangle)
set _obj_geo1_del_by_atr_list_run_over_detail = `run("opadd -e -n -v attribwrangle del_by_atr_list_run_over_detail")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_del_by_atr_list_run_over_detail
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "val_list"      label   "Val List"      type    string  default { "" }     }     parm {         name    "atr"   label   "Atr"   type    string  default { "" }     } ' $_obj_geo1_del_by_atr_list_run_over_detail
opparm $_obj_geo1_del_by_atr_list_run_over_detail  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_del_by_atr_list_run_over_detail class ( detail ) snippet ( 'string vals = chs("val_list");\nstring valList[] = split(vals, " ");\nint len = len(valList);\n\nfor(int i =0; i < len; i++)\n{\n    int pt = findattribval(0,"point",chs("atr"),atoi(valList[i]));\n    removepoint(geoself(),pt);\n\n}' ) atr ( id )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_del_by_atr_list_run_over_detail
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_del_by_atr_list_run_over_detail
opexprlanguage -s hscript $_obj_geo1_del_by_atr_list_run_over_detail
opuserdata -n '___Version___' -v '' $_obj_geo1_del_by_atr_list_run_over_detail
opset -p on $_obj_geo1_del_by_atr_list_run_over_detail

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_del_by_atr_list_run_over_detail
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_del_by_atr_list_run_over_detail
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle6" label="del_randomly" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_del_randomly (Sop/attribwrangle)
set _obj_geo1_del_randomly = `run("opadd -e -n -v attribwrangle del_randomly")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_del_randomly
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "seed"  label   "Seed"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "keep_rate"     label   "Keep Rate"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_geo1_del_randomly
opparm $_obj_geo1_del_randomly  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_del_randomly snippet ( 'float rand = rand((i@id + ch("seed")+0.21) + (ch("seed")));\n\nif(rand > ch("keep_rate"))removepoint(geoself(),@ptnum);' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_del_randomly
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_del_randomly
opexprlanguage -s hscript $_obj_geo1_del_randomly
opuserdata -n '___Version___' -v '' $_obj_geo1_del_randomly
opset -p on $_obj_geo1_del_randomly

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_del_randomly
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_del_randomly
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle7" label="extract_n_up_from_orient" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_extract_n_up_from_orient (Sop/attribwrangle)
set _obj_geo1_extract_n_up_from_orient = `run("opadd -e -n -v attribwrangle extract_n_up_from_orient")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_extract_n_up_from_orient
opparm $_obj_geo1_extract_n_up_from_orient  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_extract_n_up_from_orient snippet ( 'v@up = {0,1,0};\n@N = {0,0,1};\nv@up = qrotate(p@orient, v@up);\n@N = qrotate(p@orient, @N);' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_extract_n_up_from_orient
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_extract_n_up_from_orient
opexprlanguage -s hscript $_obj_geo1_extract_n_up_from_orient
opuserdata -n '___Version___' -v '' $_obj_geo1_extract_n_up_from_orient
opset -p on $_obj_geo1_extract_n_up_from_orient

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_extract_n_up_from_orient
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_extract_n_up_from_orient
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle8" label="fit" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_fit (Sop/attribwrangle)
set _obj_geo1_fit = `run("opadd -e -n -v attribwrangle fit")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_fit
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "min"   label   "Min"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max"   label   "Max"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "remap_grad"    label   "Remap Grad"    type    ramp_flt        default { "2" }         range   { 1! 10 }     } ' $_obj_geo1_fit
opparm $_obj_geo1_fit  bindings ( 0 ) groupbindings ( 0 ) remap_grad ( 2 )
opparm $_obj_geo1_fit snippet ( 'float grad = fit(@P.y,ch("min"),ch("max"),0,1);\ngrad = chramp("remap_grad",grad);' ) max ( 1 ) remap_grad2pos ( 1 ) remap_grad2value ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_fit
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_fit
opexprlanguage -s hscript $_obj_geo1_fit
opuserdata -n '___Version___' -v '' $_obj_geo1_fit
opset -p on $_obj_geo1_fit

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_fit
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_fit
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <toolshelf name="kaToolsDOP" label="kaToolsDOP">
    <memberTool name="DOP_pack"/>
    <memberTool name="DOP_simple_upres"/>
    <memberTool name="DOP_sopsolver"/>
  </toolshelf>

  <tool name="DOP_pack" label="DOP_pack" icon="NETWORKS_dop">
    <helpURL>operator:Sop/dopnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/dopnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('dopnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_DOP_pack (Sop/dopnet)
set _obj_geo1_DOP_pack = `run("opadd -e -n -v dopnet DOP_pack")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_DOP_pack
opparm $_obj_geo1_DOP_pack  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_pack timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_geo1_DOP_pack/timestep
chadd -t 0 0 $_obj_geo1_DOP_pack timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_geo1_DOP_pack/timeoffset
chblockend
opparm -V 16.0.633 $_obj_geo1_DOP_pack stdswitcher ( 1 1 1 ) objname1 ( * )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_pack
opexprlanguage -s hscript $_obj_geo1_DOP_pack
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_DOP_pack
opcf $_obj_geo1_DOP_pack

# Node $_obj_geo1_DOP_pack_rbdpackedobject1 (Dop/rbdpackedobject)
set _obj_geo1_DOP_pack_rbdpackedobject1 = `run("opadd -e -n -v rbdpackedobject rbdpackedobject1")`
oplocate -x `$arg2 + 0.12470586838310282` -y `$arg3 + 4.0197558882973876` $_obj_geo1_DOP_pack_rbdpackedobject1
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_pack_rbdpackedobject1 createframe
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch(opcreator(".")+"/startframe")' $_obj_geo1_DOP_pack_rbdpackedobject1/createframe
chadd -t 0 0 $_obj_geo1_DOP_pack_rbdpackedobject1 bullet_shrink_amount
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("bullet_collision_margin")' $_obj_geo1_DOP_pack_rbdpackedobject1/bullet_shrink_amount
chblockend
opparm -V 4 $_obj_geo1_DOP_pack_rbdpackedobject1 soppath ( '`opinputpath("..",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_pack_rbdpackedobject1
opexprlanguage -s hscript $_obj_geo1_DOP_pack_rbdpackedobject1
opuserdata -n '___Version___' -v '4' $_obj_geo1_DOP_pack_rbdpackedobject1
opuserdata -n '___toolcount___' -v '3' $_obj_geo1_DOP_pack_rbdpackedobject1
opuserdata -n '___toolid___' -v 'dop_rbdpackedobject' $_obj_geo1_DOP_pack_rbdpackedobject1

# Node $_obj_geo1_DOP_pack_rigidbodysolver1 (Dop/rigidbodysolver)
set _obj_geo1_DOP_pack_rigidbodysolver1 = `run("opadd -e -n -v rigidbodysolver rigidbodysolver1")`
oplocate -x `$arg2 + 0.12125587331240695` -y `$arg3 + 2.8366970647679755` $_obj_geo1_DOP_pack_rigidbodysolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_pack_rigidbodysolver1
opexprlanguage -s hscript $_obj_geo1_DOP_pack_rigidbodysolver1
opuserdata -n '___Version___' -v '' $_obj_geo1_DOP_pack_rigidbodysolver1
opuserdata -n '___toolcount___' -v '7' $_obj_geo1_DOP_pack_rigidbodysolver1
opuserdata -n '___toolid___' -v 'dop_rbdglueobject' $_obj_geo1_DOP_pack_rigidbodysolver1

# Node $_obj_geo1_DOP_pack_groundplane1 (Dop/groundplane)
set _obj_geo1_DOP_pack_groundplane1 = `run("opadd -e -n -v groundplane groundplane1")`
oplocate -x `$arg2 + -5.1085441462572891` -y `$arg3 + 2.4974029411604524` $_obj_geo1_DOP_pack_groundplane1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_pack_groundplane1
opexprlanguage -s hscript $_obj_geo1_DOP_pack_groundplane1
opuserdata -n '___Version___' -v '' $_obj_geo1_DOP_pack_groundplane1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_DOP_pack_groundplane1
opuserdata -n '___toolid___' -v 'dop_groundplane' $_obj_geo1_DOP_pack_groundplane1
opcf ..
opcf $_obj_geo1_DOP_pack

# Node $_obj_geo1_DOP_pack_output (Dop/output)
set _obj_geo1_DOP_pack_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + 0.12470586838310284` -y `$arg3 + -2.7444705882352949` $_obj_geo1_DOP_pack_output
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_pack_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_DOP_pack_output/f1
chadd -t 0 0 $_obj_geo1_DOP_pack_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_DOP_pack_output/f2
chblockend
opparm $_obj_geo1_DOP_pack_output
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_pack_output
opexprlanguage -s hscript $_obj_geo1_DOP_pack_output
opuserdata -n '___Version___' -v '' $_obj_geo1_DOP_pack_output

# Node $_obj_geo1_DOP_pack_gravity1 (Dop/gravity)
set _obj_geo1_DOP_pack_gravity1 = `run("opadd -e -n -v gravity gravity1")`
oplocate -x `$arg2 + 0.12470588235294144` -y `$arg3 + 1.7350499940235169` $_obj_geo1_DOP_pack_gravity1
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_pack_gravity1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_DOP_pack_gravity1/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_pack_gravity1
opexprlanguage -s hscript $_obj_geo1_DOP_pack_gravity1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_DOP_pack_gravity1

# Node $_obj_geo1_DOP_pack_merge1 (Dop/merge)
set _obj_geo1_DOP_pack_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + 0.12355585636680645` -y `$arg3 + -1.6188323469967316` $_obj_geo1_DOP_pack_merge1
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_pack_merge1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_DOP_pack_merge1/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_pack_merge1
opexprlanguage -s hscript $_obj_geo1_DOP_pack_merge1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_DOP_pack_merge1

# Node $_obj_geo1_DOP_pack_staticsolver1 (Dop/staticsolver)
set _obj_geo1_DOP_pack_staticsolver1 = `run("opadd -e -n -v staticsolver staticsolver1")`
oplocate -x `$arg2 + -5.1072941176470597` -y `$arg3 + 0.71905000594444568` $_obj_geo1_DOP_pack_staticsolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_pack_staticsolver1
opexprlanguage -s hscript $_obj_geo1_DOP_pack_staticsolver1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_DOP_pack_staticsolver1
oporder -e output rbdpackedobject1 gravity1 rigidbodysolver1 merge1 groundplane1 staticsolver1 
opcf ..
opset -p on $_obj_geo1_DOP_pack

opcf $arg1
opwire -n $_obj_geo1_attribpromote1 -0 $_obj_geo1_DOP_pack
opcf $_obj_geo1_DOP_pack
opwire -n $_obj_geo1_DOP_pack_merge1 -0 $_obj_geo1_DOP_pack_output
opwire -n $_obj_geo1_DOP_pack_rigidbodysolver1 -0 $_obj_geo1_DOP_pack_gravity1
opwire -n $_obj_geo1_DOP_pack_rbdpackedobject1 -0 $_obj_geo1_DOP_pack_rigidbodysolver1
opwire -n $_obj_geo1_DOP_pack_staticsolver1 -0 $_obj_geo1_DOP_pack_merge1
opwire -n $_obj_geo1_DOP_pack_gravity1 -1 $_obj_geo1_DOP_pack_merge1
opwire -n $_obj_geo1_DOP_pack_groundplane1 -0 $_obj_geo1_DOP_pack_staticsolver1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_DOP_pack
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_DOP_pack
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="DOP_simple_upres" label="DOP_simple_upres" icon="NETWORKS_dop">
    <helpURL>operator:Sop/dopnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/dopnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('dopnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_dopnet1 (Sop/dopnet)
set _obj_geo1_dopnet1 = `run("opadd -e -n -v dopnet dopnet1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_dopnet1
opparm $_obj_geo1_dopnet1  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1 timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_geo1_dopnet1/timestep
chadd -t 0 0 $_obj_geo1_dopnet1 timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_geo1_dopnet1/timeoffset
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1 stdswitcher ( 1 1 1 ) objname1 ( * )
opcolor -c 0.80000001192092896 0.40000000596046448 0.40000000596046448 $_obj_geo1_dopnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1
opexprlanguage -s hscript $_obj_geo1_dopnet1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1
opcf $_obj_geo1_dopnet1

# Node $_obj_geo1_dopnet1_smokeobject1 (Dop/smokeobject)
set _obj_geo1_dopnet1_smokeobject1 = `run("opadd -e -n -v smokeobject smokeobject1")`
oplocate -x `$arg2 + -13.716110379717421` -y `$arg3 + 0.44880826262196472` $_obj_geo1_dopnet1_smokeobject1
opspareds '    group {  name    "creation_2"    label   "Properties"    parm {      name        "twod"      baseparm        label       "Two Dimensional"           nolabel         joinnext        export      all     }       parm {      name        "voxelplane"        baseparm        label       "Two Dimensional"           export      none    }       parm {      name        "uniformvoxels"             baseparm        label       "Division Method"           export      none    }       parm {      name        "divsize"           baseparm        label       "Division Size"             export      none    }       parm {      name        "uniformdiv"        baseparm        label       "Uniform Divisions"         export      all     }       parm {      name        "div"       baseparm        label       "Divisions"         export      none    }       parm {      name        "size"      baseparm        label       "Size"      export      none    }       parm {      name        "t"         baseparm        label       "Center"            export      none    }       parm {      name        "closedends"        baseparm        label       "Closed Boundaries"         joinnext        export      all     }       parm {      name        "closexneg"         baseparm        label       "-X"        joinnext        export      none    }       parm {      name        "closexpos"         baseparm        label       "+X"        joinnext        export      none    }       parm {      name        "closeyneg"         baseparm        label       "-Y"        joinnext        export      none    }       parm {      name        "closeypos"         baseparm        label       "+Y"        joinnext        export      none    }       parm {      name        "closezneg"         baseparm        label       "-Z"        joinnext        export      none    }       parm {      name        "closezpos"         baseparm        label       "+Z"        export      none    }       parm {      name        "upres_density"             label       "upres_density"             type        toggle      default     { "1" }         }     }      group {    name    "creation_2_1"  label   "Creation"      parm {      name        "usesimframe"       baseparm        label       "Creation Frame Specifies Simulation Frame"         export      none    }       parm {      name        "createframe"       baseparm        label       "Creation Frame"            export      none    }       parm {      name        "object_name"       baseparm        label       "Object Name"       export      none    }       parm {      name        "solvefirstframe"           baseparm        label       "Solve on Creation Frame"           export      none    }       parm {      name        "allowcaching"      baseparm        label       "Allow Caching"             export      none    }     }      group {    name    "creation_2_2"  label   "Instancing"    parm {      name        "instance_objects"          baseparm        label       "Create Objects From Points"        export      none    }       parm {      name        "override_container_size"           baseparm        label       "Override Container Size"           export      none    }       parm {      name        "override_division_size"            baseparm        label       "Override Division Size"            export      none    }       parm {      name        "numobjects"        baseparm        label       "Number of Objects"         export      none    }       parm {      name        "instance_points"           baseparm        label       "Instance Points"           export      none    }       parm {      name        "continuous"        baseparm        label       "Continuous"        export      none    }     }      parm {     name    "size_unit_comp"        baseparm        label   "Unit Compensation"     invisible       export  none     }     group {  name    "std_switcher_1"        label   "Guides"        grouptag        { "import_enable" "1" }         grouptag        { "import_source" "op:smokeconfigureobject2" }  grouptag        { "import_token" "std_switcher_0:Guides" }      group {             name        "folder1"           label       "Visualization"             grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Visualization" }          parm {              name    "multifield_showguide"          baseparm                label   "Multi"                 nolabel                 joinnext                export  none        }       parm {              name    "multifield_color"              baseparm                label   "Multi Field"           export  none        }       parm {              name    "density_showguide"             baseparm                label   "Density         "              nolabel                 joinnext                export  none        }       parm {              name    "density_color"                 baseparm                label   "Density"               export  none        }       parm {              name    "temperature1_showguide"                baseparm                label   "Temperature "          nolabel                 joinnext                export  none        }       parm {              name    "temperature1_color"            baseparm                label   "Temperature"           export  none        }       parm {              name    "fuel_showguide"                baseparm                label   "Fuel             "             nolabel                 joinnext                export  none        }       parm {              name    "fuel_color"            baseparm                label   "Fuel"          export  none        }       parm {              name    "divergence_showguide"          baseparm                label   "Divergence   "                 nolabel                 joinnext                export  none        }       parm {              name    "divergence_color"              baseparm                label   "Divergence"            export  none        }       parm {              name    "burn_showguide"                baseparm                label   "Burn            "              nolabel                 joinnext                export  none        }       parm {              name    "burn_color"            baseparm                label   "Burn"          export  none        }       parm {              name    "heat_showguide"                baseparm                label   "Show Guide Geometry"           nolabel                 joinnext                export  none        }       parm {              name    "heat_color"            baseparm                label   "Heat"          export  none        }       parm {              name    "velocity_showguide"            baseparm                label   "Velocity        "              nolabel                 joinnext                export  none        }       parm {              name    "velocity_color"                baseparm                label   "Velocity"              export  none        }       parm {              name    "collisionmask1_showguide"              baseparm                label   "Collision       "              nolabel                 joinnext                export  none        }       parm {              name    "collisionmask1_color"          baseparm                label   "Collision"             export  none        }       parm {              name    "sourcemask1_showguide"                 baseparm                label   "Source         "               nolabel                 joinnext                export  none        }       parm {              name    "sourcemask1_color"             baseparm                label   "Source"                export  none        }       parm {              name    "sinkmask1_showguide"           baseparm                label   "Sink             "             nolabel                 joinnext                export  none        }       parm {              name    "sinkmask1_color"               baseparm                label   "Sink"          export  none        }   }       group {             name        "folder1_1"         label       "Multi"             grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Multi" }          parm {              name    "multifield_usebox"             baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "multifield_useboxhash"                 baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "multifield_rangemin"           baseparm                label   "Minimum"               export  none        }       parm {              name    "multifield_rangemax"           baseparm                label   "Maximum"               export  none        }       parm {              name    "multifield_densityscale"               baseparm                label   "Density Scale"                 export  none        }       parm {              name    "multifield_shadowscale"                baseparm                label   "Shadow Scale"          export  none        }       parm {              name    "multifield_setmaxres"          baseparm                label   "Set Max Res"           nolabel                 joinnext                export  none        }       parm {              name    "multifield_maxres"             baseparm                label   "Max Vis Res"           export  none        }       group {             name    "folder15"              label   "Smoke"                 grouptag        { "import_source" "op:smokeconfigureobject2" }          grouptag        { "import_token" "folder3:Smoke" }              parm {              name        "multifield_densityfield"                   baseparm                label       "Density Field"                     export      none            }               parm {              name        "multifield_densityrampmode"                baseparm                label       "Mode"              joinnext                export      none            }               parm {              name        "multifield_densitypreset"                  baseparm                label       "Density"                   export      none            }               parm {              name        "multifield_densityramp"                    baseparm                label       "Density Ramp"              export      none            }               parm {              name        "multifield_cdfield"                baseparm                label       "Diffuse Field"                     export      none            }               parm {              name        "multifield_cdrangeoverride"                baseparm                label       "Diffuse Range"                     nolabel                 joinnext                export      none            }               parm {              name        "multifield_cdrange"                baseparm                label       "Diffuse Range"                     export      none            }               parm {              name        "multifield_cdrampmode"                     baseparm                label       "Mode"              joinnext                export      none            }               parm {              name        "multifield_cdpreset"               baseparm                label       "Diffuse"                   export      none            }               parm {              name        "multifield_cdramp"                 baseparm                label       "Diffuse Ramp"              export      none            }           }       group {             name    "folder15_1"            label   "Emission"              grouptag        { "import_source" "op:smokeconfigureobject2" }          grouptag        { "import_token" "folder3:Emission" }           parm {              name        "multifield_emitscale"              baseparm                label       "Emission Scale"                    export      none            }               parm {              name        "multifield_emitfield"              baseparm                label       "Emission Field"                    export      none            }               parm {              name        "multifield_emitrangeoverride"              baseparm                label       "Emit Range"                nolabel                 joinnext                export      none            }               parm {              name        "multifield_emitrange"              baseparm                label       "Emit Range"                export      none            }               parm {              name        "multifield_emitrampmode"                   baseparm                label       "Mode"              joinnext                export      none            }               parm {              name        "multifield_emitpreset"                     baseparm                label       "Emission"                  export      none            }               parm {              name        "multifield_emitramp"               baseparm                label       "Emission Ramp"                     export      none            }               parm {              name        "multifield_emitcdfield"                    baseparm                label       "Emission Color Field"              export      none            }               parm {              name        "multifield_emitcdrangeoverride"                    baseparm                label       "Emission Color Range"              nolabel                 joinnext                export      none            }               parm {              name        "multifield_emitcdrange"                    baseparm                label       "Emission Color Range"              export      none            }               parm {              name        "multifield_emitcdrampmode"                 baseparm                label       "Mode"              joinnext                export      none            }               parm {              name        "multifield_emitcdpreset"                   baseparm                label       "Emission"                  export      none            }               parm {              name        "multifield_emitcdramp"                     baseparm                label       "Emission Color Ramp"               export      none            }           }   }       group {             name        "folder1_2"         label       "Density"           grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Density" }        parm {              name    "density_usebox"                baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "density_useboxhash"            baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "density_usesmoke"              baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "density_guideremapsmoke"               baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "density_guidesmokedensity"             baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "density_guideuseplane"                 baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "density_guideplane"            baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "density_guideplaneval"                 baseparm                label   "Plane Position"                export  none        }       parm {              name    "density_guidevismode"          baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "density_guidevisdensitymode"           baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "density_guiderangemode"                baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "density_guiderange"            baseparm                label   "Guide Range"           export  none        }       parm {              name    "density_guiderangecenter"              baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "density_guiderangesize"                baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "density_guideiso"              baseparm                label   "Iso Offset"            export  none        }       parm {              name    "density_guideinvert"           baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_3"         label       "Temperature"       grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Temperature" }            parm {              name    "temperature1_usebox"           baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "temperature1_useboxhash"               baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "temperature1_usesmoke"                 baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "temperature1_guideremapsmoke"          baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "temperature1_guidesmokedensity"                baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "temperature1_guideuseplane"            baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "temperature1_guideplane"               baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "temperature1_guideplaneval"            baseparm                label   "Plane Position"                export  none        }       parm {              name    "temperature1_guidevismode"             baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "temperature1_guidevisdensitymode"              baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "temperature1_guiderangemode"           baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "temperature1_guiderange"               baseparm                label   "Guide Range"           export  none        }       parm {              name    "temperature1_guiderangecenter"                 baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "temperature1_guiderangesize"           baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "temperature1_guideiso"                 baseparm                label   "Iso Offset"            export  none        }       parm {              name    "temperature1_guideinvert"              baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_4"         label       "Fuel"      grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Fuel" }           parm {              name    "fuel_usebox"           baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "fuel_useboxhash"               baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "fuel_usesmoke"                 baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "fuel_guideremapsmoke"          baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "fuel_guidesmokedensity"                baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "fuel_guideuseplane"            baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "fuel_guideplane"               baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "fuel_guideplaneval"            baseparm                label   "Plane Position"                export  none        }       parm {              name    "fuel_guidevismode"             baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "fuel_guidevisdensitymode"              baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "fuel_guiderangemode"           baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "fuel_guiderange"               baseparm                label   "Guide Range"           export  none        }       parm {              name    "fuel_guiderangecenter"                 baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "fuel_guiderangesize"           baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "fuel_guideiso"                 baseparm                label   "Iso Offset"            export  none        }       parm {              name    "fuel_guideinvert"              baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_5"         label       "Divergence"        grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Divergence" }             parm {              name    "divergence_usebox"             baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "divergence_useboxhash"                 baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "divergence_usesmoke"           baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "divergence_guideremapsmoke"            baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "divergence_guidesmokedensity"          baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "divergence_guideuseplane"              baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "divergence_guideplane"                 baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "divergence_guideplaneval"              baseparm                label   "Plane Position"                export  none        }       parm {              name    "divergence_guidevismode"               baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "divergence_guidevisdensitymode"                baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "divergence_guiderangemode"             baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "divergence_guiderange"                 baseparm                label   "Guide Range"           export  none        }       parm {              name    "divergence_guiderangecenter"           baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "divergence_guiderangesize"             baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "divergence_guideiso"           baseparm                label   "Iso Offset"            export  none        }       parm {              name    "divergence_guideinvert"                baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_6"         label       "Burn"      grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Burn" }           parm {              name    "burn_usebox"           baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "burn_useboxhash"               baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "burn_usesmoke"                 baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "burn_guideremapsmoke"          baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "burn_guidesmokedensity"                baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "burn_guideuseplane"            baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "burn_guideplane"               baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "burn_guideplaneval"            baseparm                label   "Plane Position"                export  none        }       parm {              name    "burn_guidevismode"             baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "burn_guidevisdensitymode"              baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "burn_guiderangemode"           baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "burn_guiderange"               baseparm                label   "Guide Range"           export  none        }       parm {              name    "burn_guiderangecenter"                 baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "burn_guiderangesize"           baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "burn_guideiso"                 baseparm                label   "Iso Offset"            export  none        }       parm {              name    "burn_guideinvert"              baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_7"         label       "Heat"      grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Heat" }           parm {              name    "heat_usebox"           baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "heat_useboxhash"               baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "heat_usesmoke"                 baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "heat_guideremapsmoke"          baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "heat_guidesmokedensity"                baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "heat_guideuseplane"            baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "heat_guideplane"               baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "heat_guideplaneval"            baseparm                label   "Plane Position"                export  none        }       parm {              name    "heat_guidevismode"             baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "heat_guidevisdensitymode"              baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "heat_guiderangemode"           baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "heat_guiderange"               baseparm                label   "Guide Range"           export  none        }       parm {              name    "heat_guiderangecenter"                 baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "heat_guiderangesize"           baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "heat_guideiso"                 baseparm                label   "Iso Offset"            export  none        }       parm {              name    "heat_guideinvert"              baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_8"         label       "Velocity"          grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Velocity" }       parm {              name    "velocity_guideusebox"          baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "velocity_guideuseboxhash"              baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "velocity_guideusesmoke"                baseparm                label   "Use Smoke"             export  none        }       parm {              name    "velocity_guidescale"           baseparm                label   "Scale"                 export  none        }       parm {              name    "velocity_guideoverridediv"             baseparm                label   "Override Divisions"            export  none        }       parm {              name    "velocity_guidediv"             baseparm                label   "Divisions"             export  none        }       parm {              name    "velocity_guidebarbs"           baseparm                label   "Use Barbs on Vectors"          export  none        }       parm {              name    "velocity_guidepercomp"                 baseparm                label   "Component Velocities"          export  none        }       parm {              name    "velocity_guideusestreamers"            baseparm                label   "Use Streamers"                 joinnext                export  none        }       parm {              name    "velocity_guideuseplane"                baseparm                label   "Use Plane"             export  none        }       parm {              name    "velocity_guideplane"           baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "velocity_guideplaneval"                baseparm                label   "Plane Position"                export  none        }       parm {              name    "velocity_guidestreamerlen"             baseparm                label   "Streamer Length"               export  none        }       parm {              name    "velocity_guidestreamerminspeed"                baseparm                label   "Streamer Minimum Speed"                export  none        }       parm {              name    "velocity_guidevistype"                 baseparm                label   "Visualization Type"            export  none        }       parm {              name    "velocity_guidevismode"                 baseparm                label   "Visualization Mode"            export  none        }       parm {              name    "velocity_guidevisscale"                baseparm                label   "Visualization Scale"           export  none        }       parm {              name    "velocity_guiderange"           baseparm                label   "Visualization Range"           export  none        }   }       group {             name        "folder1_9"         label       "Collision"         grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Collision" }              parm {              name    "collisionmask1_usebox"                 baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "collisionmask1_useboxhash"             baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "collisionmask1_usesmoke"               baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "collisionmask1_guideremapsmoke"                baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "collisionmask1_guidesmokedensity"              baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "collisionmask1_guideuseplane"          baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "collisionmask1_guideplane"             baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "collisionmask1_guideplaneval"          baseparm                label   "Plane Position"                export  none        }       parm {              name    "collisionmask1_guidevismode"           baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "collisionmask1_guidevisdensitymode"            baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "collisionmask1_guiderangemode"                 baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "collisionmask1_guiderange"             baseparm                label   "Guide Range"           export  none        }       parm {              name    "collisionmask1_guiderangecenter"               baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "collisionmask1_guiderangesize"                 baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "collisionmask1_guideiso"               baseparm                label   "Iso Offset"            export  none        }       parm {              name    "collisionmask1_guideinvert"            baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_10"        label       "Source"            grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Source" }         parm {              name    "sourcemask1_usebox"            baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "sourcemask1_useboxhash"                baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "sourcemask1_usesmoke"          baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "sourcemask1_guideremapsmoke"           baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "sourcemask1_guidesmokedensity"                 baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "sourcemask1_guideuseplane"             baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "sourcemask1_guideplane"                baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "sourcemask1_guideplaneval"             baseparm                label   "Plane Position"                export  none        }       parm {              name    "sourcemask1_guidevismode"              baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "sourcemask1_guidevisdensitymode"               baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "sourcemask1_guiderangemode"            baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "sourcemask1_guiderange"                baseparm                label   "Guide Range"           export  none        }       parm {              name    "sourcemask1_guiderangecenter"          baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "sourcemask1_guiderangesize"            baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "sourcemask1_guideiso"          baseparm                label   "Iso Offset"            export  none        }       parm {              name    "sourcemask1_guideinvert"               baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_11"        label       "Sink"      grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Sink" }           parm {              name    "sinkmask1_usebox"              baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "sinkmask1_useboxhash"          baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "sinkmask1_usesmoke"            baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "sinkmask1_guideremapsmoke"             baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "sinkmask1_guidesmokedensity"           baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "sinkmask1_guideuseplane"               baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "sinkmask1_guideplane"          baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "sinkmask1_guideplaneval"               baseparm                label   "Plane Position"                export  none        }       parm {              name    "sinkmask1_guidevismode"                baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "sinkmask1_guidevisdensitymode"                 baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "sinkmask1_guiderangemode"              baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "sinkmask1_guiderange"          baseparm                label   "Guide Range"           export  none        }       parm {              name    "sinkmask1_guiderangecenter"            baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "sinkmask1_guiderangesize"              baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "sinkmask1_guideiso"            baseparm                label   "Iso Offset"            export  none        }       parm {              name    "sinkmask1_guideinvert"                 baseparm                label   "Invert Iso"            export  none        }   }       group {             name        "folder1_12"        label       "Pump"      grouptag    { "import_source" "op:smokeconfigureobject2" }      grouptag    { "import_token" "folder0:Pump" }           parm {              name    "pumpmask1_showguide"           baseparm                label   "Show Guide Geometry"           export  none        }       parm {              name    "pumpmask1_color"               baseparm                label   "Color"                 export  none        }       parm {              name    "pumpmask1_usebox"              baseparm                label   "Bounding Box"          joinnext                export  none        }       parm {              name    "pumpmask1_useboxhash"          baseparm                label   "Bounding Box Hash"             export  none        }       parm {              name    "pumpmask1_usesmoke"            baseparm                label   "Use Smoke   "          joinnext                export  none        }       parm {              name    "pumpmask1_guideremapsmoke"             baseparm                label   "Remap Smoke"           export  none        }       parm {              name    "pumpmask1_guidesmokedensity"           baseparm                label   "Smoke Density"                 export  none        }       parm {              name    "pumpmask1_guideuseplane"               baseparm                label   "Use Plane     "                joinnext                export  none        }       parm {              name    "pumpmask1_guideplane"          baseparm                label   "Plane Orientation"             export  none        }       parm {              name    "pumpmask1_guideplaneval"               baseparm                label   "Plane Position"                export  none        }       parm {              name    "pumpmask1_guidevismode"                baseparm                label   "Visualization Mode"            joinnext                export  none        }       parm {              name    "pumpmask1_guidevisdensitymode"                 baseparm                label   "Alpha Mapping"                 export  none        }       parm {              name    "pumpmask1_guiderangemode"              baseparm                label   "Specify Range by Min/Max"              export  none        }       parm {              name    "pumpmask1_guiderange"          baseparm                label   "Guide Range"           export  none        }       parm {              name    "pumpmask1_guiderangecenter"            baseparm                label   "Guide Range Center"            export  none        }       parm {              name    "pumpmask1_guiderangesize"              baseparm                label   "Guide Range Width"             export  none        }       parm {              name    "pumpmask1_guideiso"            baseparm                label   "Iso Offset"            export  none        }       parm {              name    "pumpmask1_guideinvert"                 baseparm                label   "Invert Iso"            export  none        }   }      }      group {   name    "std_switcher_1_1"      label   "Initial Data"          parm {      name        "density_soppath"           baseparm        label       "Density SOP Path"          joinnext        export      none    }       parm {      name        "density_scalevalue"        baseparm        label       "Scale"             export      none    }       parm {      name        "temperature_soppath"       baseparm        label       "Temperature SOP Path"      joinnext        export      none    }       parm {      name        "temperature_scalevalue"            baseparm        label       "Scale"             export      none    }       parm {      name        "fuel_soppath"      baseparm        label       "Fuel SOP Path"             joinnext        export      none    }       parm {      name        "fuel_scalevalue"           baseparm        label       "Scale"             export      none    }       parm {      name        "velocity_soppath"          baseparm        label       "Velocity SOP Path"         joinnext        export      none    }       parm {      name        "velocity_scalevalue"       baseparm        label       "Scale"             export      none    }       parm {      name        "usetransform"      baseparm        label       "Use Object Transform"      export      none    }       parm {      name        "velocity_direction"        baseparm        label       "Wind Tunnel Direction"             export      none    }       parm {      name        "border"            baseparm        label       "Border Type"       export      none    }       parm {      name        "restfield"         baseparm        label       "Add Rest Field"            export      none    }       parm {      name        "restresscale"      baseparm        label       "Rest Division Scale"       export      none    }       parm {      name        "velocity_voxelsample"      baseparm        label       "Velocity Sampling"         export      none    }       parm {      name        "positionpath"      baseparm        label       "Position Data Path"        export      none    }     }      group {    name    "std_switcher_1_2"      label   "Fields"        grouptag        { "import_enable" "1" }         grouptag        { "import_source" "op:smokeconfigureobject1" }  grouptag        { "import_token" "std_switcher_0:Fields" }      group {             name        "folder3"           label       "Dynamics"          grouptag    { "import_source" "op:smokeconfigureobject1" }      grouptag    { "import_token" "folder1:Dynamics" }       parm {              name    "enablevelocity"                baseparm                label   "Velocity"              export  none        }       parm {              name    "enabledensity"                 baseparm                label   "Density"               export  none        }       parm {              name    "enabletemperature"             baseparm                label   "Temperature"           export  none        }       parm {              name    "enablefuel"            baseparm                label   "Fuel"          export  none        }       parm {              name    "enabledivergence"              baseparm                label   "Divergence"            export  none        }       parm {              name    "enableburn"            baseparm                label   "Burn"          export  none        }       parm {              name    "enablepressure"                baseparm                label   "Pressure"              export  none        }       parm {              name    "enablerest"            baseparm                label   "Rest"          export  none        }       parm {              name    "enableconfinement"             baseparm                label   "Confinement"           export  none        }       parm {              name    "enableheat"            baseparm                label   "Heat"          export  none        }   }       group {             name        "folder3_1"         label       "Masks"             grouptag    { "import_source" "op:smokeconfigureobject1" }      grouptag    { "import_token" "folder1:Masks" }          parm {              name    "enablesource"          baseparm                label   "Source"                export  none        }       parm {              name    "enablesourceindex"             baseparm                label   "Source Index"          export  none        }       parm {              name    "enablesink"            baseparm                label   "Sink"          export  none        }       parm {              name    "enablepump"            baseparm                label   "Pump"          export  none        }       parm {              name    "enablepumpindex"               baseparm                label   "Pump Index"            export  none        }       parm {              name    "enablecollision"               baseparm                label   "Collision"             export  none        }       parm {              name    "enablecollisionvelocity"               baseparm                label   "Collision Velocity"            export  none        }   }      }      group {   name    "std_switcher_1_3"      label   "Slice"         grouptag        { "import_enable" "1" }         grouptag        { "import_source" "op:smokeconfigureobject1" }  grouptag        { "import_token" "std_switcher_0:Slice" }       parm {      name        "slice"             baseparm        label       "Slice"             export      none    }       parm {      name        "slicediv"          baseparm        label       "Slice Divisions"           export      none    }       parm {      name        "sliceoverlapneg"           baseparm        label       "Overlap Voxels Negative"           export      none    }       parm {      name        "sliceoverlappos"           baseparm        label       "Overlap Voxels Positive"           export      none    }     }  ' $_obj_geo1_dopnet1_smokeobject1
opparm $_obj_geo1_dopnet1_smokeobject1  multifield_densityramp ( 2 ) multifield_cdramp ( 2 ) multifield_emitramp ( 2 ) multifield_emitcdramp ( 4 )
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_smokeobject1 createframe
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch(opcreator(".")+"/startframe")' $_obj_geo1_dopnet1_smokeobject1/createframe
chadd -t 0 0 $_obj_geo1_dopnet1_smokeobject1 size_unit_compx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./divsize")- ((ch("./sizex")+ch("./tx"))%ch("./divsize"))' $_obj_geo1_dopnet1_smokeobject1/size_unit_compx
chadd -t 0 0 $_obj_geo1_dopnet1_smokeobject1 size_unit_compy
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./divsize")- ((ch("./sizey")+ch("./ty"))%ch("./divsize"))' $_obj_geo1_dopnet1_smokeobject1/size_unit_compy
chadd -t 0 0 $_obj_geo1_dopnet1_smokeobject1 size_unit_compz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./divsize")- ((ch("./sizez")+ch("./tz"))%ch("./divsize"))' $_obj_geo1_dopnet1_smokeobject1/size_unit_compz
chblockend
opparm $_obj_geo1_dopnet1_smokeobject1 div ( 1 1 1 ) size ( 3 3 3 ) multifield_densityramp2pos ( 1 ) multifield_densityramp2value ( 1 ) multifield_cdramp2pos ( 1 ) multifield_cdramp2c ( 1 1 1 ) multifield_emitramp2pos ( 1 ) multifield_emitramp2value ( 1 ) multifield_emitcdramp2pos ( 0.54000002145767212 ) multifield_emitcdramp2c ( 1 0.43200001120567322 0 ) multifield_emitcdramp2interp ( catmull-rom ) multifield_emitcdramp3pos ( 0.89300000667572021 ) multifield_emitcdramp3c ( 1 0.88330000638961792 0 ) multifield_emitcdramp3interp ( catmull-rom ) multifield_emitcdramp4pos ( 1 ) multifield_emitcdramp4c ( 1 1 1 ) multifield_emitcdramp4interp ( catmull-rom )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_smokeobject1
opexprlanguage -s hscript $_obj_geo1_dopnet1_smokeobject1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_smokeobject1
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_dopnet1_smokeobject1
opuserdata -n '___toolid___' -v 'dynamics_smokebox' $_obj_geo1_dopnet1_smokeobject1

# Node $_obj_geo1_dopnet1_pyrosolver1 (Dop/pyrosolver::2.0)
set _obj_geo1_dopnet1_pyrosolver1 = `run("opadd -e -n -v pyrosolver::2.0 pyrosolver1")`
oplocate -x `$arg2 + -0.047309000045060959` -y `$arg3 + -8.2575573815549266` $_obj_geo1_dopnet1_pyrosolver1
opparm $_obj_geo1_dopnet1_pyrosolver1  remap_cooldown_time ( 2 ) remap_dissipation_field ( 4 ) dist_control_field_ramp ( 2 ) control_field_ramp ( 2 ) turb_control_ramp ( 2 ) conf_control_field_ramp2 ( 2 )
opparm $_obj_geo1_dopnet1_pyrosolver1 combustion_1 ( 4 4 4 4 4 ) lift ( 0 ) enable_combustion ( off ) enable_turbulence ( on ) turbulence_scale ( 0.40000000000000002 ) turb_swirl_size ( 0.5 ) turb_rough ( 0.20000000000000001 ) turb_pulse_length ( 0.69999999999999996 ) remap_cooldown_time1value ( 1 ) remap_cooldown_time2pos ( 1 ) remap_cooldown_time2value ( 0.10000000149011612 ) remap_dissipation_field1value ( 1 ) remap_dissipation_field1interp ( catmull-rom ) remap_dissipation_field2pos ( 0.17888999999999999 ) remap_dissipation_field2value ( 0.875 ) remap_dissipation_field2interp ( catmull-rom ) remap_dissipation_field3pos ( 0.36799999999999999 ) remap_dissipation_field3value ( 0.27000000000000002 ) remap_dissipation_field3interp ( catmull-rom ) remap_dissipation_field4pos ( 1 ) remap_dissipation_field4interp ( catmull-rom ) dist_control_field_ramp2pos ( 1 ) dist_control_field_ramp2value ( 1 ) control_field_ramp2pos ( 1 ) control_field_ramp2value ( 1 ) turb_control_ramp2pos ( 1 ) turb_control_ramp2value ( 1 ) conf_control_field_ramp2_2pos ( 1 ) conf_control_field_ramp2_2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_pyrosolver1
opexprlanguage -s hscript $_obj_geo1_dopnet1_pyrosolver1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_pyrosolver1
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_dopnet1_pyrosolver1
opuserdata -n '___toolid___' -v 'dynamics_pyrobox' $_obj_geo1_dopnet1_pyrosolver1

# Node $_obj_geo1_dopnet1_gasresizefluiddynamic1 (Dop/gasresizefluiddynamic)
set _obj_geo1_dopnet1_gasresizefluiddynamic1 = `run("opadd -e -n -v gasresizefluiddynamic gasresizefluiddynamic1")`
oplocate -x `$arg2 + -0.043859004974364998` -y `$arg3 + 4.8611297607421999` $_obj_geo1_dopnet1_gasresizefluiddynamic1
opparm $_obj_geo1_dopnet1_gasresizefluiddynamic1 extrafields ( hiDensity ) bound_subtract ( 0.10000000000000001 ) field ( 1 1 ) reference_field ( 'density hiDensity' ) use_tracking_objects ( on ) tracking_path ( '`chsop("../sourcevolume1/source_path")`' ) use_max_bounds ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_gasresizefluiddynamic1
opexprlanguage -s hscript $_obj_geo1_dopnet1_gasresizefluiddynamic1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_gasresizefluiddynamic1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_gasresizefluiddynamic1
opuserdata -n '___toolid___' -v 'dynamics_smokebox' $_obj_geo1_dopnet1_gasresizefluiddynamic1

# Node $_obj_geo1_dopnet1_sourcevolume1 (Dop/sourcevolume)
set _obj_geo1_dopnet1_sourcevolume1 = `run("opadd -e -n -v sourcevolume sourcevolume1")`
oplocate -x `$arg2 + 21.746464097305548` -y `$arg3 + -2.0528718161513302` $_obj_geo1_dopnet1_sourcevolume1
opparm $_obj_geo1_dopnet1_sourcevolume1 source_path ( '`opinputpath("..",0)`' ) operation ( 3 3 3 3 3 3 ) normalizesource ( off ) normalizetemp ( off ) velocity_merge ( add ) normalizevel ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_sourcevolume1
opexprlanguage -s hscript $_obj_geo1_dopnet1_sourcevolume1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_sourcevolume1
opuserdata -n '___toolcount___' -v '3' $_obj_geo1_dopnet1_sourcevolume1
opuserdata -n '___toolid___' -v 'dynamics_burnsource' $_obj_geo1_dopnet1_sourcevolume1

# Node $_obj_geo1_dopnet1_gaslocalsharpen1 (Dop/gaslocalsharpen)
set _obj_geo1_dopnet1_gaslocalsharpen1 = `run("opadd -e -n -v gaslocalsharpen gaslocalsharpen1")`
oplocate -x `$arg2 + 11.110459863973144` -y `$arg3 + 4.9466148159923025` $_obj_geo1_dopnet1_gaslocalsharpen1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_gaslocalsharpen1 sharpenrate
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/sharpenrate")' $_obj_geo1_dopnet1_gaslocalsharpen1/sharpenrate
chadd -t 0 0 $_obj_geo1_dopnet1_gaslocalsharpen1 locality
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/sharpen_locality")' $_obj_geo1_dopnet1_gaslocalsharpen1/locality
chadd -t 0 0 $_obj_geo1_dopnet1_gaslocalsharpen1 timescale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/timescale")' $_obj_geo1_dopnet1_gaslocalsharpen1/timescale
chblockend
opparm $_obj_geo1_dopnet1_gaslocalsharpen1 field ( '`chs("../gasadvectfield1/field")`' ) sharpenrate ( sharpenrate ) locality ( locality ) timescale ( timescale )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_gaslocalsharpen1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_gaslocalsharpen1
opexprlanguage -s hscript $_obj_geo1_dopnet1_gaslocalsharpen1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_gaslocalsharpen1

# Node $_obj_geo1_dopnet1_dissipate1 (Dop/gasfieldvop)
set _obj_geo1_dopnet1_dissipate1 = `run("opadd -e -n -v gasfieldvop dissipate1")`
oplocate -x `$arg2 + 12.932979863973145` -y `$arg3 + 5.491669815992303` $_obj_geo1_dopnet1_dissipate1
opspareds '    parm {   name    "timescale"     baseparm        label   "Time Scale"    export  none     }     parm {   name    "evap"  label   "Evaporation Amount"    type    float   default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "temperature"   label   "Temperature"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "use_control_field"     label   "Use Control Field"     type    toggle  default { "on" }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "cf_in"         label   "Control Field Min"     type    float   default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "cf_out"        label   "Control Field Max"     type    float   default { "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "remap_dissipation_field"       label   "Remap Dissipation Field"       type    ramp_flt        default { "2" }         range   { 1! 10 }       parmtag { "parmvop" "1" }       parmtag { "rampbasis_var" "remap_dissipation_field_the_basis_strings" }         parmtag { "rampbasisdefault" "linear" }         parmtag { "rampfloatdefault" "1pos ( 0 ) 1value ( 0 ) 1interp ( linear ) 2pos ( 1 ) 2value ( 1 ) 2interp ( linear )" }  parmtag { "rampkeys_var" "remap_dissipation_field_the_key_positions" }  parmtag { "rampshowcontrolsdefault" "0" }       parmtag { "rampvalues_var" "remap_dissipation_field_the_key_values" }   parmtag { "shaderparmcontexts" "cvex" }     }     groupradio {  name    "stdswitcher5"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "vexshoppath"       baseparm        label       "Shop Path"         export      all     }       parm {      name        "vexscript"         baseparm        label       "Script"            export      none    }       parm {      name        "vexclear"          baseparm        label       "Re-load VEX Functions"             export      none    }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }     }      groupradio {       name    "stdswitcher5_1"        label   "Data Bindings"         parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "binddata#"             baseparm                label   "DOP Data"              export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }      }      parm {    name    "addaffectors"  baseparm        label   "Make Objects Mutual Affectors"         export  none     }     parm {   name    "group"         baseparm        label   "Group"         export  none     }     parm {   name    "dataname"      baseparm        label   "Data Name"     export  none     }     parm {   name    "uniquedataname"        baseparm        label   "Unique Data Name"      export  none     }     parm {   name    "solverperobject"       baseparm        label   "Solver Per Object"     export  none     }     parm {   name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "ix"    label   "IX"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "iy"    label   "IY"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "iz"    label   "IZ"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "density"       label   "Density"       type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "resx"  label   "ResX"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "resy"  label   "ResY"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "resz"  label   "ResZ"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "dPdx"  label   "dPdx"  type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "dPdy"  label   "dPdy"  type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "dPdz"  label   "dPdz"  type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "center"        label   "Center"        type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Timeinc"       label   "Timeinc"       type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vex_cwdpath"   baseparm        label   "Evaluation Node Path"  export  none     }     parm {   name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vex_outputmask"        baseparm        label   "Export Parameters"     export  none     }     parm {   name    "usetimestep"   baseparm        label   "Use Timestep"  export  none     }     parm {   name    "vex_multithread"       baseparm        label   "Enable Multithreading"         export  none     }     parm {   name    "bindinputmenu1"        baseparm        label   "Input 1"       export  none     }     parm {   name    "bindgeoinput1"         baseparm        label   "SOP Path"      export  none     }     parm {   name    "binddopinput1"         baseparm        label   "DOP Data"      export  none     }     parm {   name    "bindinputmenu2"        baseparm        label   "Input 2"       export  none     }     parm {   name    "bindgeoinput2"         baseparm        label   "SOP Path"      export  none     }     parm {   name    "binddopinput2"         baseparm        label   "DOP Data"      export  none     }     parm {   name    "bindinputmenu3"        baseparm        label   "Input 3"       export  none     }     parm {   name    "bindgeoinput3"         baseparm        label   "SOP Path"      export  none     }     parm {   name    "binddopinput3"         baseparm        label   "DOP Data"      export  none     }     parm {   name    "bindinputmenu4"        baseparm        label   "Input 4"       export  none     }     parm {   name    "bindgeoinput4"         baseparm        label   "SOP Path"      export  none     }     parm {   name    "binddopinput4"         baseparm        label   "DOP Data"      export  none     } ' $_obj_geo1_dopnet1_dissipate1
opmultiparm $_obj_geo1_dopnet1_dissipate1 'remap_control#pos' '../remap_control#pos' 'remap_control#value' '../remap_control#value' 'remap_control#interp' '../remap_control#interp' 'rsfield#pos' '../../rsfield#pos' 'rsfield#value' '../../rsfield#value' 'rsfield#interp' '../../rsfield#interp' 'rsramp#pos' '../rsramp#pos' 'rsramp#value' '../rsramp#value' 'rsramp#interp' '../rsramp#interp' 'remap_temperature#pos' '../solver2/remap_temperature#pos' 'remap_temperature#value' '../solver2/remap_temperature#value' 'remap_temperature#interp' '../solver2/remap_temperature#interp' 'remap_dissipation_field_2_#pos' '../remap_dissipation_field#pos' 'remap_dissipation_field_2_#value' '../remap_dissipation_field#value' 'remap_dissipation_field_2_#interp' '../remap_dissipation_field#interp' 'remap_dissipation_field#pos' '../pyrosolver1/remap_dissipation_field#pos' 'remap_dissipation_field#value' '../pyrosolver1/remap_dissipation_field#value' 'remap_dissipation_field#interp' '../pyrosolver1/remap_dissipation_field#interp'
opparm $_obj_geo1_dopnet1_dissipate1  bindings ( 2 ) remap_dissipation_field ( 4 )
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 timescale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/timescale")' $_obj_geo1_dopnet1_dissipate1/timescale
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 evap
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/evap")' $_obj_geo1_dopnet1_dissipate1/evap
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 use_control_field
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/use_dissipation_control_field")' $_obj_geo1_dopnet1_dissipate1/use_control_field
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 cf_in
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/dissipation_control_range1")' $_obj_geo1_dopnet1_dissipate1/cf_in
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 cf_out
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/dissipation_control_range2")' $_obj_geo1_dopnet1_dissipate1/cf_out
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field
chkey -t 0 -v 4 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field1pos
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field1pos")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field1pos
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field1value
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field1value")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field1value
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field1interp
chkey -t 0 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field1interp")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field1interp
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field2pos
chkey -t 0 -v 0.17889000475406647 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field2pos")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field2pos
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field2value
chkey -t 0 -v 0.875 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field2value")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field2value
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field2interp
chkey -t 0 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field2interp")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field2interp
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field3pos
chkey -t 0 -v 0.36800000071525574 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field3pos")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field3pos
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field3value
chkey -t 0 -v 0.27000001072883606 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field3value")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field3value
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field3interp
chkey -t 0 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field3interp")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field3interp
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field4pos
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field4pos")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field4pos
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field4value
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field4value")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field4value
chadd -t 0 0 $_obj_geo1_dopnet1_dissipate1 remap_dissipation_field4interp
chkey -t 0 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/remap_dissipation_field4interp")' $_obj_geo1_dopnet1_dissipate1/remap_dissipation_field4interp
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1 vop_compiler ( 'vcc -r -q $VOP_INCLUDEPATH -o $VOP_OBJECTFILE -e $VOP_ERRORFILE $VOP_SOURCEFILE' ) autobind ( off ) bindings ( 2 ) timescale ( timescale ) dataname ( Solver ) solverperobject ( on ) binddata1 ( '`chs("../pyrosolver1/dissipation_control_field")`' ) bindparm1 ( temperature ) binddata2 ( '`chs("../gasadvectfield1/field")`' ) bindparm2 ( soot ) evap ( evap ) use_control_field ( use_control_field ) cf_in ( cf_in ) cf_out ( cf_out ) remap_dissipation_field ( remap_dissipation_field ) remap_dissipation_field1pos ( remap_dissipation_field1pos ) remap_dissipation_field1value ( remap_dissipation_field1value ) remap_dissipation_field1interp ( remap_dissipation_field1interp ) remap_dissipation_field2pos ( remap_dissipation_field2pos ) remap_dissipation_field2value ( remap_dissipation_field2value ) remap_dissipation_field2interp ( remap_dissipation_field2interp ) remap_dissipation_field3pos ( remap_dissipation_field3pos ) remap_dissipation_field3value ( remap_dissipation_field3value ) remap_dissipation_field3interp ( remap_dissipation_field3interp ) remap_dissipation_field4pos ( remap_dissipation_field4pos ) remap_dissipation_field4value ( remap_dissipation_field4value ) remap_dissipation_field4interp ( remap_dissipation_field4interp )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_dissipate1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1
opcf $_obj_geo1_dopnet1_dissipate1

# Node $_obj_geo1_dopnet1_dissipate1_soot_in (Vop/parameter)
set _obj_geo1_dopnet1_dissipate1_soot_in = `run("opadd -e -n -v parameter soot_in")`
oplocate -x `$arg2 + 16.3657` -y `$arg3 + 6.3326500000000001` $_obj_geo1_dopnet1_dissipate1_soot_in
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_soot_in parmname ( soot ) parmlabel ( soot ) exportcontext ( cvex )
opcolor -c 0.40000000596046448 0 0.60000002384185791 $_obj_geo1_dopnet1_dissipate1_soot_in
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_soot_in
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_soot_in
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_soot_in

# Node $_obj_geo1_dopnet1_dissipate1_soot_out (Vop/parameter)
set _obj_geo1_dopnet1_dissipate1_soot_out = `run("opadd -e -n -v parameter soot_out")`
oplocate -x `$arg2 + 21.749700000000001` -y `$arg3 + 5.5954899999999999` $_obj_geo1_dopnet1_dissipate1_soot_out
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_soot_out parmname ( soot ) parmlabel ( soot ) useasparmdefiner ( on ) usebound ( on ) exportparm ( on ) exportcontext ( cvex )
opcolor -c 1 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_soot_out
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_soot_out
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_soot_out
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_soot_out

# Node $_obj_geo1_dopnet1_dissipate1_evaporation (Vop/parameter)
set _obj_geo1_dopnet1_dissipate1_evaporation = `run("opadd -e -n -v parameter evaporation")`
oplocate -x `$arg2 + 10.8269` -y `$arg3 + 5.81114` $_obj_geo1_dopnet1_dissipate1_evaporation
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_evaporation parmname ( evap ) parmlabel ( 'Evaporation Amount' ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_dopnet1_dissipate1_evaporation
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_evaporation
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_evaporation
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_evaporation

# Node $_obj_geo1_dopnet1_dissipate1_multiply1 (Vop/multiply)
set _obj_geo1_dopnet1_dissipate1_multiply1 = `run("opadd -e -n -v multiply multiply1")`
oplocate -x `$arg2 + 13.1038` -y `$arg3 + 4.4201800000000002` $_obj_geo1_dopnet1_dissipate1_multiply1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_multiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_multiply1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_multiply1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_multiply1

# Node $_obj_geo1_dopnet1_dissipate1_complement1 (Vop/complement)
set _obj_geo1_dopnet1_dissipate1_complement1 = `run("opadd -e -n -v complement complement1")`
oplocate -x `$arg2 + 14.635999999999999` -y `$arg3 + 4.8437799999999998` $_obj_geo1_dopnet1_dissipate1_complement1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_complement1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_complement1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_complement1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_dissipate1_complement1

# Node $_obj_geo1_dopnet1_dissipate1_clamp1 (Vop/clamp)
set _obj_geo1_dopnet1_dissipate1_clamp1 = `run("opadd -e -n -v clamp clamp1")`
oplocate -x `$arg2 + 16.377400000000002` -y `$arg3 + 4.5613799999999998` $_obj_geo1_dopnet1_dissipate1_clamp1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_clamp1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_clamp1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_clamp1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_dissipate1_clamp1

# Node $_obj_geo1_dopnet1_dissipate1_multiply2 (Vop/multiply)
set _obj_geo1_dopnet1_dissipate1_multiply2 = `run("opadd -e -n -v multiply multiply2")`
oplocate -x `$arg2 + 18.585899999999999` -y `$arg3 + 5.4542900000000003` $_obj_geo1_dopnet1_dissipate1_multiply2
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_multiply2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_multiply2
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_multiply2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_multiply2

# Node $_obj_geo1_dopnet1_dissipate1_temperature (Vop/parameter)
set _obj_geo1_dopnet1_dissipate1_temperature = `run("opadd -e -n -v parameter temperature")`
oplocate -x `$arg2 + 7.6077500000000002` -y `$arg3 + 2.72885` $_obj_geo1_dopnet1_dissipate1_temperature
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_temperature parmname ( temperature ) parmlabel ( Temperature ) exportcontext ( cvex ) invisible ( on )
opcolor -c 0.40000000596046448 0 0.60000002384185791 $_obj_geo1_dopnet1_dissipate1_temperature
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_temperature
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_temperature
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_temperature

# Node $_obj_geo1_dopnet1_dissipate1_Timeindc (Vop/volumevopglobal)
set _obj_geo1_dopnet1_dissipate1_Timeindc = `run("opadd -e -n -v volumevopglobal Timeindc")`
oplocate -x `$arg2 + 11.2674` -y `$arg3 + -1.42503` $_obj_geo1_dopnet1_dissipate1_Timeindc
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_Timeindc
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M on -H off -E off $_obj_geo1_dopnet1_dissipate1_Timeindc
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_Timeindc
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_dissipate1_Timeindc

# Node $_obj_geo1_dopnet1_dissipate1_mulconst1 (Vop/mulconst)
set _obj_geo1_dopnet1_dissipate1_mulconst1 = `run("opadd -e -n -v mulconst mulconst1")`
oplocate -x `$arg2 + 13.2666` -y `$arg3 + 1.9764900000000001` $_obj_geo1_dopnet1_dissipate1_mulconst1
opparm $_obj_geo1_dopnet1_dissipate1_mulconst1 mulconst ( 24 )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_mulconst1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_mulconst1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_mulconst1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_dissipate1_mulconst1

# Node $_obj_geo1_dopnet1_dissipate1_multiply3 (Vop/multiply)
set _obj_geo1_dopnet1_dissipate1_multiply3 = `run("opadd -e -n -v multiply multiply3")`
oplocate -x `$arg2 + 15.575200000000001` -y `$arg3 + 1.6940900000000001` $_obj_geo1_dopnet1_dissipate1_multiply3
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_multiply3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_multiply3
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_multiply3
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_multiply3

# Node $_obj_geo1_dopnet1_dissipate1_timescale (Vop/parameter)
set _obj_geo1_dopnet1_dissipate1_timescale = `run("opadd -e -n -v parameter timescale")`
oplocate -x `$arg2 + 12.9152` -y `$arg3 + -0.31978600000000001` $_obj_geo1_dopnet1_dissipate1_timescale
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_timescale parmname ( timescale ) parmlabel ( Timescale ) floatdef ( 1 ) exportcontext ( cvex )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_timescale
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_timescale
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_timescale
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_timescale

# Node $_obj_geo1_dopnet1_dissipate1_if_control_field (Vop/if)
set _obj_geo1_dopnet1_dissipate1_if_control_field = `run("opadd -e -n -v if if_control_field")`
oplocate -x `$arg2 + 11.3057` -y `$arg3 + 2.44645` $_obj_geo1_dopnet1_dissipate1_if_control_field
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_if_control_field
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_if_control_field
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_if_control_field
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_if_control_field
opcf $_obj_geo1_dopnet1_dissipate1_if_control_field

# Node $_obj_geo1_dopnet1_dissipate1_if_control_field_suboutput1 (Vop/suboutput)
set _obj_geo1_dopnet1_dissipate1_if_control_field_suboutput1 = `run("opadd -e -n -v suboutput suboutput1")`
oplocate -x `$arg2 + 5.3235299999999999` -y `$arg3 + -0.019607800000000002` $_obj_geo1_dopnet1_dissipate1_if_control_field_suboutput1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_if_control_field_suboutput1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_if_control_field_suboutput1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_if_control_field_suboutput1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_if_control_field_suboutput1

# Node $_obj_geo1_dopnet1_dissipate1_if_control_field_subinput1 (Vop/subinput)
set _obj_geo1_dopnet1_dissipate1_if_control_field_subinput1 = `run("opadd -e -n -v subinput subinput1")`
oplocate -x `$arg2 + -1.0313699999999999` -y `$arg3 + 1.6764699999999999` $_obj_geo1_dopnet1_dissipate1_if_control_field_subinput1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_if_control_field_subinput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_if_control_field_subinput1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_if_control_field_subinput1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_if_control_field_subinput1

# Node $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_in (Vop/parameter)
set _obj_geo1_dopnet1_dissipate1_if_control_field_cf_in = `run("opadd -e -n -v parameter cf_in")`
oplocate -x `$arg2 + -0.65974100000000002` -y `$arg3 + 0.23065099999999999` $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_in
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_in parmname ( cf_in ) parmlabel ( 'Control Field Min' ) rangeflt ( 0 10 ) exportcontext ( cvex )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_in
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_in
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_in
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_in

# Node $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1 (Vop/fit)
set _obj_geo1_dopnet1_dissipate1_if_control_field_fit1 = `run("opadd -e -n -v fit fit1")`
oplocate -x `$arg2 + 1.41673` -y `$arg3 + -0.19294900000000001` $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1

# Node $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_out (Vop/parameter)
set _obj_geo1_dopnet1_dissipate1_if_control_field_cf_out = `run("opadd -e -n -v parameter cf_out")`
oplocate -x `$arg2 + -0.77141199999999999` -y `$arg3 + -1.17919` $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_out
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_out parmname ( cf_out ) parmlabel ( 'Control Field Max' ) floatdef ( 1 ) rangeflt ( 0 10 ) exportcontext ( cvex )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_out
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_out
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_out
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_out

# Node $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1 (Vop/rampparm)
set _obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1 = `run("opadd -e -n -v rampparm rampparm1")`
oplocate -x `$arg2 + 3.4506000000000001` -y `$arg3 + -0.19294900000000001` $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1
opparm $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1  rampcolordefault ( 2 ) rampfloatdefault ( 2 )
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1 parmname ( remap_dissipation_field ) parmlabel ( 'Remap Dissipation Field' ) ramptype ( flt ) rampshowcontrolsdefault ( off ) rampcolordefault2pos ( 1 ) rampcolordefault2c ( 1 1 1 ) rampfloatdefault2pos ( 1 ) rampfloatdefault2value ( 1 )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1
opcf ..

# Node $_obj_geo1_dopnet1_dissipate1_use_control_field (Vop/parameter)
set _obj_geo1_dopnet1_dissipate1_use_control_field = `run("opadd -e -n -v parameter use_control_field")`
oplocate -x `$arg2 + 9.0949399999999994` -y `$arg3 + 3.64256` $_obj_geo1_dopnet1_dissipate1_use_control_field
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_use_control_field parmname ( use_control_field ) parmlabel ( 'Use Control Field' ) parmtype ( toggle ) toggledef ( on ) exportcontext ( cvex )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_use_control_field
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_use_control_field
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_use_control_field
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_use_control_field

# Node $_obj_geo1_dopnet1_dissipate1_constant1 (Vop/constant)
set _obj_geo1_dopnet1_dissipate1_constant1 = `run("opadd -e -n -v constant constant1")`
oplocate -x `$arg2 + 9.0886499999999995` -y `$arg3 + 1.28051` $_obj_geo1_dopnet1_dissipate1_constant1
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipate1_constant1 floatdef ( 1 ) constname ( constant )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_constant1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_constant1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_constant1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipate1_constant1

# Node $_obj_geo1_dopnet1_dissipate1_pow1 (Vop/pow)
set _obj_geo1_dopnet1_dissipate1_pow1 = `run("opadd -e -n -v pow pow1")`
oplocate -x `$arg2 + 17.879100000000001` -y `$arg3 + 3.7837100000000001` $_obj_geo1_dopnet1_dissipate1_pow1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipate1_pow1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off -L off -M off -H on -E off $_obj_geo1_dopnet1_dissipate1_pow1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipate1_pow1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_dissipate1_pow1
opcf ..
opcf ..
opcf $_obj_geo1_dopnet1

# Node $_obj_geo1_dopnet1_output (Dop/output)
set _obj_geo1_dopnet1_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + -0.0034495182335379654` -y `$arg3 + -10.119534005090058` $_obj_geo1_dopnet1_output
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_dopnet1_output/f1
chadd -t 0 0 $_obj_geo1_dopnet1_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_dopnet1_output/f2
chblockend
opparm $_obj_geo1_dopnet1_output
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_output
opexprlanguage -s hscript $_obj_geo1_dopnet1_output
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_output
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_output
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_output

# Node $_obj_geo1_dopnet1_gravity1 (Dop/gravity)
set _obj_geo1_dopnet1_gravity1 = `run("opadd -e -n -v gravity gravity1")`
oplocate -x `$arg2 + -0.047309000045060959` -y `$arg3 + -9.1738765134061566` $_obj_geo1_dopnet1_gravity1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_gravity1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_gravity1/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b on $_obj_geo1_dopnet1_gravity1
opexprlanguage -s hscript $_obj_geo1_dopnet1_gravity1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_gravity1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_gravity1

# Node $_obj_geo1_dopnet1_scalarfield1 (Dop/scalarfield)
set _obj_geo1_dopnet1_scalarfield1 = `run("opadd -e -n -v scalarfield scalarfield1")`
oplocate -x `$arg2 + -10.348421024130467` -y `$arg3 + 0.079324379219475993` $_obj_geo1_dopnet1_scalarfield1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfield1 divsize
chkey -t 0 -v 0.10000000000000001 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/divsize")/2' $_obj_geo1_dopnet1_scalarfield1/divsize
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfield1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/sizex")' $_obj_geo1_dopnet1_scalarfield1/sizex
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfield1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/sizey")' $_obj_geo1_dopnet1_scalarfield1/sizey
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfield1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/sizez")' $_obj_geo1_dopnet1_scalarfield1/sizez
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfield1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/tx")' $_obj_geo1_dopnet1_scalarfield1/tx
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfield1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/ty")' $_obj_geo1_dopnet1_scalarfield1/ty
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfield1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/tz")' $_obj_geo1_dopnet1_scalarfield1/tz
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfield1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_scalarfield1/activation
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_scalarfield1 divsize ( divsize ) size ( sizex sizey sizez ) t ( tx ty tz ) dataname ( hiDensity )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_scalarfield1
opexprlanguage -s hscript $_obj_geo1_dopnet1_scalarfield1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_scalarfield1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_scalarfield1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_scalarfield1

# Node $_obj_geo1_dopnet1_scalarfieldvisualization1 (Dop/scalarfieldvisualization)
set _obj_geo1_dopnet1_scalarfieldvisualization1 = `run("opadd -e -n -v scalarfieldvisualization scalarfieldvisualization1")`
oplocate -x `$arg2 + -10.348421500967566` -y `$arg3 + 1.1663824465412755` $_obj_geo1_dopnet1_scalarfieldvisualization1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_scalarfieldvisualization1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_scalarfieldvisualization1/activation
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_scalarfieldvisualization1 showguide ( on ) color ( 1 0 0 ) usesmoke ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_scalarfieldvisualization1
opexprlanguage -s hscript $_obj_geo1_dopnet1_scalarfieldvisualization1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_scalarfieldvisualization1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_scalarfieldvisualization1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_scalarfieldvisualization1

# Node $_obj_geo1_dopnet1_applydata1 (Dop/applydata)
set _obj_geo1_dopnet1_applydata1 = `run("opadd -e -n -v applydata applydata1")`
oplocate -x `$arg2 + -11.135872291372866` -y `$arg3 + -1.5120481107097241` $_obj_geo1_dopnet1_applydata1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_applydata1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_applydata1/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_applydata1
opexprlanguage -s hscript $_obj_geo1_dopnet1_applydata1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_applydata1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_applydata1

# Node $_obj_geo1_dopnet1_gascalculate1 (Dop/gascalculate)
set _obj_geo1_dopnet1_gascalculate1 = `run("opadd -e -n -v gascalculate gascalculate1")`
oplocate -x `$arg2 + 31.725040665290575` -y `$arg3 + -0.56983700411726268` $_obj_geo1_dopnet1_gascalculate1
opparm -V 16.0.557 $_obj_geo1_dopnet1_gascalculate1 fielddst ( hiDensity ) fieldsrc ( '`chs("../gasmatchfield2/field")`' ) calculationtype ( add )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_gascalculate1
opexprlanguage -s hscript $_obj_geo1_dopnet1_gascalculate1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_gascalculate1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_gascalculate1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_gascalculate1

# Node $_obj_geo1_dopnet1_merge1 (Dop/merge)
set _obj_geo1_dopnet1_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + 21.746463620468447` -y `$arg3 + -4.7778850722243504` $_obj_geo1_dopnet1_merge1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_merge1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_merge1/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_merge1
opexprlanguage -s hscript $_obj_geo1_dopnet1_merge1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_merge1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_merge1

# Node $_obj_geo1_dopnet1_merge2 (Dop/merge)
set _obj_geo1_dopnet1_merge2 = `run("opadd -e -n -v merge merge2")`
oplocate -x `$arg2 + 29.174449704597574` -y `$arg3 + -2.4383865536777627` $_obj_geo1_dopnet1_merge2
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_merge2 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_merge2/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_merge2
opexprlanguage -s hscript $_obj_geo1_dopnet1_merge2
opuserdata -n '___Version___' -v '15.5.540' $_obj_geo1_dopnet1_merge2
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_merge2
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_merge2

# Node $_obj_geo1_dopnet1_gascalculate2 (Dop/gascalculate)
set _obj_geo1_dopnet1_gascalculate2 = `run("opadd -e -n -v gascalculate gascalculate2")`
oplocate -x `$arg2 + 33.911542644878296` -y `$arg3 + -1.1766025496613208` $_obj_geo1_dopnet1_gascalculate2
opparm -V 16.0.557 $_obj_geo1_dopnet1_gascalculate2 fielddst ( '`chs("../gasmatchfield2/field")`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b on $_obj_geo1_dopnet1_gascalculate2
opexprlanguage -s hscript $_obj_geo1_dopnet1_gascalculate2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_gascalculate2
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_gascalculate2
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_gascalculate2

# Node $_obj_geo1_dopnet1_import_tempDen (Dop/sopsolver::2.0)
set _obj_geo1_dopnet1_import_tempDen = `run("opadd -e -n -v sopsolver::2.0 import_tempDen")`
oplocate -x `$arg2 + 29.282688370368572` -y `$arg3 + 0.25481662137103722` $_obj_geo1_dopnet1_import_tempDen
opparm -V 16.0.557 $_obj_geo1_dopnet1_import_tempDen datapath ( '`chs("../gasmatchfield2/field")`' ) uniquedataname ( on )
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_import_tempDen
opexprlanguage -s hscript $_obj_geo1_dopnet1_import_tempDen
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_import_tempDen
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_import_tempDen
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_import_tempDen
opcf $_obj_geo1_dopnet1_import_tempDen

# Node $_obj_geo1_dopnet1_import_tempDen_dop_geometry (Sop/dopimport)
set _obj_geo1_dopnet1_import_tempDen_dop_geometry = `run("opadd -e -n -v dopimport dop_geometry")`
oplocate -x `$arg2 + 3.6318600000000001` -y `$arg3 + -1.8995500000000001` $_obj_geo1_dopnet1_import_tempDen_dop_geometry
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_import_tempDen_dop_geometry doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_geo1_dopnet1_import_tempDen_dop_geometry/doposxform
chadd -t 0 0 $_obj_geo1_dopnet1_import_tempDen_dop_geometry doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_geo1_dopnet1_import_tempDen_dop_geometry/doxform
chadd -t 0 0 $_obj_geo1_dopnet1_import_tempDen_dop_geometry integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_geo1_dopnet1_import_tempDen_dop_geometry/integrateovertime
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_import_tempDen_dop_geometry doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_geo1_dopnet1_import_tempDen_dop_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_import_tempDen_dop_geometry
opexprlanguage -s hscript $_obj_geo1_dopnet1_import_tempDen_dop_geometry
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_import_tempDen_dop_geometry
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_import_tempDen_dop_geometry
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_import_tempDen_dop_geometry

# Node $_obj_geo1_dopnet1_import_tempDen_impacts (Sop/dopimportrecords)
set _obj_geo1_dopnet1_import_tempDen_impacts = `run("opadd -e -n -v dopimportrecords impacts")`
oplocate -x `$arg2 + 6.3931899999999997` -y `$arg3 + -1.8601000000000001` $_obj_geo1_dopnet1_import_tempDen_impacts
opparm -V 16.0.557 $_obj_geo1_dopnet1_import_tempDen_impacts doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Impacts ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_geo1_dopnet1_import_tempDen_impacts
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_import_tempDen_impacts
opexprlanguage -s hscript $_obj_geo1_dopnet1_import_tempDen_impacts
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_import_tempDen_impacts
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_import_tempDen_impacts
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_import_tempDen_impacts

# Node $_obj_geo1_dopnet1_import_tempDen_feedbacks (Sop/dopimportrecords)
set _obj_geo1_dopnet1_import_tempDen_feedbacks = `run("opadd -e -n -v dopimportrecords feedbacks")`
oplocate -x `$arg2 + 8.6226900000000004` -y `$arg3 + -1.9601299999999999` $_obj_geo1_dopnet1_import_tempDen_feedbacks
opparm -V 16.0.557 $_obj_geo1_dopnet1_import_tempDen_feedbacks doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Feedback ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_geo1_dopnet1_import_tempDen_feedbacks
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_import_tempDen_feedbacks
opexprlanguage -s hscript $_obj_geo1_dopnet1_import_tempDen_feedbacks
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_import_tempDen_feedbacks
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_import_tempDen_feedbacks
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_import_tempDen_feedbacks

# Node $_obj_geo1_dopnet1_import_tempDen_relationship_geometry (Sop/object_merge)
set _obj_geo1_dopnet1_import_tempDen_relationship_geometry = `run("opadd -e -n -v object_merge relationship_geometry")`
oplocate -x `$arg2 + 11.0848` -y `$arg3 + -1.89367` $_obj_geo1_dopnet1_import_tempDen_relationship_geometry
opspareds '    group {  name    "folder0"       label   "Object Merge"          parm {      name        "xformtype"         baseparm        label       "Transform"         export      none    }       parm {      name        "xformpath"         baseparm        label       "Transform Object"          export      none    }       parm {      name        "invertxform"       baseparm        label       "Invert Transform"          export      none    }       parm {      name        "createptgroups"            baseparm        label       "Create Point Groups"       export      none    }       parm {      name        "ptgroupprefix"             baseparm        label       "Point Group Prefix"        export      none    }       parm {      name        "createprimgroups"          baseparm        label       "Create Primitive Groups"           export      none    }       parm {      name        "primgroupprefix"           baseparm        label       "Primitive Group Prefix"            export      none    }       parm {      name        "verbosegroups"             baseparm        label       "Verbose Group Names"       export      none    }       parm {      name        "createptstring"            baseparm        label       "Create Per-Point Path"             export      none    }       parm {      name        "createprimstring"          baseparm        label       "Create Per-Primitive Path"         export      none    }       parm {      name        "pathattrib"        baseparm        label       "Path Attribute"            export      none    }       parm {      name        "pack"      baseparm        label       "Pack Geometry Before Merging"      export      none    }       parm {      name        "pivot"             baseparm        label       "Pivot Location"            export      none    }       parm {      name        "viewportlod"       baseparm        label       "Display As"        export      none    }       parm {      name        "addpath"           baseparm        label       "Add Path Attribute"        export      none    }       parm {      name        "_separator"        baseparm        label       ""          export      none    }       multiparm {         name        "numobj"            label       "Number of Objects"         baseparm        default     1           parm {              name    "enable#"               baseparm                label   "Enable Merge #"                export  none        }       parm {              name    "objpath#"              baseparm                label   "Object #"              export  none        }       parm {              name    "group#"                baseparm                label   "Group #"               export  none        }       parm {              name    "expand#"               baseparm                label   "Expand Group #"                export  none        }   }      }      group {   name    "folder0_1"     label   "Custom Parameters"     parm {      name        "relnode"           label       "Relationship"      type        oppath      default     { "../.." }         range       { 0 1 }             parmtag     { "opfilter" "!!DOP!!" }            parmtag     { "oprelative" "." }    }     }      parm {     name    "suffixfirstgroup"      baseparm        label   "Add Suffix to First Group"     export  none     } ' $_obj_geo1_dopnet1_import_tempDen_relationship_geometry
opparm $_obj_geo1_dopnet1_import_tempDen_relationship_geometry  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_import_tempDen_relationship_geometry relnode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import toolutils\n\nnode = hou.node(".")\nsopsolver = hou.node("..")\n\n# Attempt to discover a constraint network that we\'re wired to.\nnodetypes = ["constraintnetwork", "gluenetworkconstraint", "springnetworkconstraint"]\nfor nodetype in nodetypes:\n    network = toolutils.findOutputNodeOfBaseType(sopsolver, nodetype)\n    if network:\n        return node.relativePathTo(network)\n\nreturn "../.."' -l p $_obj_geo1_dopnet1_import_tempDen_relationship_geometry/relnode
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_import_tempDen_relationship_geometry objpath1 ( '`stamps("..", "DATAPATH", chsop("relnode") + ":Relationships/" + chs(chsop("relnode") + "/relname") + "/" + chs(chsop("relnode") + "/relationship/dataname") + "/Geometry")`' ) folder0 ( 1 1 ) relnode ( relnode )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_geo1_dopnet1_import_tempDen_relationship_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_import_tempDen_relationship_geometry
opexprlanguage -s hscript $_obj_geo1_dopnet1_import_tempDen_relationship_geometry
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_import_tempDen_relationship_geometry
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_import_tempDen_relationship_geometry
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_import_tempDen_relationship_geometry

# Node $_obj_geo1_dopnet1_import_tempDen_object_merge1 (Sop/object_merge)
set _obj_geo1_dopnet1_import_tempDen_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + 4.6816470863342001` -y `$arg3 + -4.5967253341675001` $_obj_geo1_dopnet1_import_tempDen_object_merge1
opparm $_obj_geo1_dopnet1_import_tempDen_object_merge1  numobj ( 1 )
opparm -V 16.0.557 $_obj_geo1_dopnet1_import_tempDen_object_merge1 xformtype ( local ) objpath1 ( '`opinputpath("../..",0)`' )
opcolor -c 0.5 0.33000001311302185 0.15999999642372131 $_obj_geo1_dopnet1_import_tempDen_object_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_import_tempDen_object_merge1
opexprlanguage -s hscript $_obj_geo1_dopnet1_import_tempDen_object_merge1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_import_tempDen_object_merge1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_import_tempDen_object_merge1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_import_tempDen_object_merge1

# Node $_obj_geo1_dopnet1_import_tempDen_blast1 (Sop/blast)
set _obj_geo1_dopnet1_import_tempDen_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 4.6816473007201997` -y `$arg3 + -5.9728207588195996` $_obj_geo1_dopnet1_import_tempDen_blast1
opparm -V 16.0.557 $_obj_geo1_dopnet1_import_tempDen_blast1 group ( '@name=density' ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_import_tempDen_blast1
opexprlanguage -s hscript $_obj_geo1_dopnet1_import_tempDen_blast1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_import_tempDen_blast1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_import_tempDen_blast1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_import_tempDen_blast1

# Node $_obj_geo1_dopnet1_import_tempDen_null1 (Sop/null)
set _obj_geo1_dopnet1_import_tempDen_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + 4.6816473007201997` -y `$arg3 + -7.8940443992615004` $_obj_geo1_dopnet1_import_tempDen_null1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_import_tempDen_null1
opexprlanguage -s hscript $_obj_geo1_dopnet1_import_tempDen_null1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_import_tempDen_null1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_import_tempDen_null1
oporder -e dop_geometry impacts feedbacks relationship_geometry object_merge1 blast1 null1 
opcf ..

# Node $_obj_geo1_dopnet1_gasmatchfield2 (Dop/gasmatchfield)
set _obj_geo1_dopnet1_gasmatchfield2 = `run("opadd -e -n -v gasmatchfield gasmatchfield2")`
oplocate -x `$arg2 + 26.398813954017772` -y `$arg3 + 0.64012297970843779` $_obj_geo1_dopnet1_gasmatchfield2
opparm -V 16.0.557 $_obj_geo1_dopnet1_gasmatchfield2 field ( tempHiDensity ) reffield ( hiDensity )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_gasmatchfield2
opexprlanguage -s hscript $_obj_geo1_dopnet1_gasmatchfield2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_gasmatchfield2
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_gasmatchfield2
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_gasmatchfield2

# Node $_obj_geo1_dopnet1_merge4 (Dop/merge)
set _obj_geo1_dopnet1_merge4 = `run("opadd -e -n -v merge merge4")`
oplocate -x `$arg2 + 27.728224983833375` -y `$arg3 + -0.91232195513646275` $_obj_geo1_dopnet1_merge4
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_merge4 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_merge4/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_merge4
opexprlanguage -s hscript $_obj_geo1_dopnet1_merge4
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_merge4
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_merge4

# Node $_obj_geo1_dopnet1_gasadvectfield1 (Dop/gasadvectfield)
set _obj_geo1_dopnet1_gasadvectfield1 = `run("opadd -e -n -v gasadvectfield gasadvectfield1")`
oplocate -x `$arg2 + 8.7271560490460462` -y `$arg3 + 2.2124837865206159` $_obj_geo1_dopnet1_gasadvectfield1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_gasadvectfield1 timescale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/timescale")' $_obj_geo1_dopnet1_gasadvectfield1/timescale
chblockend
opparm $_obj_geo1_dopnet1_gasadvectfield1 blendwidth ( 0.050000000000000003 ) field ( hiDensity ) timescale ( timescale )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c off -e on -b off $_obj_geo1_dopnet1_gasadvectfield1
opexprlanguage -s hscript $_obj_geo1_dopnet1_gasadvectfield1
opuserdata -n '___Version___' -v '' $_obj_geo1_dopnet1_gasadvectfield1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_dopnet1_gasadvectfield1
opuserdata -n '___toolid___' -v 'simple_upres' $_obj_geo1_dopnet1_gasadvectfield1

# Node $_obj_geo1_dopnet1_merge5 (Dop/merge)
set _obj_geo1_dopnet1_merge5 = `run("opadd -e -n -v merge merge5")`
oplocate -x `$arg2 + 8.7260060370297516` -y `$arg3 + -0.13362097865989364` $_obj_geo1_dopnet1_merge5
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_merge5 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_merge5/activation
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_dopnet1_merge5
opexprlanguage -s hscript $_obj_geo1_dopnet1_merge5
opcf $_obj_geo1_dopnet1_dissipate1
opcf $_obj_geo1_dopnet1_dissipate1_if_control_field
oporder -e suboutput1 subinput1 cf_in fit1 cf_out rampparm1 
opcf ..
oporder -e soot_in soot_out evaporation multiply1 complement1 clamp1 multiply2 temperature Timeindc mulconst1 multiply3 timescale if_control_field use_control_field constant1 pow1 
opcf ..

# Node $_obj_geo1_dopnet1_switchsolver7 (Dop/switchsolver)
set _obj_geo1_dopnet1_switchsolver7 = `run("opadd -e -n -v switchsolver switchsolver7")`
oplocate -x `$arg2 + 11.110459863973144` -y `$arg3 + 3.7182548159923026` $_obj_geo1_dopnet1_switchsolver7
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_switchsolver7 defswitchvalue
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/enable_sharpening")' $_obj_geo1_dopnet1_switchsolver7/defswitchvalue
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_switchsolver7 usedefswitchvalue ( on ) valueenablesall ( on ) defswitchvalue ( defswitchvalue ) solverperobject ( on )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_switchsolver7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_switchsolver7
opexprlanguage -s hscript $_obj_geo1_dopnet1_switchsolver7
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_switchsolver7

# Node $_obj_geo1_dopnet1_switchsolver8 (Dop/switchsolver)
set _obj_geo1_dopnet1_switchsolver8 = `run("opadd -e -n -v switchsolver switchsolver8")`
oplocate -x `$arg2 + 13.932979863973145` -y `$arg3 + 2.7473578583829599` $_obj_geo1_dopnet1_switchsolver8
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_switchsolver8 defswitchvalue
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/enable_dissipation")' $_obj_geo1_dopnet1_switchsolver8/defswitchvalue
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_switchsolver8 usedefswitchvalue ( on ) valueenablesall ( on ) defswitchvalue ( defswitchvalue ) solverperobject ( on )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_switchsolver8
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_switchsolver8
opexprlanguage -s hscript $_obj_geo1_dopnet1_switchsolver8
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_switchsolver8

# Node $_obj_geo1_dopnet1_merge6 (Dop/merge)
set _obj_geo1_dopnet1_merge6 = `run("opadd -e -n -v merge merge6")`
oplocate -x `$arg2 + 12.437939863973144` -y `$arg3 + 1.4159848159923021` $_obj_geo1_dopnet1_merge6
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_merge6 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_dopnet1_merge6/activation
chblockend
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_merge6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_merge6
opexprlanguage -s hscript $_obj_geo1_dopnet1_merge6
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_merge6

# Node $_obj_geo1_dopnet1_dissipatecl1 (Dop/gasopencl)
set _obj_geo1_dopnet1_dissipatecl1 = `run("opadd -e -n -v gasopencl dissipatecl1")`
oplocate -x `$arg2 + 15.125419863973146` -y `$arg3 + 5.4513798159923024` $_obj_geo1_dopnet1_dissipatecl1
opmultiparm $_obj_geo1_dopnet1_dissipatecl1 'parameter7Ramp#pos' '../remap_dissipation_field#pos' 'parameter7Ramp#interp' '../remap_dissipation_field#interp' 'parameter7Ramp#value' '../remap_dissipation_field#value' 'parameter5Ramp#pos' '../dissipate1/remap_dissipation_field#pos' 'parameter5Ramp#value' '../dissipate1/remap_dissipation_field#value' 'parameter5Ramp#interp' '../dissipate1/remap_dissipation_field#interp'
opparm $_obj_geo1_dopnet1_dissipatecl1  paramcount ( 6 ) parameter1Ramp ( 2 ) parameter2Ramp ( 2 ) parameter3Ramp ( 2 ) parameter4Ramp ( 2 ) parameter5Ramp ( 4 ) parameter6Ramp ( 2 )
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 timescale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/timescale")' $_obj_geo1_dopnet1_dissipatecl1/timescale
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter1Flt
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/cf_in")' $_obj_geo1_dopnet1_dissipatecl1/parameter1Flt
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter2Flt
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/cf_out")' $_obj_geo1_dopnet1_dissipatecl1/parameter2Flt
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp1pos
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field1pos")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp1pos
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp1value
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field1value")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp1value
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp1interp
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field1interp")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp1interp
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter6Flt
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/evap")' $_obj_geo1_dopnet1_dissipatecl1/parameter6Flt
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp2pos
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field2pos")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp2pos
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp2value
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field2value")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp2value
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp2interp
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field2interp")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp2interp
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp3pos
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field3pos")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp3pos
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp3value
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field3value")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp3value
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp3interp
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field3interp")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp3interp
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp4pos
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field4pos")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp4pos
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp4value
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field4value")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp4value
chadd -t 0 0 $_obj_geo1_dopnet1_dissipatecl1 parameter5Ramp4interp
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../dissipate1/remap_dissipation_field4interp")' $_obj_geo1_dopnet1_dissipatecl1/parameter5Ramp4interp
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_dissipatecl1 stdswitcher ( 1 1 1 ) kernelname ( dissipate ) kernelfile ( sim/dissipate.cl ) kerneloptions ( ' ' ) timeinc ( on ) timescale ( timescale ) paramcount ( 6 ) solverperobject ( on ) parameter1Name ( ControlMin ) parameter1Type ( float ) parameter1Flt ( parameter1Flt ) parameter1Ramp2pos ( 1 ) parameter1Ramp2value ( 1 ) parameter2Name ( ControlMax ) parameter2Type ( float ) parameter2Flt ( parameter2Flt ) parameter2Ramp2pos ( 1 ) parameter2Ramp2value ( 1 ) parameter3Name ( Density ) parameter3Type ( scalarfield ) parameter3Field ( '`chs("../gasadvectfield1/field")`' ) parameter3Output ( on ) parameter3Ramp2pos ( 1 ) parameter3Ramp2value ( 1 ) parameter4Name ( ControlField ) parameter4Type ( scalarfield ) parameter4Field ( '`chs("../pyrosolver1/dissipation_control_field")`' ) parameter4Ramp2pos ( 1 ) parameter4Ramp2value ( 1 ) parameter5Name ( ControlRamp ) parameter5Type ( ramp ) parameter5Ramp ( parameter5Ramp ) parameter5Ramp1pos ( parameter5Ramp1pos ) parameter5Ramp1value ( parameter5Ramp1value ) parameter5Ramp1interp ( parameter5Ramp1interp ) parameter6Name ( Evap ) parameter6Type ( float ) parameter6Flt ( parameter6Flt ) parameter6Ramp2pos ( 1 ) parameter6Ramp2value ( 1 ) parameter5Ramp2pos ( parameter5Ramp2pos ) parameter5Ramp2value ( parameter5Ramp2value ) parameter5Ramp2interp ( parameter5Ramp2interp ) parameter5Ramp3pos ( parameter5Ramp3pos ) parameter5Ramp3value ( parameter5Ramp3value ) parameter5Ramp3interp ( parameter5Ramp3interp ) parameter5Ramp4pos ( parameter5Ramp4pos ) parameter5Ramp4value ( parameter5Ramp4value ) parameter5Ramp4interp ( parameter5Ramp4interp )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_dissipatecl1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_dissipatecl1
opexprlanguage -s hscript $_obj_geo1_dopnet1_dissipatecl1
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_dissipatecl1

# Node $_obj_geo1_dopnet1_switchcl (Dop/switch)
set _obj_geo1_dopnet1_switchcl = `run("opadd -e -n -v switch switchcl")`
oplocate -x `$arg2 + 13.932979863973145` -y `$arg3 + 4.4310973854108484` $_obj_geo1_dopnet1_switchcl
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_switchcl input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../pyrosolver1/opencl")' $_obj_geo1_dopnet1_switchcl/input
chblockend
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dopnet1_switchcl
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_dopnet1_switchcl
opexprlanguage -s hscript $_obj_geo1_dopnet1_switchcl
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_dopnet1_switchcl

# Node $_obj_geo1_dopnet1_switch1 (Dop/switch)
set _obj_geo1_dopnet1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + -12.554602940195299` -y `$arg3 + -3.0906514211850062` $_obj_geo1_dopnet1_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/upres_density")' $_obj_geo1_dopnet1_switch1/input
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_switch1 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_dopnet1_switch1
opexprlanguage -s hscript $_obj_geo1_dopnet1_switch1

# Node $_obj_geo1_dopnet1_switchsolver1 (Dop/switchsolver)
set _obj_geo1_dopnet1_switchsolver1 = `run("opadd -e -n -v switchsolver switchsolver1")`
oplocate -x `$arg2 + 8.7271560397328205` -y `$arg3 + -1.3159894241170915` $_obj_geo1_dopnet1_switchsolver1
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_switchsolver1 defswitchvalue
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/upres_density")' $_obj_geo1_dopnet1_switchsolver1/defswitchvalue
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_switchsolver1 usedefswitchvalue ( on ) valueenablesall ( on ) defswitchvalue ( defswitchvalue )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_dopnet1_switchsolver1
opexprlanguage -s hscript $_obj_geo1_dopnet1_switchsolver1

# Node $_obj_geo1_dopnet1_switchsolver2 (Dop/switchsolver)
set _obj_geo1_dopnet1_switchsolver2 = `run("opadd -e -n -v switchsolver switchsolver2")`
oplocate -x `$arg2 + 29.175599707300645` -y `$arg3 + -3.5508519589747451` $_obj_geo1_dopnet1_switchsolver2
chblockbegin
chadd -t 0 0 $_obj_geo1_dopnet1_switchsolver2 defswitchvalue
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../smokeobject1/upres_density")' $_obj_geo1_dopnet1_switchsolver2/defswitchvalue
chblockend
opparm -V 16.0.557 $_obj_geo1_dopnet1_switchsolver2 usedefswitchvalue ( on ) valueenablesall ( on ) defswitchvalue ( defswitchvalue )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_dopnet1_switchsolver2
opexprlanguage -s hscript $_obj_geo1_dopnet1_switchsolver2
oporder -e output smokeobject1 pyrosolver1 gasresizefluiddynamic1 sourcevolume1 gravity1 scalarfield1 scalarfieldvisualization1 applydata1 gascalculate1 merge1 merge2 gascalculate2 import_tempDen gasmatchfield2 merge4 gasadvectfield1 merge5 gaslocalsharpen1 dissipate1 switchsolver7 switchsolver8 merge6 dissipatecl1 switchcl switch1 switchsolver1 switchsolver2 
opcf ..
opset -p on $_obj_geo1_dopnet1

opcf $arg1
opcf $_obj_geo1_dopnet1
opwire -n $_obj_geo1_dopnet1_gravity1 -0 $_obj_geo1_dopnet1_output
opwire -n $_obj_geo1_dopnet1_switch1 -0 $_obj_geo1_dopnet1_pyrosolver1
opwire -n $_obj_geo1_dopnet1_gasresizefluiddynamic1 -1 $_obj_geo1_dopnet1_pyrosolver1
opwire -n $_obj_geo1_dopnet1_switchsolver1 -3 $_obj_geo1_dopnet1_pyrosolver1
opwire -n $_obj_geo1_dopnet1_merge1 -4 $_obj_geo1_dopnet1_pyrosolver1
opwire -n $_obj_geo1_dopnet1_pyrosolver1 -0 $_obj_geo1_dopnet1_gravity1
opwire -n $_obj_geo1_dopnet1_scalarfieldvisualization1 -1 $_obj_geo1_dopnet1_scalarfield1
opwire -n $_obj_geo1_dopnet1_smokeobject1 -0 $_obj_geo1_dopnet1_applydata1
opwire -n $_obj_geo1_dopnet1_scalarfield1 -1 $_obj_geo1_dopnet1_applydata1
opwire -n $_obj_geo1_dopnet1_sourcevolume1 -0 $_obj_geo1_dopnet1_merge1
opwire -n $_obj_geo1_dopnet1_switchsolver2 -1 $_obj_geo1_dopnet1_merge1
opwire -n $_obj_geo1_dopnet1_merge4 -0 $_obj_geo1_dopnet1_merge2
opwire -n $_obj_geo1_dopnet1_gascalculate1 -1 $_obj_geo1_dopnet1_merge2
opwire -n $_obj_geo1_dopnet1_gascalculate2 -2 $_obj_geo1_dopnet1_merge2
opcf $_obj_geo1_dopnet1_import_tempDen
opwire -n $_obj_geo1_dopnet1_import_tempDen_object_merge1 -0 $_obj_geo1_dopnet1_import_tempDen_blast1
opwire -n $_obj_geo1_dopnet1_import_tempDen_blast1 -0 $_obj_geo1_dopnet1_import_tempDen_null1
opcf ..
opwire -n $_obj_geo1_dopnet1_gasmatchfield2 -0 $_obj_geo1_dopnet1_merge4
opwire -n $_obj_geo1_dopnet1_import_tempDen -1 $_obj_geo1_dopnet1_merge4
opwire -n $_obj_geo1_dopnet1_gasadvectfield1 -0 $_obj_geo1_dopnet1_merge5
opwire -n $_obj_geo1_dopnet1_merge6 -1 $_obj_geo1_dopnet1_merge5
opcf $_obj_geo1_dopnet1_dissipate1
opwire -n $_obj_geo1_dopnet1_dissipate1_multiply2 -0 $_obj_geo1_dopnet1_dissipate1_soot_out
opwire -n $_obj_geo1_dopnet1_dissipate1_evaporation -0 $_obj_geo1_dopnet1_dissipate1_multiply1
opwire -n $_obj_geo1_dopnet1_dissipate1_if_control_field -1 $_obj_geo1_dopnet1_dissipate1_multiply1
opwire -n $_obj_geo1_dopnet1_dissipate1_multiply1 -0 $_obj_geo1_dopnet1_dissipate1_complement1
opwire -n $_obj_geo1_dopnet1_dissipate1_complement1 -0 $_obj_geo1_dopnet1_dissipate1_clamp1
opwire -n $_obj_geo1_dopnet1_dissipate1_soot_in -0 $_obj_geo1_dopnet1_dissipate1_multiply2
opwire -n $_obj_geo1_dopnet1_dissipate1_pow1 -1 $_obj_geo1_dopnet1_dissipate1_multiply2
opwire -n -o 16 $_obj_geo1_dopnet1_dissipate1_Timeindc -0 $_obj_geo1_dopnet1_dissipate1_mulconst1
opwire -n $_obj_geo1_dopnet1_dissipate1_mulconst1 -0 $_obj_geo1_dopnet1_dissipate1_multiply3
opwire -n $_obj_geo1_dopnet1_dissipate1_timescale -1 $_obj_geo1_dopnet1_dissipate1_multiply3
opwire -n $_obj_geo1_dopnet1_dissipate1_use_control_field -0 $_obj_geo1_dopnet1_dissipate1_if_control_field
opwire -n $_obj_geo1_dopnet1_dissipate1_constant1 -1 $_obj_geo1_dopnet1_dissipate1_if_control_field
opwire -n $_obj_geo1_dopnet1_dissipate1_temperature -2 $_obj_geo1_dopnet1_dissipate1_if_control_field
opcf $_obj_geo1_dopnet1_dissipate1_if_control_field
opwire -n $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1 -1 $_obj_geo1_dopnet1_dissipate1_if_control_field_suboutput1
opwire -n -o 2 $_obj_geo1_dopnet1_dissipate1_if_control_field_subinput1 -0 $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1
opwire -n $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_in -1 $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1
opwire -n $_obj_geo1_dopnet1_dissipate1_if_control_field_cf_out -2 $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1
opwire -n $_obj_geo1_dopnet1_dissipate1_if_control_field_fit1 -0 $_obj_geo1_dopnet1_dissipate1_if_control_field_rampparm1
opcf ..
opwire -n $_obj_geo1_dopnet1_dissipate1_clamp1 -0 $_obj_geo1_dopnet1_dissipate1_pow1
opwire -n $_obj_geo1_dopnet1_dissipate1_multiply3 -1 $_obj_geo1_dopnet1_dissipate1_pow1
opcf ..
opwire -n $_obj_geo1_dopnet1_gaslocalsharpen1 -0 $_obj_geo1_dopnet1_switchsolver7
opwire -n $_obj_geo1_dopnet1_switchcl -0 $_obj_geo1_dopnet1_switchsolver8
opwire -n $_obj_geo1_dopnet1_switchsolver7 -0 $_obj_geo1_dopnet1_merge6
opwire -n $_obj_geo1_dopnet1_switchsolver8 -1 $_obj_geo1_dopnet1_merge6
opwire -n $_obj_geo1_dopnet1_dissipate1 -0 $_obj_geo1_dopnet1_switchcl
opwire -n $_obj_geo1_dopnet1_dissipatecl1 -1 $_obj_geo1_dopnet1_switchcl
opwire -n $_obj_geo1_dopnet1_smokeobject1 -0 $_obj_geo1_dopnet1_switch1
opwire -n $_obj_geo1_dopnet1_applydata1 -1 $_obj_geo1_dopnet1_switch1
opwire -n $_obj_geo1_dopnet1_merge5 -0 $_obj_geo1_dopnet1_switchsolver1
opwire -n $_obj_geo1_dopnet1_merge2 -0 $_obj_geo1_dopnet1_switchsolver2
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_dopnet1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_dopnet1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="graph" label="graph" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1 (Object/geo)
set _obj_geo1 = `run("opadd -e -n -v geo geo1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "full" }          help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_geo1
opset -S on $_obj_geo1
opparm -V 16.0.633 $_obj_geo1 use_dcolor ( off )
chautoscope $_obj_geo1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_geo1
opexprlanguage -s hscript $_obj_geo1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1
opcf $_obj_geo1

# Network Box $_obj_geo1_Delaunay_triangulation
set _obj_geo1_Delaunay_triangulation = `run("nbadd -v Delaunay_triangulation")`
nblocate -x `$arg2 + -12.1672` -y  `$arg3 + 0.186008` $_obj_geo1_Delaunay_triangulation
nbsize -w 3.03239 -h 1.75661 $_obj_geo1_Delaunay_triangulation
nbset  -m off $_obj_geo1_Delaunay_triangulation
nbcolor -c 0.52 0.52 0.52 $_obj_geo1_Delaunay_triangulation

# Network Box $_obj_geo1_Urquhart_graph
set _obj_geo1_Urquhart_graph = `run("nbadd -v Urquhart_graph")`
nblocate -x `$arg2 + -12.0548` -y  `$arg3 + -5.34338` $_obj_geo1_Urquhart_graph
nbsize -w 3.83824 -h 4.3818 $_obj_geo1_Urquhart_graph
nbset  -m off $_obj_geo1_Urquhart_graph
nbcolor -c 0.52 0.52 0.52 $_obj_geo1_Urquhart_graph

# Network Box $_obj_geo1_Gabriel_graph
set _obj_geo1_Gabriel_graph = `run("nbadd -v Gabriel_graph")`
nblocate -x `$arg2 + -3.24413` -y  `$arg3 + -3.61456` $_obj_geo1_Gabriel_graph
nbsize -w 3.15842 -h 2.65297 $_obj_geo1_Gabriel_graph
nbset  -m off $_obj_geo1_Gabriel_graph
nbcolor -c 0.52 0.52 0.52 $_obj_geo1_Gabriel_graph

# Network Box $_obj_geo1_Relative_neighborhood_graph
set _obj_geo1_Relative_neighborhood_graph = `run("nbadd -v Relative_neighborhood_graph")`
nblocate -x `$arg2 + -7.71801` -y  `$arg3 + -3.61456` $_obj_geo1_Relative_neighborhood_graph
nbsize -w 3.89378 -h 2.65297 $_obj_geo1_Relative_neighborhood_graph
nbset  -m off $_obj_geo1_Relative_neighborhood_graph
nbcolor -c 0.52 0.52 0.52 $_obj_geo1_Relative_neighborhood_graph

# Network Box $_obj_geo1___netbox1
set _obj_geo1___netbox1 = `run("nbadd -v __netbox1")`
nblocate -x `$arg2 + 0.703362` -y  `$arg3 + -3.61456` $_obj_geo1___netbox1
nbsize -w 2.89477 -h 2.65297 $_obj_geo1___netbox1
nbset  -m off $_obj_geo1___netbox1
nbcolor -c 0.52 0.52 0.52 $_obj_geo1___netbox1

# Network Box $_obj_geo1___netbox2
set _obj_geo1___netbox2 = `run("nbadd -v __netbox2")`
nblocate -x `$arg2 + 4.43717` -y  `$arg3 + -2.49005` $_obj_geo1___netbox2
nbsize -w 3.11001 -h 1.52846 $_obj_geo1___netbox2
nbset  -m off $_obj_geo1___netbox2
nbcolor -c 0.52 0.52 0.52 $_obj_geo1___netbox2

# Network Box $_obj_geo1___netbox3
set _obj_geo1___netbox3 = `run("nbadd -v __netbox3")`
nblocate -x `$arg2 + 9.29739` -y  `$arg3 + -6.72872` $_obj_geo1___netbox3
nbsize -w 4.18742 -h 5.76713 $_obj_geo1___netbox3
nbset  -m off $_obj_geo1___netbox3
nbcolor -c 0.52 0.52 0.52 $_obj_geo1___netbox3

# Node $_obj_geo1_mark_longest_edges (Sop/attribwrangle)
set _obj_geo1_mark_longest_edges = `run("opadd -e -n -v attribwrangle mark_longest_edges")`
oplocate -x `$arg2 + -11.654400000000001` -y `$arg3 + -1.8485400000000001` $_obj_geo1_mark_longest_edges
opparm $_obj_geo1_mark_longest_edges  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_mark_longest_edges class ( primitive ) snippet ( 'int edge[];\nfloat longest = 0.0;\n\nint vertices[] = primvertices(0, @primnum);\nfor(int i=0; i<len(vertices); i++)\n{\n    int vtx1 = vertices[i];\n    int vtx2 = vertices[(i + 1) % len(vertices)];\n    \n    int pt1 = vertexpoint(0, vtx1);\n    int pt2 = vertexpoint(0, vtx2);\n    \n    vector p1 = point(0, \'P\', pt1);\n    vector p2 = point(0, \'P\', pt2);\n    \n    float dist = distance(p1, p2);\n    \n    if(dist > longest)\n    {\n        longest = dist;\n        \n        int e[];\n        push(e, pt1);\n        push(e, pt2);\n        edge = e;\n    }\n}\n\nif(len(edge) != 0)\n{\n    s@edges = \' p\' + itoa(edge[0]) + \'-\' + itoa(edge[1]);\n}' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_mark_longest_edges
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_mark_longest_edges
nbop $_obj_geo1_Urquhart_graph add $_obj_geo1_mark_longest_edges
opexprlanguage -s hscript $_obj_geo1_mark_longest_edges
opuserdata -n '___Version___' -v '' $_obj_geo1_mark_longest_edges

# Node $_obj_geo1_relative_neighborhood_graph (Sop/attribwrangle)
set _obj_geo1_relative_neighborhood_graph = `run("opadd -e -n -v attribwrangle relative_neighborhood_graph")`
oplocate -x `$arg2 + -7.3210100000000002` -y `$arg3 + -1.8485400000000001` $_obj_geo1_relative_neighborhood_graph
opparm $_obj_geo1_relative_neighborhood_graph  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_relative_neighborhood_graph snippet ( '//for(int pt = @ptnum + 1; pt < @numpt; pt++)\nforeach(int pt; nearpoints(0, @P, 1.0, 10))\n{\n    if(pt == @ptnum) continue;\n    \n    vector p = point(0, \'P\', pt);\n    float dist = distance(p, @P);\n    \n    int ptsA[] = nearpoints(0, @P, dist);\n    int ptsB[] = nearpoints(0, p, dist);\n    \n    int chk = 0;\n    foreach(int cpt; ptsB)\n    {\n        if(cpt == @ptnum || cpt == pt) continue;\n        \n        chk = removevalue(ptsA, cpt);\n        if(chk) break;\n    }\n    \n    if(!chk)\n    {\n        int pr = addprim(0, \'polyline\');\n        addvertex(0, pr, @ptnum);\n        addvertex(0, pr, pt);\n    }\n}' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_relative_neighborhood_graph
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_relative_neighborhood_graph
nbop $_obj_geo1_Relative_neighborhood_graph add $_obj_geo1_relative_neighborhood_graph
opexprlanguage -s hscript $_obj_geo1_relative_neighborhood_graph
opuserdata -n '___Version___' -v '' $_obj_geo1_relative_neighborhood_graph

# Node $_obj_geo1_gabriel_graph (Sop/attribwrangle)
set _obj_geo1_gabriel_graph = `run("opadd -e -n -v attribwrangle gabriel_graph")`
oplocate -x `$arg2 + -2.8471299999999999` -y `$arg3 + -1.8485400000000001` $_obj_geo1_gabriel_graph
opparm $_obj_geo1_gabriel_graph  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_gabriel_graph snippet ( '//for(int pt = @ptnum + 1; pt < @numpt; pt++)\nforeach(int pt; nearpoints(0, @P, 1.0, 10))\n{\n    if(pt == @ptnum) continue;\n    \n    vector p = point(0, \'P\', pt);\n    vector v = p - @P;\n    vector center = @P + v * 0.5;\n    float dist = length(v) * 0.5;\n    \n    int pts[] = nearpoints(0, center, dist);\n    \n    int chk = 0;\n    foreach(int cpt; pts)\n    {\n        if(cpt == @ptnum || cpt == pt) continue;\n        \n        chk = 1;\n        break;\n    }\n    \n    if(!chk)\n    {\n        int pr = addprim(0, \'polyline\');\n        addvertex(0, pr, @ptnum);\n        addvertex(0, pr, pt);\n    }\n}' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_gabriel_graph
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_gabriel_graph
nbop $_obj_geo1_Gabriel_graph add $_obj_geo1_gabriel_graph
opexprlanguage -s hscript $_obj_geo1_gabriel_graph
opuserdata -n '___Version___' -v '' $_obj_geo1_gabriel_graph

# Node $_obj_geo1_clean1 (Sop/clean)
set _obj_geo1_clean1 = `run("opadd -e -n -v clean clean1")`
oplocate -x `$arg2 + -2.8441299999999998` -y `$arg3 + -2.8864399999999999` $_obj_geo1_clean1
opparm $_obj_geo1_clean1 fixoverlap ( on ) deleteoverlap ( off )
chautoscope $_obj_geo1_clean1 +delete_small
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_clean1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_clean1
nbop $_obj_geo1_Gabriel_graph add $_obj_geo1_clean1
opexprlanguage -s hscript $_obj_geo1_clean1
opuserdata -n '___Version___' -v '' $_obj_geo1_clean1

# Node $_obj_geo1_clean2 (Sop/clean)
set _obj_geo1_clean2 = `run("opadd -e -n -v clean clean2")`
oplocate -x `$arg2 + -7.3180100000000001` -y `$arg3 + -2.8864399999999999` $_obj_geo1_clean2
opparm $_obj_geo1_clean2 fixoverlap ( on ) deleteoverlap ( off )
chautoscope $_obj_geo1_clean2 +delete_small
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_clean2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_clean2
nbop $_obj_geo1_Relative_neighborhood_graph add $_obj_geo1_clean2
opexprlanguage -s hscript $_obj_geo1_clean2
opuserdata -n '___Version___' -v '' $_obj_geo1_clean2

# Node $_obj_geo1_convertline2 (Sop/convertline)
set _obj_geo1_convertline2 = `run("opadd -e -n -v convertline convertline2")`
oplocate -x `$arg2 + -11.651400000000001` -y `$arg3 + -4.8864400000000003` $_obj_geo1_convertline2
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_convertline2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_convertline2
nbop $_obj_geo1_Urquhart_graph add $_obj_geo1_convertline2
opexprlanguage -s hscript $_obj_geo1_convertline2
opuserdata -n '___Version___' -v '' $_obj_geo1_convertline2

# Node $_obj_geo1_nearest_neighbor_graph (Sop/attribwrangle)
set _obj_geo1_nearest_neighbor_graph = `run("opadd -e -n -v attribwrangle nearest_neighbor_graph")`
oplocate -x `$arg2 + 1.12374` -y `$arg3 + -1.96912` $_obj_geo1_nearest_neighbor_graph
opparm $_obj_geo1_nearest_neighbor_graph  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_nearest_neighbor_graph snippet ( 'int pts[] = nearpoints(0, @P, 1.0, 2);\n\nint pr = addprim(0, \'polyline\');\naddvertex(0, pr, @ptnum);\naddvertex(0, pr, pts[1]);\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_nearest_neighbor_graph
nbop $_obj_geo1___netbox1 add $_obj_geo1_nearest_neighbor_graph
opexprlanguage -s hscript $_obj_geo1_nearest_neighbor_graph
opuserdata -n '___Version___' -v '' $_obj_geo1_nearest_neighbor_graph

# Node $_obj_geo1_clean8 (Sop/clean)
set _obj_geo1_clean8 = `run("opadd -e -n -v clean clean8")`
oplocate -x `$arg2 + 1.1267400000000001` -y `$arg3 + -3.0448300000000001` $_obj_geo1_clean8
opparm $_obj_geo1_clean8 fixoverlap ( on ) deleteoverlap ( off )
chautoscope $_obj_geo1_clean8 +delete_small
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_clean8
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_clean8
nbop $_obj_geo1___netbox1 add $_obj_geo1_clean8
opexprlanguage -s hscript $_obj_geo1_clean8
opuserdata -n '___Version___' -v '' $_obj_geo1_clean8

# Node $_obj_geo1_connectadjacentpieces1 (Sop/connectadjacentpieces)
set _obj_geo1_connectadjacentpieces1 = `run("opadd -e -n -v connectadjacentpieces connectadjacentpieces1")`
oplocate -x `$arg2 + 4.8371700000000004` -y `$arg3 + -1.9681200000000001` $_obj_geo1_connectadjacentpieces1
opparm -V 1 $_obj_geo1_connectadjacentpieces1 connecttype ( pointcloud )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_connectadjacentpieces1
nbop $_obj_geo1___netbox2 add $_obj_geo1_connectadjacentpieces1
opexprlanguage -s hscript $_obj_geo1_connectadjacentpieces1
opuserdata -n '___Version___' -v '1' $_obj_geo1_connectadjacentpieces1
opuserdata -n '___toolcount___' -v '6' $_obj_geo1_connectadjacentpieces1
opuserdata -n '___toolid___' -v 'dynamics_gluenetwork' $_obj_geo1_connectadjacentpieces1

# Node $_obj_geo1_clean3 (Sop/clean)
set _obj_geo1_clean3 = `run("opadd -e -n -v clean clean3")`
oplocate -x `$arg2 + 9.6974` -y `$arg3 + -3.0070199999999998` $_obj_geo1_clean3
opparm $_obj_geo1_clean3 fixoverlap ( on ) deleteoverlap ( off )
chautoscope $_obj_geo1_clean3 +delete_small
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_clean3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_clean3
nbop $_obj_geo1___netbox3 add $_obj_geo1_clean3
opexprlanguage -s hscript $_obj_geo1_clean3
opuserdata -n '___Version___' -v '' $_obj_geo1_clean3

# Node $_obj_geo1_prims_algorithm (Sop/attribwrangle)
set _obj_geo1_prims_algorithm = `run("opadd -e -n -v attribwrangle prims_algorithm")`
oplocate -x `$arg2 + 9.6943999999999999` -y `$arg3 + -5.0469200000000001` $_obj_geo1_prims_algorithm
opparm $_obj_geo1_prims_algorithm  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_prims_algorithm class ( detail ) snippet ( 'int ptlist[];\nfor(int pt=0; pt<@numpt; pt++)\n    push(ptlist, pt);\n    \nint newlist[];\npush(newlist, 0);\nremovevalue(ptlist, 0);\n\nwhile(len(ptlist) > 0)\n{\n    float mindist = 10000;\n    int newpt = -1;\n    int newedge = -1;\n    \n    foreach(int pt; newlist)\n    {\n        foreach(int prim; pointprims(0, pt))\n        {\n            int targetpt = primpoint(0, prim, 0);\n            if(targetpt == pt) targetpt = primpoint(0, prim, 1);\n            \n            if(find(newlist, targetpt) > -1) continue;\n            \n            float dist = prim(0, \'restlength\', prim);\n            if(dist <= mindist)\n            {\n                mindist = dist;\n                newpt = targetpt;\n                newedge = prim;\n            }\n        }\n    }\n    \n    if(newpt == -1) break;\n    \n    push(newlist, newpt);\n    removevalue(ptlist, newpt);\n    setprimgroup(0, \'newedge\', newedge, 1);\n}' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_prims_algorithm
nbop $_obj_geo1___netbox3 add $_obj_geo1_prims_algorithm
opexprlanguage -s hscript $_obj_geo1_prims_algorithm
opuserdata -n '___Version___' -v '' $_obj_geo1_prims_algorithm

# Node $_obj_geo1_convertline1 (Sop/convertline)
set _obj_geo1_convertline1 = `run("opadd -e -n -v convertline convertline1")`
oplocate -x `$arg2 + 9.6974` -y `$arg3 + -4.0070199999999998` $_obj_geo1_convertline1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_convertline1
nbop $_obj_geo1___netbox3 add $_obj_geo1_convertline1
opexprlanguage -s hscript $_obj_geo1_convertline1
opuserdata -n '___Version___' -v '' $_obj_geo1_convertline1

# Node $_obj_geo1_relative_neighborhood_graph1 (Sop/attribwrangle)
set _obj_geo1_relative_neighborhood_graph1 = `run("opadd -e -n -v attribwrangle relative_neighborhood_graph1")`
oplocate -x `$arg2 + 9.6943999999999999` -y `$arg3 + -1.96912` $_obj_geo1_relative_neighborhood_graph1
opparm $_obj_geo1_relative_neighborhood_graph1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_relative_neighborhood_graph1 snippet ( '//for(int pt = @ptnum + 1; pt < @numpt; pt++)\nforeach(int pt; nearpoints(0, @P, 1.0, 10))\n{\n    if(pt == @ptnum) continue;\n    \n    vector p = point(0, \'P\', pt);\n    float dist = distance(p, @P);\n    \n    int ptsA[] = nearpoints(0, @P, dist);\n    int ptsB[] = nearpoints(0, p, dist);\n    \n    int chk = 0;\n    foreach(int cpt; ptsB)\n    {\n        if(cpt == @ptnum || cpt == pt) continue;\n        \n        chk = removevalue(ptsA, cpt);\n        if(chk) break;\n    }\n    \n    if(!chk)\n    {\n        int pr = addprim(0, \'polyline\');\n        addvertex(0, pr, @ptnum);\n        addvertex(0, pr, pt);\n    }\n}' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_relative_neighborhood_graph1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_relative_neighborhood_graph1
nbop $_obj_geo1___netbox3 add $_obj_geo1_relative_neighborhood_graph1
opexprlanguage -s hscript $_obj_geo1_relative_neighborhood_graph1
opuserdata -n '___Version___' -v '' $_obj_geo1_relative_neighborhood_graph1
opcf ..
opcf $_obj_geo1

# Node $_obj_geo1_scatter6 (Sop/scatter::2.0)
set _obj_geo1_scatter6 = `run("opadd -e -n -v scatter::2.0 scatter6")`
oplocate -x `$arg2 + -5.9353100000000003` -y `$arg3 + 3.2320500000000001` $_obj_geo1_scatter6
opparm -V 16.0.633 $_obj_geo1_scatter6 npts ( 100 ) relaxpoints ( off )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_scatter6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_scatter6
opexprlanguage -s hscript $_obj_geo1_scatter6
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_scatter6

# Node $_obj_geo1_circle7 (Sop/circle)
set _obj_geo1_circle7 = `run("opadd -e -n -v circle circle7")`
oplocate -x `$arg2 + -5.9353100000000003` -y `$arg3 + 4.4422499999999996` $_obj_geo1_circle7
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_circle7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_circle7
opexprlanguage -s hscript $_obj_geo1_circle7
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_circle7

# Node $_obj_geo1_null1 (Sop/null)
set _obj_geo1_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -5.9353100000000003` -y `$arg3 + 2.0660500000000002` $_obj_geo1_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_null1
opexprlanguage -s hscript $_obj_geo1_null1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_null1

# Node $_obj_geo1_triangulate2d1 (Sop/triangulate2d::2.0)
set _obj_geo1_triangulate2d1 = `run("opadd -e -n -v triangulate2d::2.0 triangulate2d1")`
oplocate -x `$arg2 + -11.938700000000001` -y `$arg3 + 0.90674600000000005` $_obj_geo1_triangulate2d1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_triangulate2d1
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_triangulate2d1
nbop $_obj_geo1_Delaunay_triangulation add $_obj_geo1_triangulate2d1
opexprlanguage -s hscript $_obj_geo1_triangulate2d1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_triangulate2d1

# Node $_obj_geo1_dissolve1 (Sop/dissolve::2.0)
set _obj_geo1_dissolve1 = `run("opadd -e -n -v dissolve::2.0 dissolve1")`
oplocate -x `$arg2 + -11.651400000000001` -y `$arg3 + -3.8864399999999999` $_obj_geo1_dissolve1
opparm -V 16.0.633 $_obj_geo1_dissolve1 group ( '`details(opinputpath(\'.\', 0), \'edges\')' ) reminlinepts ( off )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dissolve1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_dissolve1
nbop $_obj_geo1_Urquhart_graph add $_obj_geo1_dissolve1
opexprlanguage -s hscript $_obj_geo1_dissolve1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_dissolve1

# Node $_obj_geo1_attribpromote1 (Sop/attribpromote)
set _obj_geo1_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + -11.6548` -y `$arg3 + -2.8864399999999999` $_obj_geo1_attribpromote1
opparm -V 16.0.633 $_obj_geo1_attribpromote1 inname ( edges ) inclass ( primitive ) outclass ( detail ) method ( sum )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_attribpromote1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_attribpromote1
nbop $_obj_geo1_Urquhart_graph add $_obj_geo1_attribpromote1
opexprlanguage -s hscript $_obj_geo1_attribpromote1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_attribpromote1

# Node $_obj_geo1_blast1 (Sop/blast)
set _obj_geo1_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 9.6974` -y `$arg3 + -6.0848199999999997` $_obj_geo1_blast1
opparm -V 16.0.633 $_obj_geo1_blast1 group ( newedge ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_blast1
nbop $_obj_geo1___netbox3 add $_obj_geo1_blast1
opexprlanguage -s hscript $_obj_geo1_blast1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_blast1
oporder -e scatter6 circle7 null1 mark_longest_edges relative_neighborhood_graph gabriel_graph clean1 clean2 convertline2 nearest_neighbor_graph clean8 connectadjacentpieces1 clean3 prims_algorithm convertline1 relative_neighborhood_graph1 triangulate2d1 dissolve1 attribpromote1 blast1 
opcf ..
opset -p on $_obj_geo1

opcf $arg1
opcf $_obj_geo1
opwire -n $_obj_geo1_circle7 -0 $_obj_geo1_scatter6
opwire -n $_obj_geo1_scatter6 -0 $_obj_geo1_null1
opwire -n $_obj_geo1_triangulate2d1 -0 $_obj_geo1_mark_longest_edges
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_relative_neighborhood_graph
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_gabriel_graph
opwire -n $_obj_geo1_gabriel_graph -0 $_obj_geo1_clean1
opwire -n $_obj_geo1_relative_neighborhood_graph -0 $_obj_geo1_clean2
opwire -n $_obj_geo1_dissolve1 -0 $_obj_geo1_convertline2
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_nearest_neighbor_graph
opwire -n $_obj_geo1_nearest_neighbor_graph -0 $_obj_geo1_clean8
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_connectadjacentpieces1
opwire -n $_obj_geo1_relative_neighborhood_graph1 -0 $_obj_geo1_clean3
opwire -n $_obj_geo1_convertline1 -0 $_obj_geo1_prims_algorithm
opwire -n $_obj_geo1_clean3 -0 $_obj_geo1_convertline1
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_relative_neighborhood_graph1
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_triangulate2d1
opwire -n $_obj_geo1_attribpromote1 -0 $_obj_geo1_dissolve1
opwire -n $_obj_geo1_mark_longest_edges -0 $_obj_geo1_attribpromote1
opwire -n $_obj_geo1_prims_algorithm -0 $_obj_geo1_blast1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="GET_all_frames_geo0" label="GET_all_frames_geo" icon="CHOP_layer">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1 (Sop/subnet)
set _obj_crowd01_workarea_GET_all_frames_geo1 = `run("opadd -e -n -v subnet GET_all_frames_geo1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_crowd01_workarea_GET_all_frames_geo1
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  all     }     parm {    name    "create_frame_atr"      label   "create_frame_atr"      type    toggle  default { "0" }         range   { 0! 10 }       parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "start_frame"   label   "start_frame"   type    integer         default { [ "$SHOT_START - $PREROLL" hscript-expr ] }   range   { 0 10 }        parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "end_frame"     label   "end_frame"     type    integer         default { [ "$SHOT_END + $POSTROLL" hscript-expr ] }    range   { 0 10 }        parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "step"  label   "step"  type    integer         default { "5" }         range   { 0 10 }        parmtag { "autoscope" "0000000000000000" }     } ' $_obj_crowd01_workarea_GET_all_frames_geo1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1 start_frame
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$SHOT_START - $PREROLL' $_obj_crowd01_workarea_GET_all_frames_geo1/start_frame
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1 end_frame
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$SHOT_END + $POSTROLL' $_obj_crowd01_workarea_GET_all_frames_geo1/end_frame
chblockend
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1
opcolor -c 0.86699998378753662 0 0 $_obj_crowd01_workarea_GET_all_frames_geo1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1
opcf $_obj_crowd01_workarea_GET_all_frames_geo1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame (Sop/attribwrangle)
set _obj_crowd01_workarea_GET_all_frames_geo1_crt_frame = `run("opadd -e -n -v attribwrangle crt_frame")`
oplocate -x `$arg2 + 4.1219200000000003` -y `$arg3 + -0.59652400000000005` $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opparm $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame snippet ( '@frame = @Frame;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opuserdata -n '___Version___' -v '' $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opcf ..
opcf $_obj_crowd01_workarea_GET_all_frames_geo1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 (Sop/block_end)
set _obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 = `run("opadd -e -n -v block_end repeat_end1")`
oplocate -x `$arg2 + 2.6271900000000001` -y `$arg3 + -4.2633200000000002` $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opspareds '    parm {   name    "itermethod"    baseparm        label   "Iteration Method"      export  none     }     parm {   name    "method"        baseparm        label   "Gather Method"         export  none     }     parm {   name    "iterations"    baseparm        label   "Iterations"    export  none     }     parm {   name    "startvalue"    baseparm        label   "Start Value"   export  none     }     parm {   name    "increment"     baseparm        label   "Increment"     export  none     }     parm {   name    "class"         baseparm        label   "Piece Elements"        export  none     }     parm {   name    "useattrib"     baseparm        label   "Piece Attribute"       joinnext        export  none     }     parm {   name    "attrib"        baseparm        label   "Piece Attribute"       export  none     }     parm {   name    "usemaxiter"    baseparm        label   "Max Iterations"        joinnext        export  none     }     parm {   name    "maxiter"       baseparm        label   "Max Iterations"        export  none     }     parm {   name    "blockpath"     baseparm        label   "Default Block Path"    export  none     }     parm {   name    "templatepath"  baseparm        label   "Piece Block Path"      export  none     }     parm {   name    "resetcookpass"         baseparm        label   "Reset Cached Pass"     export  none     }     parm {   name    "dosinglepass"  baseparm        label   "Do Single Pass"        joinnext        export  none     }     parm {   name    "singlepass"    baseparm        label   "Single Pass"   export  none     }     parm {   name    "stopcondition"         baseparm        label   "Stop Condition"        export  none     }     parm {   name    "multithread"   baseparm        label   "Multithread when Compiled"     export  none     }     parm {   name    "start_frame"   label   "start_frame"   type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "end_frame"     label   "end_frame"     type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "step"  label   "step"  type    integer         default { "1" }         range   { 0 10 }     } ' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 iterations
chkey -t 41.458333333333002 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ceil((ch("end_frame") - ch("start_frame") + 1)/ch("step"))' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1/iterations
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 start_frame
chkey -t 41.458333333333002 -v 986 -m 0 -a 0 -A 0 -T a  -F 'ch("../start_frame")' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1/start_frame
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 end_frame
chkey -t 41.458333333333002 -v 1071 -m 0 -a 0 -A 0 -T a  -F 'ch("../end_frame")' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1/end_frame
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 step
chkey -t 41.458333333333002 -v 5 -m 0 -a 0 -A 0 -T a  -F 'ch("../step")' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1/step
chblockend
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 itermethod ( count ) method ( merge ) iterations ( iterations ) blockpath ( ../repeat_begin1 ) start_frame ( start_frame ) end_frame ( end_frame ) step ( step )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1 (Sop/block_begin)
set _obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1 = `run("opadd -e -n -v block_begin repeat_begin1")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + 1.5075000000000001` $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1 blockpath ( ../repeat_end1 ) label1 ( 'iteration, numiteration, value, ivalue' )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 (Sop/block_begin)
set _obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 = `run("opadd -e -n -v block_begin repeat_begin2")`
oplocate -x `$arg2 + 2.6271900000000001` -y `$arg3 + 1.5075000000000001` $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 method ( input ) blockpath ( ../repeat_end1 ) label1 ( 'iteration, numiteration, value, ivalue' )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1 (Sop/block_begin)
set _obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1 = `run("opadd -e -n -v block_begin repeat_begin1_metadata1")`
oplocate -x `$arg2 + 5.4409400000000003` -y `$arg3 + 1.5075000000000001` $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1 method ( metadata ) blockpath ( ../repeat_end1 ) label1 ( 'iteration, numiteration, value, ivalue' )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_output1 (Sop/output)
set _obj_crowd01_workarea_GET_all_frames_geo1_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 2.6255899999999999` -y `$arg3 + -5.7526599999999997` $_obj_crowd01_workarea_GET_all_frames_geo1_output1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_output1 outputidx
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'max(opdigits(".")-1,0)' $_obj_crowd01_workarea_GET_all_frames_geo1_output1/outputidx
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_output1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_null1 (Sop/null)
set _obj_crowd01_workarea_GET_all_frames_geo1_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + 3.8542100000000001` $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_null1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_switch1 (Sop/switch)
set _obj_crowd01_workarea_GET_all_frames_geo1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 2.6255899999999999` -y `$arg3 + -1.9944` $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_switch1 input
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../create_frame_atr")' $_obj_crowd01_workarea_GET_all_frames_geo1_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_switch1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 (Sop/timeshift)
set _obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 = `run("opadd -e -n -v timeshift timeshift2")`
oplocate -x `$arg2 + 2.6255899999999999` -y `$arg3 + -3.22844` $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 frame
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'detail("../repeat_begin1_metadata1/","iteration",0) * ch("../repeat_end1/step") + ch("../repeat_end1/start_frame")' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/frame
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 time
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/time
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 frange1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/frange1
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 frange2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/frange2
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 trange1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/trange1
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 trange2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/trange2
chblockend
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 frame ( frame )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
oporder -e repeat_end1 repeat_begin1 repeat_begin2 repeat_begin1_metadata1 output1 null1 crt_frame switch1 timeshift2 
opcf ..
opset -p on $_obj_crowd01_workarea_GET_all_frames_geo1

opcf $arg1
opwire -n $_obj_crowd01_workarea_frustum1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1
opcf $_obj_crowd01_workarea_GET_all_frames_geo1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_null1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_null1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opwire -n -i 0 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame -1 $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_switch1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_crowd01_workarea_GET_all_frames_geo1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_crowd01_workarea_GET_all_frames_geo1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="GET_all_frames_geo" label="GET_all_frames_geo" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1 (Sop/subnet)
set _obj_crowd01_workarea_GET_all_frames_geo1 = `run("opadd -e -n -v subnet GET_all_frames_geo1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_crowd01_workarea_GET_all_frames_geo1
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  all     }     parm {    name    "create_frame_atr"      label   "create_frame_atr"      type    toggle  default { "0" }         range   { 0! 10 }       parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "start_frame"   label   "start_frame"   type    integer         default { [ "$SHOT_START - $PREROLL" hscript-expr ] }   range   { 0 10 }        parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "end_frame"     label   "end_frame"     type    integer         default { [ "$SHOT_END + $POSTROLL" hscript-expr ] }    range   { 0 10 }        parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "step"  label   "step"  type    integer         default { "5" }         range   { 0 10 }        parmtag { "autoscope" "0000000000000000" }     } ' $_obj_crowd01_workarea_GET_all_frames_geo1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1 start_frame
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$SHOT_START - $PREROLL' $_obj_crowd01_workarea_GET_all_frames_geo1/start_frame
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1 end_frame
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$SHOT_END + $POSTROLL' $_obj_crowd01_workarea_GET_all_frames_geo1/end_frame
chblockend
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1
opcolor -c 0.86699998378753662 0 0 $_obj_crowd01_workarea_GET_all_frames_geo1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1
opcf $_obj_crowd01_workarea_GET_all_frames_geo1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame (Sop/attribwrangle)
set _obj_crowd01_workarea_GET_all_frames_geo1_crt_frame = `run("opadd -e -n -v attribwrangle crt_frame")`
oplocate -x `$arg2 + 4.1219200000000003` -y `$arg3 + -0.59652400000000005` $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opparm $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame snippet ( '@frame = @Frame;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opuserdata -n '___Version___' -v '' $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opcf ..
opcf $_obj_crowd01_workarea_GET_all_frames_geo1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 (Sop/block_end)
set _obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 = `run("opadd -e -n -v block_end repeat_end1")`
oplocate -x `$arg2 + 2.6271900000000001` -y `$arg3 + -4.2633200000000002` $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opspareds '    parm {   name    "itermethod"    baseparm        label   "Iteration Method"      export  none     }     parm {   name    "method"        baseparm        label   "Gather Method"         export  none     }     parm {   name    "iterations"    baseparm        label   "Iterations"    export  none     }     parm {   name    "startvalue"    baseparm        label   "Start Value"   export  none     }     parm {   name    "increment"     baseparm        label   "Increment"     export  none     }     parm {   name    "class"         baseparm        label   "Piece Elements"        export  none     }     parm {   name    "useattrib"     baseparm        label   "Piece Attribute"       joinnext        export  none     }     parm {   name    "attrib"        baseparm        label   "Piece Attribute"       export  none     }     parm {   name    "usemaxiter"    baseparm        label   "Max Iterations"        joinnext        export  none     }     parm {   name    "maxiter"       baseparm        label   "Max Iterations"        export  none     }     parm {   name    "blockpath"     baseparm        label   "Default Block Path"    export  none     }     parm {   name    "templatepath"  baseparm        label   "Piece Block Path"      export  none     }     parm {   name    "resetcookpass"         baseparm        label   "Reset Cached Pass"     export  none     }     parm {   name    "dosinglepass"  baseparm        label   "Do Single Pass"        joinnext        export  none     }     parm {   name    "singlepass"    baseparm        label   "Single Pass"   export  none     }     parm {   name    "stopcondition"         baseparm        label   "Stop Condition"        export  none     }     parm {   name    "multithread"   baseparm        label   "Multithread when Compiled"     export  none     }     parm {   name    "start_frame"   label   "start_frame"   type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "end_frame"     label   "end_frame"     type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "step"  label   "step"  type    integer         default { "1" }         range   { 0 10 }     } ' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 iterations
chkey -t 41.458333333333002 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ceil((ch("end_frame") - ch("start_frame") + 1)/ch("step"))' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1/iterations
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 start_frame
chkey -t 41.458333333333002 -v 986 -m 0 -a 0 -A 0 -T a  -F 'ch("../start_frame")' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1/start_frame
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 end_frame
chkey -t 41.458333333333002 -v 1071 -m 0 -a 0 -A 0 -T a  -F 'ch("../end_frame")' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1/end_frame
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 step
chkey -t 41.458333333333002 -v 5 -m 0 -a 0 -A 0 -T a  -F 'ch("../step")' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1/step
chblockend
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 itermethod ( count ) method ( merge ) iterations ( iterations ) blockpath ( ../repeat_begin1 ) start_frame ( start_frame ) end_frame ( end_frame ) step ( step )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1 (Sop/block_begin)
set _obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1 = `run("opadd -e -n -v block_begin repeat_begin1")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + 1.5075000000000001` $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1 blockpath ( ../repeat_end1 ) label1 ( 'iteration, numiteration, value, ivalue' )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 (Sop/block_begin)
set _obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 = `run("opadd -e -n -v block_begin repeat_begin2")`
oplocate -x `$arg2 + 2.6271900000000001` -y `$arg3 + 1.5075000000000001` $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 method ( input ) blockpath ( ../repeat_end1 ) label1 ( 'iteration, numiteration, value, ivalue' )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1 (Sop/block_begin)
set _obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1 = `run("opadd -e -n -v block_begin repeat_begin1_metadata1")`
oplocate -x `$arg2 + 5.4409400000000003` -y `$arg3 + 1.5075000000000001` $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1 method ( metadata ) blockpath ( ../repeat_end1 ) label1 ( 'iteration, numiteration, value, ivalue' )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1_metadata1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_output1 (Sop/output)
set _obj_crowd01_workarea_GET_all_frames_geo1_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 2.6255899999999999` -y `$arg3 + -5.7526599999999997` $_obj_crowd01_workarea_GET_all_frames_geo1_output1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_output1 outputidx
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'max(opdigits(".")-1,0)' $_obj_crowd01_workarea_GET_all_frames_geo1_output1/outputidx
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_output1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_null1 (Sop/null)
set _obj_crowd01_workarea_GET_all_frames_geo1_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + 3.8542100000000001` $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_null1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_switch1 (Sop/switch)
set _obj_crowd01_workarea_GET_all_frames_geo1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 2.6255899999999999` -y `$arg3 + -1.9944` $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_switch1 input
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../create_frame_atr")' $_obj_crowd01_workarea_GET_all_frames_geo1_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_switch1

# Node $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 (Sop/timeshift)
set _obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 = `run("opadd -e -n -v timeshift timeshift2")`
oplocate -x `$arg2 + 2.6255899999999999` -y `$arg3 + -3.22844` $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 frame
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'detail("../repeat_begin1_metadata1/","iteration",0) * ch("../repeat_end1/step") + ch("../repeat_end1/start_frame")' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/frame
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 time
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/time
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 frange1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/frange1
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 frange2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/frange2
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 trange1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/trange1
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 trange2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2/trange2
chblockend
opparm -V 16.0.674 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 frame ( frame )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opexprlanguage -s hscript $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opuserdata -n '___toolcount___' -v '43' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
oporder -e repeat_end1 repeat_begin1 repeat_begin2 repeat_begin1_metadata1 output1 null1 crt_frame switch1 timeshift2 
opcf ..
opset -p on $_obj_crowd01_workarea_GET_all_frames_geo1

opcf $arg1
opwire -n $_obj_crowd01_workarea_frustum1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1
opcf $_obj_crowd01_workarea_GET_all_frames_geo1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_null1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_null1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_end1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_output1
opwire -n -i 0 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_null1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_repeat_begin2 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_crt_frame -1 $_obj_crowd01_workarea_GET_all_frames_geo1_switch1
opwire -n $_obj_crowd01_workarea_GET_all_frames_geo1_switch1 -0 $_obj_crowd01_workarea_GET_all_frames_geo1_timeshift2
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_crowd01_workarea_GET_all_frames_geo1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_crowd01_workarea_GET_all_frames_geo1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="sc_crowd" label="sc_crowd" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_sc_crowd (Object/geo)
set _obj_sc_crowd = `run("opadd -e -n -v geo sc_crowd")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_sc_crowd
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "full" }          help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_sc_crowd
opset -S on $_obj_sc_crowd
opparm -V 16.0.633 $_obj_sc_crowd use_dcolor ( off )
chautoscope $_obj_sc_crowd +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_sc_crowd
opexprlanguage -s hscript $_obj_sc_crowd
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd
opcf $_obj_sc_crowd

# Node $_obj_sc_crowd_mountain1 (Sop/mountain::2.0)
set _obj_sc_crowd_mountain1 = `run("opadd -e -n -v mountain::2.0 mountain1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 4.3940799999999998` $_obj_sc_crowd_mountain1
opparm $_obj_sc_crowd_mountain1 height ( 21.600000000000001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_mountain1
opexprlanguage -s hscript $_obj_sc_crowd_mountain1
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_mountain1
opuserdata -n '___toolcount___' -v '20' $_obj_sc_crowd_mountain1
opuserdata -n '___toolid___' -v 'sop_mountain::2.0' $_obj_sc_crowd_mountain1

# Node $_obj_sc_crowd_crt_targetP (Sop/attribwrangle)
set _obj_sc_crowd_crt_targetP = `run("opadd -e -n -v attribwrangle crt_targetP")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -3.35127` $_obj_sc_crowd_crt_targetP
opparm $_obj_sc_crowd_crt_targetP  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_crt_targetP snippet ( 'v@targetP = v@opinput1_P;' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_crt_targetP
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_crt_targetP
opexprlanguage -s hscript $_obj_sc_crowd_crt_targetP
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_crt_targetP

# Node $_obj_sc_crowd_crt_source (Sop/attribwrangle)
set _obj_sc_crowd_crt_source = `run("opadd -e -n -v attribwrangle crt_source")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -4.5402399999999998` $_obj_sc_crowd_crt_source
opparm $_obj_sc_crowd_crt_source  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_crt_source snippet ( 'i@source=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_crt_source
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_crt_source
opexprlanguage -s hscript $_obj_sc_crowd_crt_source
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_crt_source

# Node $_obj_sc_crowd_crt_terrain (Sop/attribwrangle)
set _obj_sc_crowd_crt_terrain = `run("opadd -e -n -v attribwrangle crt_terrain")`
oplocate -x `$arg2 + 0.244059` -y `$arg3 + -3.8374799999999998` $_obj_sc_crowd_crt_terrain
opparm $_obj_sc_crowd_crt_terrain  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_crt_terrain snippet ( 'i@terrain=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_crt_terrain
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_crt_terrain
opexprlanguage -s hscript $_obj_sc_crowd_crt_terrain
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_crt_terrain

# Node $_obj_sc_crowd_DOP_space_colonization_crowd (Sop/solver)
set _obj_sc_crowd_DOP_space_colonization_crowd = `run("opadd -e -n -v solver DOP_space_colonization_crowd")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -8.1926199999999998` $_obj_sc_crowd_DOP_space_colonization_crowd
opcolor -c 0.40000000596046448 1 1 $_obj_sc_crowd_DOP_space_colonization_crowd
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_DOP_space_colonization_crowd
opexprlanguage -s hscript $_obj_sc_crowd_DOP_space_colonization_crowd
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_DOP_space_colonization_crowd

# Node $_obj_sc_crowd_attribwrangle1 (Sop/attribwrangle)
set _obj_sc_crowd_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + -2.7330899999999998` -y `$arg3 + -9.9643599999999992` $_obj_sc_crowd_attribwrangle1
opparm $_obj_sc_crowd_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_attribwrangle1 snippet ( '@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_attribwrangle1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_sc_crowd_attribwrangle1
opexprlanguage -s hscript $_obj_sc_crowd_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_attribwrangle1

# Node $_obj_sc_crowd_attribwrangle2 (Sop/attribwrangle)
set _obj_sc_crowd_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 10.888595357827874` -y `$arg3 + -10.286617559130118` $_obj_sc_crowd_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "extra_overwrite_rad"   label   "Extra Overwrite Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_attribwrangle2
opparm $_obj_sc_crowd_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_attribwrangle2 snippet ( 'int pts[]= pcfind(1, "P", @P, ch("rad") + ch("extra_overwrite_rad"), chi("max_pts"));\n\nforeach(int pt; pts)\n{\n    vector nearP = point(1, "P",pt);\n    vector nearV = point(1, "v",pt);\n    if(distance(@P + nearV * @TimeInc, nearP)<ch("rad"))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n    else\n    {\n        @N = normalize((@P + nearV * @TimeInc) - nearP);\n    }\n}' ) rad ( 1.8 ) max_pts ( 1 ) extra_overwrite_rad ( 10 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_attribwrangle2
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_attribwrangle2
opexprlanguage -s hscript $_obj_sc_crowd_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_attribwrangle2

# Node $_obj_sc_crowd_calc_new_v (Sop/attribwrangle)
set _obj_sc_crowd_calc_new_v = `run("opadd -e -n -v attribwrangle calc_new_v")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -11.714287559130121` $_obj_sc_crowd_calc_new_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "dot"   label   "Dot"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_deg"       label   "Max Deg"       type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_calc_new_v
opparm $_obj_sc_crowd_calc_new_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_calc_new_v snippet ( 'float dot = ch("dot");\nint handle = pcopen(@OpInput2, "P", @P + @v * @TimeInc, ch("rad"), chi("max_pts"));\n//"N", normalize(v@targetP - @P), \n//,"ndot",dot\n\nint num = pcnumfound(handle);\nvector filterP;\n//vector filterN;\n\nif(num > 0)\n{\n    //filterN = pcimportbyidxf(handle, "N", 0);\n    //filterN = normalize(filterN);\n    filterP = pcfilter(handle, "P");\n    \n    vector avoidDir = normalize(filterP - @P);\n    \n    dot = dot(avoidDir, normalize(@v));\n    vector cross = normalize(cross(avoidDir, normalize(@v)));\n    float maxRad = radians(ch("max_deg"));\n    \n    acos(dot);\n    \n    @v = avoidDir * length(@v);\n    v@aaaa = cross;\n    //v@up = filterN;\n}\n\n\n' ) rad ( 8 ) max_pts ( 100 ) dot ( -0.5 ) max_deg ( 20 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_calc_new_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_calc_new_v
opexprlanguage -s hscript $_obj_sc_crowd_calc_new_v
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_calc_new_v

# Node $_obj_sc_crowd_advect (Sop/attribwrangle)
set _obj_sc_crowd_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -15.441077559130118` $_obj_sc_crowd_advect
opparm $_obj_sc_crowd_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_advect snippet ( 'if(distance(v@targetP, @P) > length(@v * @TimeInc))\n{\n    @P += @v * @TimeInc;\n}\nelse\n{\n    @Cd = set(1,0,0);\n}\n\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_advect
opexprlanguage -s hscript $_obj_sc_crowd_advect
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_advect

# Node $_obj_sc_crowd_init_v (Sop/attribwrangle)
set _obj_sc_crowd_init_v = `run("opadd -e -n -v attribwrangle init_v")`
oplocate -x `$arg2 + 9.2952353578278739` -y `$arg3 + -7.1446075591301188` $_obj_sc_crowd_init_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spped"         label   "Spped"         type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_init_v
opparm $_obj_sc_crowd_init_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_init_v snippet ( 'if(length(@v) == 0)\n{\n    @v += normalize(v@targetP - @P) * ch("spped");\n}' ) spped ( 0.5 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_init_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_init_v
opexprlanguage -s hscript $_obj_sc_crowd_init_v
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_init_v

# Node $_obj_sc_crowd_add_v (Sop/attribwrangle)
set _obj_sc_crowd_add_v = `run("opadd -e -n -v attribwrangle add_v")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -13.197827559130118` $_obj_sc_crowd_add_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "add_speed"     label   "Add Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_add_v
opparm $_obj_sc_crowd_add_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_add_v snippet ( '@v += normalize(@v) * ch("add_speed");' ) add_speed ( 0.20000000000000001 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_add_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_add_v
opexprlanguage -s hscript $_obj_sc_crowd_add_v
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_add_v

# Node $_obj_sc_crowd_limit_v (Sop/attribwrangle)
set _obj_sc_crowd_limit_v = `run("opadd -e -n -v attribwrangle limit_v")`
oplocate -x `$arg2 + 7.0566053578278733` -y `$arg3 + -14.27557755913012` $_obj_sc_crowd_limit_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "max_speed"     label   "Max Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_limit_v
opparm $_obj_sc_crowd_limit_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_limit_v snippet ( 'if(length(@v) > ch("max_speed"))\n{\n    @v = normalize(@v) * ch("max_speed");\n}' ) max_speed ( 3 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_limit_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_limit_v
opexprlanguage -s hscript $_obj_sc_crowd_limit_v
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_limit_v

# Node $_obj_sc_crowd_update_N (Sop/attribwrangle)
set _obj_sc_crowd_update_N = `run("opadd -e -n -v attribwrangle update_N")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -18.026877559130121` $_obj_sc_crowd_update_N
opparm $_obj_sc_crowd_update_N  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_update_N snippet ( 'if(length(@v)>0)@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_update_N
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_update_N
opexprlanguage -s hscript $_obj_sc_crowd_update_N
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_update_N

# Node $_obj_sc_crowd_update_up (Sop/attribwrangle)
set _obj_sc_crowd_update_up = `run("opadd -e -n -v attribwrangle update_up")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -16.593577559130118` $_obj_sc_crowd_update_up
opparm $_obj_sc_crowd_update_up  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_update_up snippet ( 'int near = nearpoint(1,@P);\n\n@up = point(1,"N",near);' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_update_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_update_up
opexprlanguage -s hscript $_obj_sc_crowd_update_up
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_update_up
opcf ..
opcf $_obj_sc_crowd

# Node $_obj_sc_crowd_grid1 (Sop/grid)
set _obj_sc_crowd_grid1 = `run("opadd -e -n -v grid grid1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 5.5117200000000004` $_obj_sc_crowd_grid1
opparm -V 16.0.633 $_obj_sc_crowd_grid1 size ( 50 50 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_grid1
opexprlanguage -s hscript $_obj_sc_crowd_grid1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_grid1

# Node $_obj_sc_crowd_scatter1 (Sop/scatter::2.0)
set _obj_sc_crowd_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 0.848607` $_obj_sc_crowd_scatter1
opparm -V 16.0.633 $_obj_sc_crowd_scatter1 forcetotal ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_scatter1
opexprlanguage -s hscript $_obj_sc_crowd_scatter1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_scatter1

# Node $_obj_sc_crowd_scatter2 (Sop/scatter::2.0)
set _obj_sc_crowd_scatter2 = `run("opadd -e -n -v scatter::2.0 scatter2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + -1.0686800000000001` $_obj_sc_crowd_scatter2
opparm -V 16.0.633 $_obj_sc_crowd_scatter2 npts ( 20 ) relaxpoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_scatter2
opexprlanguage -s hscript $_obj_sc_crowd_scatter2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_scatter2

# Node $_obj_sc_crowd_scatter3 (Sop/scatter::2.0)
set _obj_sc_crowd_scatter3 = `run("opadd -e -n -v scatter::2.0 scatter3")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + -1.31681` $_obj_sc_crowd_scatter3
chblockbegin
chadd -t 0 0 $_obj_sc_crowd_scatter3 npts
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../scatter2/npts")' $_obj_sc_crowd_scatter3/npts
chblockend
opparm -V 16.0.633 $_obj_sc_crowd_scatter3 npts ( npts ) seed ( 3.3799999999999999 ) scaleradiiby ( 1.8 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_scatter3
opexprlanguage -s hscript $_obj_sc_crowd_scatter3
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_scatter3

# Node $_obj_sc_crowd_object_merge1 (Sop/object_merge)
set _obj_sc_crowd_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + 1.6144240366064295` -y `$arg3 + -7.2048945682477008` $_obj_sc_crowd_object_merge1
opparm $_obj_sc_crowd_object_merge1  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_object_merge1 xformtype ( local ) objpath1 ( ../DOP_space_colonization_crowd/d/s/null1/ )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_object_merge1
opexprlanguage -s hscript $_obj_sc_crowd_object_merge1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_object_merge1

# Node $_obj_sc_crowd_null1 (Sop/null)
set _obj_sc_crowd_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -11.5685` $_obj_sc_crowd_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_null1
opexprlanguage -s hscript $_obj_sc_crowd_null1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_null1

# Node $_obj_sc_crowd_box1 (Sop/box)
set _obj_sc_crowd_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + -6.5566199999999997` -y `$arg3 + -11.3622` $_obj_sc_crowd_box1
opparm -V 16.0.633 $_obj_sc_crowd_box1 size ( 1 1 0.59999999999999998 ) t ( 0 0.5 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_box1
opexprlanguage -s hscript $_obj_sc_crowd_box1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_box1

# Node $_obj_sc_crowd_sphere1 (Sop/sphere)
set _obj_sc_crowd_sphere1 = `run("opadd -e -n -v sphere sphere1")`
oplocate -x `$arg2 + -9.9206599999999998` -y `$arg3 + -11.3622` $_obj_sc_crowd_sphere1
chblockbegin
chadd -t 0 0 $_obj_sc_crowd_sphere1 rady
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_sc_crowd_sphere1/rady
chadd -t 0 0 $_obj_sc_crowd_sphere1 radz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_sc_crowd_sphere1/radz
chblockend
opparm -V 16.0.633 $_obj_sc_crowd_sphere1 type ( poly ) rad ( 0.69999999999999996 rady radz ) t ( 0 1.6000000000000001 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_sphere1
opexprlanguage -s hscript $_obj_sc_crowd_sphere1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_sphere1

# Node $_obj_sc_crowd_merge1 (Sop/merge)
set _obj_sc_crowd_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -7.6420899999999996` -y `$arg3 + -13.053900000000001` $_obj_sc_crowd_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_merge1
opexprlanguage -s hscript $_obj_sc_crowd_merge1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_merge1

# Node $_obj_sc_crowd_copytopoints1 (Sop/copytopoints)
set _obj_sc_crowd_copytopoints1 = `run("opadd -e -n -v copytopoints copytopoints1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -15.309200000000001` $_obj_sc_crowd_copytopoints1
opparm -V 16.0.633 $_obj_sc_crowd_copytopoints1 setpt ( Cd ) mulpt ( "" ) addpt ( "" )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_copytopoints1
opexprlanguage -s hscript $_obj_sc_crowd_copytopoints1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_copytopoints1

# Node $_obj_sc_crowd_sphere2 (Sop/sphere)
set _obj_sc_crowd_sphere2 = `run("opadd -e -n -v sphere sphere2")`
oplocate -x `$arg2 + -8.1143300000000007` -y `$arg3 + -11.2661` $_obj_sc_crowd_sphere2
opparm -V 16.0.633 $_obj_sc_crowd_sphere2 type ( poly ) rad ( 0.10000000000000001 0.10000000000000001 0.29999999999999999 ) t ( 0 1.6000000000000001 0.69999999999999996 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_sphere2
opexprlanguage -s hscript $_obj_sc_crowd_sphere2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_sphere2

# Node $_obj_sc_crowd_sort1 (Sop/sort)
set _obj_sc_crowd_sort1 = `run("opadd -e -n -v sort sort1")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 0.848607` $_obj_sc_crowd_sort1
opparm -V 16.0.633 $_obj_sc_crowd_sort1 ptsort ( seed )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_sc_crowd_sort1
opexprlanguage -s hscript $_obj_sc_crowd_sort1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_sort1

# Node $_obj_sc_crowd_blast2 (Sop/blast)
set _obj_sc_crowd_blast2 = `run("opadd -e -n -v blast blast2")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 0.041596000000000001` $_obj_sc_crowd_blast2
opparm -V 16.0.633 $_obj_sc_crowd_blast2 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_sc_crowd_blast2
opexprlanguage -s hscript $_obj_sc_crowd_blast2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_blast2

# Node $_obj_sc_crowd_sort2 (Sop/sort)
set _obj_sc_crowd_sort2 = `run("opadd -e -n -v sort sort2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 0.848607` $_obj_sc_crowd_sort2
opparm -V 16.0.633 $_obj_sc_crowd_sort2 ptsort ( seed ) pointseed ( 82 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_sc_crowd_sort2
opexprlanguage -s hscript $_obj_sc_crowd_sort2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_sort2

# Node $_obj_sc_crowd_blast3 (Sop/blast)
set _obj_sc_crowd_blast3 = `run("opadd -e -n -v blast blast3")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 0.041596000000000001` $_obj_sc_crowd_blast3
opparm -V 16.0.633 $_obj_sc_crowd_blast3 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_sc_crowd_blast3
opexprlanguage -s hscript $_obj_sc_crowd_blast3
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_blast3

# Node $_obj_sc_crowd_facet1 (Sop/facet)
set _obj_sc_crowd_facet1 = `run("opadd -e -n -v facet facet1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 3.2336999999999998` $_obj_sc_crowd_facet1
opparm -V 16.0.633 $_obj_sc_crowd_facet1 postnml ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_facet1
opexprlanguage -s hscript $_obj_sc_crowd_facet1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_facet1

# Node $_obj_sc_crowd_blast1 (Sop/blast)
set _obj_sc_crowd_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 2.3395000000000001` $_obj_sc_crowd_blast1
opparm -V 16.0.633 $_obj_sc_crowd_blast1 group ( '15-16 20-21 24-25 46 48-52' ) grouptype ( prims ) removegrp ( on )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_blast1
opexprlanguage -s hscript $_obj_sc_crowd_blast1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_blast1
opuserdata -n '___toolcount___' -v '16' $_obj_sc_crowd_blast1
opuserdata -n '___toolid___' -v 'generic_delete' $_obj_sc_crowd_blast1

# Node $_obj_sc_crowd_Prev_Frame (Sop/dopimport)
set _obj_sc_crowd_Prev_Frame = `run("opadd -e -n -v dopimport Prev_Frame")`
oplocate -x `$arg2 + 7.0566053578278733` -y `$arg3 + -5.4283275591301194` $_obj_sc_crowd_Prev_Frame
chblockbegin
chadd -t 0 0 $_obj_sc_crowd_Prev_Frame doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_sc_crowd_Prev_Frame/doposxform
chadd -t 0 0 $_obj_sc_crowd_Prev_Frame doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_sc_crowd_Prev_Frame/doxform
chadd -t 0 0 $_obj_sc_crowd_Prev_Frame integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_sc_crowd_Prev_Frame/integrateovertime
chblockend
opparm -V 16.0.633 $_obj_sc_crowd_Prev_Frame doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) singleobject ( on ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) centeratpivot ( off ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_sc_crowd_Prev_Frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Prev_Frame
opexprlanguage -s hscript $_obj_sc_crowd_Prev_Frame
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Prev_Frame

# Node $_obj_sc_crowd_Input_1 (Sop/object_merge)
set _obj_sc_crowd_Input_1 = `run("opadd -e -n -v object_merge Input_1")`
oplocate -x `$arg2 + 9.2969853578278734` -y `$arg3 + -5.2067675591301192` $_obj_sc_crowd_Input_1
opparm $_obj_sc_crowd_Input_1  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_Input_1 objpath1 ( '`opinputpath("../..", 0)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_sc_crowd_Input_1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Input_1
opexprlanguage -s hscript $_obj_sc_crowd_Input_1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Input_1

# Node $_obj_sc_crowd_Input_2 (Sop/object_merge)
set _obj_sc_crowd_Input_2 = `run("opadd -e -n -v object_merge Input_2")`
oplocate -x `$arg2 + 10.890345357827874` -y `$arg3 + -5.761297559130119` $_obj_sc_crowd_Input_2
opparm $_obj_sc_crowd_Input_2  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_Input_2 objpath1 ( '`opinputpath("../..", 1)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_sc_crowd_Input_2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Input_2
opexprlanguage -s hscript $_obj_sc_crowd_Input_2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Input_2

# Node $_obj_sc_crowd_Input_3 (Sop/object_merge)
set _obj_sc_crowd_Input_3 = `run("opadd -e -n -v object_merge Input_3")`
oplocate -x `$arg2 + 12.199095357827874` -y `$arg3 + -6.3768075591301194` $_obj_sc_crowd_Input_3
opparm $_obj_sc_crowd_Input_3  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_Input_3 objpath1 ( '`opinputpath("../..", 2)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_sc_crowd_Input_3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Input_3
opexprlanguage -s hscript $_obj_sc_crowd_Input_3
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Input_3

# Node $_obj_sc_crowd_Input_4 (Sop/object_merge)
set _obj_sc_crowd_Input_4 = `run("opadd -e -n -v object_merge Input_4")`
oplocate -x `$arg2 + 13.711145357827874` -y `$arg3 + -6.9313275591301196` $_obj_sc_crowd_Input_4
opparm $_obj_sc_crowd_Input_4  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_Input_4 objpath1 ( '`opinputpath("../..", 3)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_sc_crowd_Input_4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Input_4
opexprlanguage -s hscript $_obj_sc_crowd_Input_4
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Input_4

# Node $_obj_sc_crowd_switch1 (Sop/switch)
set _obj_sc_crowd_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 7.0566053578278733` -y `$arg3 + -8.5880375591301181` $_obj_sc_crowd_switch1
chblockbegin
chadd -t 0 0 $_obj_sc_crowd_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF==ch("../../../startframe")' $_obj_sc_crowd_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_switch1
opexprlanguage -s hscript $_obj_sc_crowd_switch1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_switch1

# Node $_obj_sc_crowd_null2 (Sop/null)
set _obj_sc_crowd_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 11.738315357827874` -y `$arg3 + -12.843087559130119` $_obj_sc_crowd_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_null2
opexprlanguage -s hscript $_obj_sc_crowd_null2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_null2
oporder -e grid1 mountain1 scatter1 scatter2 crt_targetP crt_source crt_terrain DOP_space_colonization_crowd scatter3 object_merge1 null1 attribwrangle1 box1 sphere1 merge1 copytopoints1 sphere2 sort1 blast2 sort2 blast3 facet1 blast1 attribwrangle2 calc_new_v advect init_v add_v limit_v update_N update_up Prev_Frame Input_1 Input_2 Input_3 Input_4 switch1 null2 
opcf ..
opset -p on $_obj_sc_crowd

opcf $arg1
opcf $_obj_sc_crowd
opwire -n $_obj_sc_crowd_grid1 -0 $_obj_sc_crowd_mountain1
opwire -n $_obj_sc_crowd_blast1 -0 $_obj_sc_crowd_scatter1
opwire -n $_obj_sc_crowd_blast3 -0 $_obj_sc_crowd_scatter2
opwire -n $_obj_sc_crowd_scatter2 -0 $_obj_sc_crowd_crt_targetP
opwire -n $_obj_sc_crowd_scatter3 -1 $_obj_sc_crowd_crt_targetP
opwire -n $_obj_sc_crowd_crt_targetP -0 $_obj_sc_crowd_crt_source
opwire -n $_obj_sc_crowd_scatter1 -0 $_obj_sc_crowd_crt_terrain
opwire -n $_obj_sc_crowd_crt_source -0 $_obj_sc_crowd_DOP_space_colonization_crowd
opwire -n $_obj_sc_crowd_crt_terrain -1 $_obj_sc_crowd_DOP_space_colonization_crowd
opwire -n $_obj_sc_crowd_blast2 -0 $_obj_sc_crowd_scatter3
opwire -n $_obj_sc_crowd_attribwrangle1 -0 $_obj_sc_crowd_null1
opwire -n $_obj_sc_crowd_DOP_space_colonization_crowd -0 $_obj_sc_crowd_attribwrangle1
opwire -n $_obj_sc_crowd_sphere1 -0 $_obj_sc_crowd_merge1
opwire -n $_obj_sc_crowd_box1 -1 $_obj_sc_crowd_merge1
opwire -n $_obj_sc_crowd_sphere2 -2 $_obj_sc_crowd_merge1
opwire -n $_obj_sc_crowd_merge1 -0 $_obj_sc_crowd_copytopoints1
opwire -n $_obj_sc_crowd_null1 -1 $_obj_sc_crowd_copytopoints1
opwire -n $_obj_sc_crowd_blast1 -0 $_obj_sc_crowd_sort1
opwire -n $_obj_sc_crowd_sort1 -0 $_obj_sc_crowd_blast2
opwire -n $_obj_sc_crowd_blast1 -0 $_obj_sc_crowd_sort2
opwire -n $_obj_sc_crowd_sort2 -0 $_obj_sc_crowd_blast3
opwire -n $_obj_sc_crowd_mountain1 -0 $_obj_sc_crowd_facet1
opwire -n $_obj_sc_crowd_facet1 -0 $_obj_sc_crowd_blast1
opwire -n $_obj_sc_crowd_Input_2 -0 $_obj_sc_crowd_attribwrangle2
opwire -n $_obj_sc_crowd_switch1 -1 $_obj_sc_crowd_attribwrangle2
opwire -n $_obj_sc_crowd_switch1 -0 $_obj_sc_crowd_calc_new_v
opwire -n $_obj_sc_crowd_attribwrangle2 -1 $_obj_sc_crowd_calc_new_v
opwire -n $_obj_sc_crowd_limit_v -0 $_obj_sc_crowd_advect
opwire -n $_obj_sc_crowd_Input_1 -0 $_obj_sc_crowd_init_v
opwire -n $_obj_sc_crowd_calc_new_v -0 $_obj_sc_crowd_add_v
opwire -n $_obj_sc_crowd_add_v -0 $_obj_sc_crowd_limit_v
opwire -n $_obj_sc_crowd_update_up -0 $_obj_sc_crowd_update_N
opwire -n $_obj_sc_crowd_advect -0 $_obj_sc_crowd_update_up
opwire -n $_obj_sc_crowd_Input_2 -1 $_obj_sc_crowd_update_up
opwire -n $_obj_sc_crowd_Prev_Frame -0 $_obj_sc_crowd_switch1
opwire -n $_obj_sc_crowd_init_v -1 $_obj_sc_crowd_switch1
opwire -n $_obj_sc_crowd_attribwrangle2 -0 $_obj_sc_crowd_null2
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_sc_crowd
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_sc_crowd
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="rotate_by_quar" label="rotate_by_quar" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_geo1_rotate_by_quar (Sop/attribvop)
set _obj_fire01_geo1_rotate_by_quar = `run("opadd -e -n -v attribvop rotate_by_quar")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_geo1_rotate_by_quar
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      dialog  }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      dialog  }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "angle"         label   "Angle"         type    float   default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "axis"  label   "Normalized Rotation Axis"      type    float   size    3       default { "1" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_fire01_geo1_rotate_by_quar
opparm $_obj_fire01_geo1_rotate_by_quar  bindings ( 0 ) groupbindings ( 0 )
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar angle ( 90 )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_geo1_rotate_by_quar
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_geo1_rotate_by_quar
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar
opcf $_obj_fire01_geo1_rotate_by_quar

# Node $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_geo1_rotate_by_quar_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1

# Node $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_geo1_rotate_by_quar_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 17.636915966896794` -y `$arg3 + 0.47758885769640402` $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1

# Node $_obj_fire01_geo1_rotate_by_quar_quaternion1 (Vop/quaternion)
set _obj_fire01_geo1_rotate_by_quar_quaternion1 = `run("opadd -e -n -v quaternion quaternion1")`
oplocate -x `$arg2 + 6.314656699969623` -y `$arg3 + -3.7257533014517858` $_obj_fire01_geo1_rotate_by_quar_quaternion1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_quaternion1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_quaternion1

# Node $_obj_fire01_geo1_rotate_by_quar_bind1 (Vop/bind)
set _obj_fire01_geo1_rotate_by_quar_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 5.7137916493246914` -y `$arg3 + -0.58906796103844927` $_obj_fire01_geo1_rotate_by_quar_bind1
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar_bind1 parmname ( orient ) parmtype ( float4 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_bind1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_bind1

# Node $_obj_fire01_geo1_rotate_by_quar_bind2 (Vop/bind)
set _obj_fire01_geo1_rotate_by_quar_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 13.077437794639941` -y `$arg3 + -0.58906794911752014` $_obj_fire01_geo1_rotate_by_quar_bind2
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar_bind2 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_bind2
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_bind2

# Node $_obj_fire01_geo1_rotate_by_quar_qmultiply1 (Vop/qmultiply)
set _obj_fire01_geo1_rotate_by_quar_qmultiply1 = `run("opadd -e -n -v qmultiply qmultiply1")`
oplocate -x `$arg2 + 9.9901681458396574` -y `$arg3 + -1.2629575975136484` $_obj_fire01_geo1_rotate_by_quar_qmultiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_qmultiply1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_qmultiply1

# Node $_obj_fire01_geo1_rotate_by_quar_qrotate1 (Vop/qrotate)
set _obj_fire01_geo1_rotate_by_quar_qrotate1 = `run("opadd -e -n -v qrotate qrotate1")`
oplocate -x `$arg2 + 9.990168116037335` -y `$arg3 + 1.5005906932910018` $_obj_fire01_geo1_rotate_by_quar_qrotate1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_qrotate1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_qrotate1

# Node $_obj_fire01_geo1_rotate_by_quar_angle (Vop/parameter)
set _obj_fire01_geo1_rotate_by_quar_angle = `run("opadd -e -n -v parameter angle")`
oplocate -x `$arg2 + -0.067831036717705295` -y `$arg3 + -2.8957532715749581` $_obj_fire01_geo1_rotate_by_quar_angle
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar_angle parmname ( angle ) parmlabel ( Angle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_angle
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_angle

# Node $_obj_fire01_geo1_rotate_by_quar_axis (Vop/parameter)
set _obj_fire01_geo1_rotate_by_quar_axis = `run("opadd -e -n -v parameter axis")`
oplocate -x `$arg2 + 2.4754214887490642` -y `$arg3 + -5.3904170349971725` $_obj_fire01_geo1_rotate_by_quar_axis
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar_axis parmname ( axis ) parmlabel ( 'Normalized Rotation Axis' ) parmtype ( float3 ) float3def ( 1 0 0 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_axis
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_axis

# Node $_obj_fire01_geo1_rotate_by_quar_degtorad1 (Vop/degtorad)
set _obj_fire01_geo1_rotate_by_quar_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 3.1674082417432974` -y `$arg3 + -3.434731251239866` $_obj_fire01_geo1_rotate_by_quar_degtorad1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_degtorad1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_degtorad1
opcf ..
opcf $_obj_fire01_geo1_rotate_by_quar
oporder -e geometryvopglobal1 geometryvopoutput1 quaternion1 bind1 bind2 qmultiply1 qrotate1 angle axis degtorad1 
opcf ..
opset -p on $_obj_fire01_geo1_rotate_by_quar

opcf $arg1
opwire -n $_obj_fire01_geo1_lxf_importer1 -0 $_obj_fire01_geo1_rotate_by_quar
opcf $_obj_fire01_geo1_rotate_by_quar
opwire -n $_obj_fire01_geo1_rotate_by_quar_qrotate1 -0 $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1
opwire -n $_obj_fire01_geo1_rotate_by_quar_degtorad1 -0 $_obj_fire01_geo1_rotate_by_quar_quaternion1
opwire -n $_obj_fire01_geo1_rotate_by_quar_axis -1 $_obj_fire01_geo1_rotate_by_quar_quaternion1
opwire -n $_obj_fire01_geo1_rotate_by_quar_qmultiply1 -0 $_obj_fire01_geo1_rotate_by_quar_bind2
opwire -n $_obj_fire01_geo1_rotate_by_quar_quaternion1 -0 $_obj_fire01_geo1_rotate_by_quar_qmultiply1
opwire -n $_obj_fire01_geo1_rotate_by_quar_bind1 -1 $_obj_fire01_geo1_rotate_by_quar_qmultiply1
opwire -n $_obj_fire01_geo1_rotate_by_quar_quaternion1 -0 $_obj_fire01_geo1_rotate_by_quar_qrotate1
opwire -n $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1 -1 $_obj_fire01_geo1_rotate_by_quar_qrotate1
opwire -n $_obj_fire01_geo1_rotate_by_quar_angle -0 $_obj_fire01_geo1_rotate_by_quar_degtorad1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_geo1_rotate_by_quar
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_geo1_rotate_by_quar
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="clip" label="clip" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_clip (Sop/attribwrangle)
set _obj_geo1_clip = `run("opadd -e -n -v attribwrangle clip")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_clip
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "cutDir"        label   "Cutdir"        type    vector  size    3       default { "0" "0" "0" }         range   { 0 1 }     }     parm {        name    "cutOrigin"     label   "Cutorigin"     type    vector  size    3       default { "0" "0" "0" }         range   { 0 1 }     }     parm {        name    "dist"  label   "Dist"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "keep"  label   "keep"  type    string  default { "" }  menu    {           "both"      "both"      "above"     "above"             "below"     "below"         }       export  all     }     parm {    name    "num_of_pt_attribs"     label   "num_of_pt_attribs"     type    integer         default { "0" }         range   { 0 10 }     } ' $_obj_geo1_clip
opparm $_obj_geo1_clip  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_clip num_of_pt_attribs
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -F 'geo = hou.pwd().geometry()\n\nreturn len(geo.pointAttribs())' -l p $_obj_geo1_clip/num_of_pt_attribs
chblockend
opparm $_obj_geo1_clip class ( detail ) vex_numcount ( 1 ) snippet ( 'string in0 = @OpInput1;\nint nprims = nprimitives(in0);\n\nint op;\nstring operation = chs("keep");\nif(operation == "above")op= 1;\nif(operation == "below")op= 2;\nelse op= 0;\n\nvector cutDir = normalize(chv("cutDir"));\nvector cutOrigin = chv("cutOrigin");\nfloat dist = ch("dist");\n\n//////////////////////////////////////////////////////////////////\n\nfor(int primnum = 0; primnum < nprims; primnum++)\n{\n    int vers[] = primvertices(0, primnum);\n    int length = len(vers);\n    \n    int border=0;\n    int prim0pts[];\n    int prim1pts[];\n    int numNewPts = 0;\n    \n    // check if this mesh is split\n    for(int i = 0; i< length; i++)\n    {\n        int srcPoint = vertexpoint(in0, vers[i]);\n        vector srcP = point(in0, "P", srcPoint);\n        vector srcPDir = normalize(srcP - cutOrigin);\n        \n        float dot = dot(cutDir, srcPDir);\n        \n        if(dot<=0)border += 1;\n    }\n    \n    // if it is not cut, maybe remove and done.\n    if(border == 0)\n    {\n        if(op == 2)removeprim(geoself(),primnum,1);\n        //        continue;continue;\n    }\n    else if(border == length)\n    {\n        if(op == 1)removeprim(geoself(),primnum,1);\n        //continue;\n    }\n    \n    else\n    {\n        // cut mesh\n        int srcPoint;\n        float srcDot;\n        \n        for(int i = 0; i< length; i++)\n        {\n            int hedge = vertexhedge(in0, vers[i]);\n            \n            //int primary = hedge_isprimary(in0, hedge);\n            //if(primary == 0)continue;\n            \n            int destVtx = hedge_dstvertex(in0, hedge);\n                    \n            srcPoint = vertexpoint(in0, vers[i]);\n            int destPoint = vertexpoint(in0, destVtx);\n            vector srcP = point(in0, "P", srcPoint);\n            vector destP = point(in0, "P", destPoint);\n            \n            vector srcPDir = normalize(srcP - cutOrigin);\n            vector destPDir = normalize(destP - cutOrigin);\n            srcDot = dot(cutDir, srcPDir);\n            float destDot = dot(cutDir, destPDir);\n            \n            if(srcDot > 0)\n            {\n                push(prim0pts, srcPoint);\n            }\n            else if(srcDot == 0)\n            {\n                push(prim0pts, srcPoint);\n                push(prim1pts, srcPoint);\n            }\n            else if(srcDot < 0)\n            {\n                push(prim1pts, srcPoint);\n            }\n            \n            \n            if((sign(srcDot) != sign(destDot)) && srcDot != 0 && destDot != 0)\n            {\n                //@Cd=set(float(i)/length, float(border)/length, 0);\n                float bias = -destDot/(srcDot - destDot);\n                int newPt = addpoint(geoself(), lerp(destP, srcP, bias));\n                push(prim0pts, newPt);\n                push(prim1pts, newPt);\n        \n                numNewPts += 1;\n            }\n        }\n        \n        \n        \n        // remove original mesh, and add 2 meshes which cover original\n        \n        removeprim(geoself(),primnum,1);\n        if(op != 2)\n        {\n            int newPrim = addprim(geoself(), "poly");\n            foreach(int pt; prim0pts)\n            {\n                addvertex(geoself(), newPrim, pt);\n            }\n        }\n        if(op != 1)\n        {\n            int newPrim = addprim(geoself(), "poly");\n            foreach(int pt; prim1pts)\n            {\n                addvertex(geoself(), newPrim, pt);\n            }\n        }\n    }\n}' ) cutDir ( 0 1 0 ) keep ( both ) num_of_pt_attribs ( num_of_pt_attribs )
chautoscope $_obj_geo1_clip +num_of_pt_attribs
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_clip
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_clip
opexprlanguage -s hscript $_obj_geo1_clip
opuserdata -n '___Version___' -v '' $_obj_geo1_clip
opset -p on $_obj_geo1_clip

opcf $arg1
opwire -n $_obj_geo1_attribwrangle3 -0 $_obj_geo1_clip

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_clip
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_clip
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="CALC_size" label="CALC_size" icon="SOP_measure">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_explosion01_FX_explosion_CALC_size (Sop/subnet)
set _obj_explosion01_FX_explosion_CALC_size = `run("opadd -e -n -v subnet CALC_size")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_explosion01_FX_explosion_CALC_size
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  all     }     parm {    name    "accurate"      label   "accurate"      type    toggle  default { "0" }         range   { 0! 10 }       parmtag { "autoscope" "0000000000000000" }     } ' $_obj_explosion01_FX_explosion_CALC_size
opcolor -c 0.86699998378753662 0 0 $_obj_explosion01_FX_explosion_CALC_size
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size
opcf $_obj_explosion01_FX_explosion_CALC_size

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size (Sop/subnet)
set _obj_explosion01_FX_explosion_CALC_size_bound_size = `run("opadd -e -n -v subnet bound_size")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + -0.19115699999999999` $_obj_explosion01_FX_explosion_CALC_size_bound_size
opcolor -c 0.86699998378753662 0 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size
opcf $_obj_explosion01_FX_explosion_CALC_size_bound_size

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size (Sop/attribwrangle)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size = `run("opadd -e -n -v attribwrangle crt_size")`
oplocate -x `$arg2 + -0.0045999999999999999` -y `$arg3 + 1.3579000000000001` $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opparm $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size class ( detail ) snippet ( 'vector min,max;\ngetbbox(0,min,max);\n\nvector size = abs(max-min);\nfloat vol = size.x * size.y * size.z;\n\n\n@size = vol;\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opuserdata -n '___Version___' -v '' $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opcf ..

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size (Sop/subnet)
set _obj_explosion01_FX_explosion_CALC_size_volume_size = `run("opadd -e -n -v subnet volume_size")`
oplocate -x `$arg2 + 3.75996` -y `$arg3 + -0.19115699999999999` $_obj_explosion01_FX_explosion_CALC_size_volume_size
opcolor -c 0.86699998378753662 0 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size
opcf $_obj_explosion01_FX_explosion_CALC_size_volume_size

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1 (Sop/attribwrangle)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + 4.5744100000000003` -y `$arg3 + -0.83312600000000003` $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spare_input0"  label   "Spare Input 0"         type    oppath  default { "" }  help    "Refer to this in expressions as -1, such as: npoint(-1)"       parmtag { "opfilter" "!!SOP!!" }        parmtag { "oprelative" "." }     } ' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opparm $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1 class ( detail ) snippet ( 'int nprims = nprimitives(0);\nfloat vol = 0;\n\nfor(int primnum=0;primnum<nprims; primnum++)\n{\n    vol += primintrinsic(0,"measuredvolume",primnum);\n}\n\n@size = vol;' ) spare_input0 ( ../foreach_begin2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opcf ..
opcf ..
opcf $_obj_explosion01_FX_explosion_CALC_size

# Node $_obj_explosion01_FX_explosion_CALC_size_output1 (Sop/output)
set _obj_explosion01_FX_explosion_CALC_size_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + -6.4508900000000002` $_obj_explosion01_FX_explosion_CALC_size_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_output1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_output1
opcf $_obj_explosion01_FX_explosion_CALC_size_bound_size

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1 (Sop/block_end)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 1.0055582824741727e-08` -y `$arg3 + -0.93523175438865702` $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( class ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1 (Sop/block_begin)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 2.9032` $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1 method ( piece ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1 (Sop/connectivity)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1 = `run("opadd -e -n -v connectivity connectivity1")`
oplocate -x `$arg2 + -0.0016000000000000001` -y `$arg3 + 4.1805000000000003` $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1 connecttype ( prim )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2 (Sop/compile_end)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2 = `run("opadd -e -n -v compile_end compile_end2")`
oplocate -x `$arg2 + 1.0055582824741727e-08` -y `$arg3 + -3.6198317543886569` $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opcolor -c 0.75 0.75 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2 (Sop/compile_begin)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2 = `run("opadd -e -n -v compile_begin compile_begin2")`
oplocate -x `$arg2 + 0` -y `$arg3 + 5.2176` $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2 blockpath ( ../compile_end2 )
opcolor -c 0.75 0.75 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1 (Sop/attribute)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1 = `run("opadd -e -n -v attribute attribute1")`
oplocate -x `$arg2 + -0.005049999944417175` -y `$arg3 + -2.2840417543886571` $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1
opparm $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1  ptrenames ( 5 ) vtxrenames ( 5 ) primrenames ( 5 ) detailrenames ( 5 ) rmanconversions ( 5 )
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1 stdswitcher ( 2 2 2 2 2 ) primdel ( class )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1 (Sop/output)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -0.0015999999444171753` -y `$arg3 + -5.7388717543886569` $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1 (Sop/attribpromote)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + -0.0050499985370784373` -y `$arg3 + 0.359125105520887` $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1 inname ( size ) inclass ( detail ) outclass ( primitive ) method ( first )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1
oporder -e crt_size foreach_end1 foreach_begin1 connectivity1 compile_end2 compile_begin2 attribute1 output1 attribpromote1 
opcf ..
opcf $_obj_explosion01_FX_explosion_CALC_size_volume_size

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1 (Sop/attribpromote)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + -0.0034500099999999999` -y `$arg3 + -1.3393299999999999` $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1 inname ( size ) inclass ( primitive ) outclass ( detail ) method ( sum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1 (Sop/measure)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_measure1 = `run("opadd -e -n -v measure measure1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + -0.51577499999999998` $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opspareds '    parm {   name    "group"         baseparm        label   "Group"         export  none    bindselector prims "Measure Primitives"             "Select the primitives to measure and press Enter to complete."         0 1 0xffffffff 0 "" 0     }     parm {      name    "type"  baseparm        label   "Type"  export  none     }     parm {   name    "override"      baseparm        label   "Override Name"         export  none     }     parm {   name    "attribname"    baseparm        label   "Attribute"     export  none     }     parm {   name    "curvetype"     baseparm        label   "Curvature Type"        export  none     }     parm {   name    "curve"         baseparm        label   "Min/Max"       export  none     }     parm {   name    "t"     baseparm        label   "Center"        export  none     }     parm {   name    "spare_input0"  label   "Spare Input 0"         type    oppath  default { "" }  help    "Refer to this in expressions as -1, such as: npoint(-1)"       parmtag { "opfilter" "!!SOP!!" }        parmtag { "oprelative" "." }     } ' $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1 type ( volume ) override ( on ) attribname ( size ) spare_input0 ( ../foreach_begin2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2 (Sop/attribpromote)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2 = `run("opadd -e -n -v attribpromote attribpromote2")`
oplocate -x `$arg2 + -0.0034500099999999999` -y `$arg3 + -2.3138000000000001` $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2 inname ( size ) inclass ( detail ) outclass ( primitive ) method ( first )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 (Sop/block_begin)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 = `run("opadd -e -n -v block_begin foreach_begin2")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + 0.75090199999999996` $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 method ( piece ) blockpath ( ../foreach_end2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2 (Sop/connectivity)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2 = `run("opadd -e -n -v connectivity connectivity2")`
oplocate -x `$arg2 + 2.3460900000000001e-09` -y `$arg3 + 2.0282` $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2 connecttype ( prim )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2 (Sop/block_end)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2 = `run("opadd -e -n -v block_end foreach_end2")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + -3.3399200000000002` $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( class ) blockpath ( ../foreach_begin2 ) templatepath ( ../foreach_begin2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2 (Sop/attribute)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2 = `run("opadd -e -n -v attribute attribute2")`
oplocate -x `$arg2 + -0.0034499999999999999` -y `$arg3 + -4.6887299999999996` $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2
opparm $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2  ptrenames ( 5 ) vtxrenames ( 5 ) primrenames ( 5 ) detailrenames ( 5 ) rmanconversions ( 5 )
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2 stdswitcher ( 2 2 2 2 2 ) primdel ( class )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3 (Sop/compile_end)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3 = `run("opadd -e -n -v compile_end compile_end3")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + -5.9408799999999999` $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opcolor -c 0.75 0.75 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3 (Sop/compile_begin)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3 = `run("opadd -e -n -v compile_begin compile_begin3")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + 3.19617` $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3 blockpath ( ../compile_end3 )
opcolor -c 0.75 0.75 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1 (Sop/output)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + -7.4033800000000003` $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1 (Sop/null)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + 4.5558300000000003` $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
oporder -e attribpromote1 measure1 attribpromote2 foreach_begin2 connectivity2 foreach_end2 attribute2 compile_end3 compile_begin3 output1 attribwrangle1 null1 
opcf ..

# Node $_obj_explosion01_FX_explosion_CALC_size_switch1 (Sop/switch)
set _obj_explosion01_FX_explosion_CALC_size_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + -2.0489100000000001e-08` -y `$arg3 + -3.8235399999999999` $_obj_explosion01_FX_explosion_CALC_size_switch1
chblockbegin
chadd -t 40.625 40.625 $_obj_explosion01_FX_explosion_CALC_size_switch1 input
chkey -t 40.625 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../accurate")' $_obj_explosion01_FX_explosion_CALC_size_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_switch1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_switch1
oporder -e output1 bound_size volume_size switch1 
opcf ..
opset -p on $_obj_explosion01_FX_explosion_CALC_size

opcf $arg1
opwire -n $_obj_explosion01_FX_explosion_convertvdb15 -0 $_obj_explosion01_FX_explosion_CALC_size
opcf $_obj_explosion01_FX_explosion_CALC_size
opwire -n $_obj_explosion01_FX_explosion_CALC_size_switch1 -0 $_obj_explosion01_FX_explosion_CALC_size_output1
opwire -n -i 0 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size
opcf $_obj_explosion01_FX_explosion_CALC_size_bound_size
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opwire -n -i 0 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1
opcf ..
opwire -n -i 0 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size
opcf $_obj_explosion01_FX_explosion_CALC_size_volume_size
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opwire -n -i 0 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
opcf ..
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size -0 $_obj_explosion01_FX_explosion_CALC_size_switch1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size -1 $_obj_explosion01_FX_explosion_CALC_size_switch1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_explosion01_FX_explosion_CALC_size
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_explosion01_FX_explosion_CALC_size
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pc_crowd" label="pc_crowd" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_pc_crowd (Object/geo)
set _obj_pc_crowd = `run("opadd -e -n -v geo pc_crowd")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_pc_crowd
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "full" }          help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_pc_crowd
opset -S on $_obj_pc_crowd
opparm -V 16.0.674 $_obj_pc_crowd use_dcolor ( off )
chautoscope $_obj_pc_crowd +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_pc_crowd
opexprlanguage -s hscript $_obj_pc_crowd
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd
opcf $_obj_pc_crowd

# Node $_obj_pc_crowd_mountain1 (Sop/mountain::2.0)
set _obj_pc_crowd_mountain1 = `run("opadd -e -n -v mountain::2.0 mountain1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 4.3940799999999998` $_obj_pc_crowd_mountain1
opparm $_obj_pc_crowd_mountain1 height ( 21.600000000000001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_mountain1
opexprlanguage -s hscript $_obj_pc_crowd_mountain1
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_mountain1
opuserdata -n '___toolcount___' -v '20' $_obj_pc_crowd_mountain1
opuserdata -n '___toolid___' -v 'sop_mountain::2.0' $_obj_pc_crowd_mountain1

# Node $_obj_pc_crowd_crt_targetP (Sop/attribwrangle)
set _obj_pc_crowd_crt_targetP = `run("opadd -e -n -v attribwrangle crt_targetP")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -3.35127` $_obj_pc_crowd_crt_targetP
opparm $_obj_pc_crowd_crt_targetP  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_crt_targetP snippet ( 'v@targetP = v@opinput1_P;' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_crt_targetP
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_crt_targetP
opexprlanguage -s hscript $_obj_pc_crowd_crt_targetP
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_crt_targetP
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_crt_targetP
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_crt_targetP

# Node $_obj_pc_crowd_crt_source (Sop/attribwrangle)
set _obj_pc_crowd_crt_source = `run("opadd -e -n -v attribwrangle crt_source")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -5.0413600000000001` $_obj_pc_crowd_crt_source
opparm $_obj_pc_crowd_crt_source  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_crt_source snippet ( 'i@source=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_crt_source
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_crt_source
opexprlanguage -s hscript $_obj_pc_crowd_crt_source
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_crt_source
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_crt_source
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_crt_source

# Node $_obj_pc_crowd_crt_terrain (Sop/attribwrangle)
set _obj_pc_crowd_crt_terrain = `run("opadd -e -n -v attribwrangle crt_terrain")`
oplocate -x `$arg2 + 0.244059` -y `$arg3 + -3.8374799999999998` $_obj_pc_crowd_crt_terrain
opparm $_obj_pc_crowd_crt_terrain  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_crt_terrain snippet ( 'i@terrain=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_crt_terrain
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_crt_terrain
opexprlanguage -s hscript $_obj_pc_crowd_crt_terrain
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_crt_terrain
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_crt_terrain
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_crt_terrain

# Node $_obj_pc_crowd_DOP_space_colonization_crowd (Sop/solver)
set _obj_pc_crowd_DOP_space_colonization_crowd = `run("opadd -e -n -v solver DOP_space_colonization_crowd")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -8.1926199999999998` $_obj_pc_crowd_DOP_space_colonization_crowd
opcolor -c 0.40000000596046448 1 1 $_obj_pc_crowd_DOP_space_colonization_crowd
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_space_colonization_crowd
opexprlanguage -s hscript $_obj_pc_crowd_DOP_space_colonization_crowd
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_space_colonization_crowd
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_space_colonization_crowd
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_space_colonization_crowd

# Node $_obj_pc_crowd_attribwrangle1 (Sop/attribwrangle)
set _obj_pc_crowd_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + -2.7330899999999998` -y `$arg3 + -9.9643599999999992` $_obj_pc_crowd_attribwrangle1
opparm $_obj_pc_crowd_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_attribwrangle1 snippet ( '@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_attribwrangle1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_pc_crowd_attribwrangle1
opexprlanguage -s hscript $_obj_pc_crowd_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_attribwrangle1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_attribwrangle1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_attribwrangle1

# Node $_obj_pc_crowd_attribwrangle2 (Sop/attribwrangle)
set _obj_pc_crowd_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 19.00213293611327` -y `$arg3 + -11.043185371896151` $_obj_pc_crowd_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "extra_overwrite_rad"   label   "Extra Overwrite Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_attribwrangle2
opparm $_obj_pc_crowd_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_attribwrangle2 snippet ( 'int pts[]= pcfind(1, "P", @P, ch("rad") + ch("extra_overwrite_rad"), chi("max_pts"));\n\nforeach(int pt; pts)\n{\n    vector nearP = point(1, "P",pt);\n    vector nearV = point(1, "v",pt);\n    if(distance(@P + nearV * @TimeInc, nearP)<ch("rad"))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n    else\n    {\n        @N = normalize((@P + nearV * @TimeInc) - nearP);\n    }\n}' ) rad ( 1.8 ) max_pts ( 1 ) extra_overwrite_rad ( 10 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_attribwrangle2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_attribwrangle2
opexprlanguage -s hscript $_obj_pc_crowd_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_attribwrangle2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_attribwrangle2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_attribwrangle2

# Node $_obj_pc_crowd_calc_new_v (Sop/attribwrangle)
set _obj_pc_crowd_calc_new_v = `run("opadd -e -n -v attribwrangle calc_new_v")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -12.47085537189615` $_obj_pc_crowd_calc_new_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "dot"   label   "Dot"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_deg"       label   "Max Deg"       type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_calc_new_v
opparm $_obj_pc_crowd_calc_new_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_calc_new_v snippet ( 'float dot = ch("dot");\nint handle = pcopen(@OpInput2, "P", @P + @v * @TimeInc, ch("rad"), chi("max_pts"));\n//"N", normalize(v@targetP - @P), \n//,"ndot",dot\n\nint num = pcnumfound(handle);\nvector filterP;\n//vector filterN;\n\nif(num > 0)\n{\n    //filterN = pcimportbyidxf(handle, "N", 0);\n    //filterN = normalize(filterN);\n    filterP = pcfilter(handle, "P");\n    \n    vector avoidDir = normalize(filterP - @P);\n    \n    dot = dot(avoidDir, normalize(@v));\n    vector cross = normalize(cross(avoidDir, normalize(@v)));\n    float maxRad = radians(ch("max_deg"));\n    \n    acos(dot);\n    \n    @v = avoidDir * length(@v);\n    v@aaaa = cross;\n    //v@up = filterN;\n}\n\n\n' ) rad ( 8 ) max_pts ( 100 ) dot ( -0.5 ) max_deg ( 20 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_calc_new_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_calc_new_v
opexprlanguage -s hscript $_obj_pc_crowd_calc_new_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_calc_new_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_calc_new_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_calc_new_v

# Node $_obj_pc_crowd_advect (Sop/attribwrangle)
set _obj_pc_crowd_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -16.197645371896151` $_obj_pc_crowd_advect
opparm $_obj_pc_crowd_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_advect snippet ( 'if(distance(v@targetP, @P) > length(@v * @TimeInc))\n{\n    @P += @v * @TimeInc;\n}\nelse\n{\n    @Cd = set(1,0,0);\n}\n\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_advect
opexprlanguage -s hscript $_obj_pc_crowd_advect
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_advect
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_advect
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_advect

# Node $_obj_pc_crowd_init_v (Sop/attribwrangle)
set _obj_pc_crowd_init_v = `run("opadd -e -n -v attribwrangle init_v")`
oplocate -x `$arg2 + 17.408772936113174` -y `$arg3 + -7.901175371896251` $_obj_pc_crowd_init_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spped"         label   "Spped"         type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_init_v
opparm $_obj_pc_crowd_init_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_init_v snippet ( 'if(length(@v) == 0)\n{\n    @v += normalize(v@targetP - @P) * ch("spped");\n}' ) spped ( 0.5 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_init_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_init_v
opexprlanguage -s hscript $_obj_pc_crowd_init_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_init_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_init_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_init_v

# Node $_obj_pc_crowd_add_v (Sop/attribwrangle)
set _obj_pc_crowd_add_v = `run("opadd -e -n -v attribwrangle add_v")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -13.954395371896149` $_obj_pc_crowd_add_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "add_speed"     label   "Add Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_add_v
opparm $_obj_pc_crowd_add_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_add_v snippet ( '@v += normalize(@v) * ch("add_speed");' ) add_speed ( 0.20000000000000001 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_add_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_add_v
opexprlanguage -s hscript $_obj_pc_crowd_add_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_add_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_add_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_add_v

# Node $_obj_pc_crowd_limit_v (Sop/attribwrangle)
set _obj_pc_crowd_limit_v = `run("opadd -e -n -v attribwrangle limit_v")`
oplocate -x `$arg2 + 15.170142936113171` -y `$arg3 + -15.032145371896149` $_obj_pc_crowd_limit_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "max_speed"     label   "Max Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_limit_v
opparm $_obj_pc_crowd_limit_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_limit_v snippet ( 'if(length(@v) > ch("max_speed"))\n{\n    @v = normalize(@v) * ch("max_speed");\n}' ) max_speed ( 3 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_limit_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_limit_v
opexprlanguage -s hscript $_obj_pc_crowd_limit_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_limit_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_limit_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_limit_v

# Node $_obj_pc_crowd_update_N (Sop/attribwrangle)
set _obj_pc_crowd_update_N = `run("opadd -e -n -v attribwrangle update_N")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -18.78344537189615` $_obj_pc_crowd_update_N
opparm $_obj_pc_crowd_update_N  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_update_N snippet ( 'if(length(@v)>0)@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_update_N
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_update_N
opexprlanguage -s hscript $_obj_pc_crowd_update_N
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_update_N
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_update_N
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_update_N

# Node $_obj_pc_crowd_update_up (Sop/attribwrangle)
set _obj_pc_crowd_update_up = `run("opadd -e -n -v attribwrangle update_up")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -17.350145371896151` $_obj_pc_crowd_update_up
opparm $_obj_pc_crowd_update_up  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_update_up snippet ( 'int near = nearpoint(1,@P);\n\n@up = point(1,"N",near);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_update_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_update_up
opexprlanguage -s hscript $_obj_pc_crowd_update_up
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_update_up
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_update_up
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_update_up

# Node $_obj_pc_crowd_attribwrangle3 (Sop/attribwrangle)
set _obj_pc_crowd_attribwrangle3 = `run("opadd -e -n -v attribwrangle attribwrangle3")`
oplocate -x `$arg2 + -5.4970899965336173` -y `$arg3 + -2.2454110756255892` $_obj_pc_crowd_attribwrangle3
opparm $_obj_pc_crowd_attribwrangle3  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_attribwrangle3 snippet ( 'i@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_attribwrangle3
opexprlanguage -s hscript $_obj_pc_crowd_attribwrangle3
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_attribwrangle3

# Node $_obj_pc_crowd_attribwrangle4 (Sop/attribwrangle)
set _obj_pc_crowd_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + -2.7342399965336175` -y `$arg3 + -2.1050477900516409` $_obj_pc_crowd_attribwrangle4
opparm $_obj_pc_crowd_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_attribwrangle4 snippet ( 'i@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_attribwrangle4
opexprlanguage -s hscript $_obj_pc_crowd_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_attribwrangle4

# Node $_obj_pc_crowd_DOP_sopsolver2 (Sop/dopnet)
set _obj_pc_crowd_DOP_sopsolver2 = `run("opadd -e -n -v dopnet DOP_sopsolver2")`
oplocate -x `$arg2 + 3.1928022717649642` -y `$arg3 + -8.1926199999999998` $_obj_pc_crowd_DOP_sopsolver2
opparm $_obj_pc_crowd_DOP_sopsolver2  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2 timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_pc_crowd_DOP_sopsolver2/timestep
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2 timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_pc_crowd_DOP_sopsolver2/timeoffset
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2 stdswitcher ( 1 1 1 ) objname1 ( * )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2
opcf $_obj_pc_crowd_DOP_sopsolver2

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1 (Dop/sopsolver::2.0)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1 = `run("opadd -e -n -v sopsolver::2.0 sopsolver1")`
oplocate -x `$arg2 + 1.6823529411764713` -y `$arg3 + 3.6113022412385654` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1 solveinitframe ( on ) uniquedataname ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opcf $_obj_pc_crowd_DOP_sopsolver2_sopsolver1

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 7.5910954268727941` -y `$arg3 + -11.708926113922786` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "extra_overwrite_rad"   label   "Extra Overwrite Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 snippet ( 'int pts[]= pcfind(1, "P", @P, ch("rad") + ch("extra_overwrite_rad"), chi("max_pts"));\n\nforeach(int pt; pts)\n{\n    vector nearP = point(1, "P",pt);\n    vector nearV = point(1, "v",pt);\n    if(distance(@P + nearV * @TimeInc, nearP)<ch("rad"))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n    else\n    {\n        @N = normalize((@P + nearV * @TimeInc) - nearP);\n    }\n}' ) rad ( 1.8 ) max_pts ( 1 ) extra_overwrite_rad ( 10 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v = `run("opadd -e -n -v attribwrangle calc_new_v")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -13.136626113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "dot"   label   "Dot"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_deg"       label   "Max Deg"       type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v snippet ( 'float dot = ch("dot");\nint handle = pcopen(@OpInput2, "P", @P + @v * @TimeInc, ch("rad"), chi("max_pts"));\n//"N", normalize(v@targetP - @P), \n//,"ndot",dot\n\nint num = pcnumfound(handle);\nvector filterP;\n//vector filterN;\n\nif(num > 0)\n{\n    //filterN = pcimportbyidxf(handle, "N", 0);\n    //filterN = normalize(filterN);\n    filterP = pcfilter(handle, "P");\n    \n    vector avoidDir = normalize(filterP - @P);\n    \n    dot = dot(avoidDir, normalize(@v));\n    vector cross = normalize(cross(avoidDir, normalize(@v)));\n    float maxRad = radians(ch("max_deg"));\n    \n    acos(dot);\n    \n    @v = avoidDir * length(@v);\n    v@aaaa = cross;\n    //v@up = filterN;\n}\n\n\n' ) rad ( 8 ) max_pts ( 100 ) dot ( -0.5 ) max_deg ( 20 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -16.863426113922785` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect snippet ( 'if(distance(v@targetP, @P) > length(@v * @TimeInc))\n{\n    @P += @v * @TimeInc;\n}\nelse\n{\n    @Cd = set(1,0,0);\n}\n\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v = `run("opadd -e -n -v attribwrangle init_v")`
oplocate -x `$arg2 + 6.0146766033433829` -y `$arg3 + -7.6182402315698434` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spped"         label   "Spped"         type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v snippet ( 'if(length(@v) == 0)\n{\n    @v += normalize(v@targetP - @P) * ch("spped");\n}' ) spped ( 0.5 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v = `run("opadd -e -n -v attribwrangle add_v")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -14.620126113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "add_speed"     label   "Add Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v snippet ( '@v += normalize(@v) * ch("add_speed");' ) add_speed ( 0.20000000000000001 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v = `run("opadd -e -n -v attribwrangle limit_v")`
oplocate -x `$arg2 + 3.7591054268727939` -y `$arg3 + -15.697926113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "max_speed"     label   "Max Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v snippet ( 'if(length(@v) > ch("max_speed"))\n{\n    @v = normalize(@v) * ch("max_speed");\n}' ) max_speed ( 3 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N = `run("opadd -e -n -v attribwrangle update_N")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -19.449226113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N snippet ( 'if(length(@v)>0)@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up = `run("opadd -e -n -v attribwrangle update_up")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -18.015926113922788` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up snippet ( 'int near = nearpoint(1,@P);\n\n@up = point(1,"N",near);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opcf ..
opcf ..
opcf ..
opcf $_obj_pc_crowd

# Node $_obj_pc_crowd_grid1 (Sop/grid)
set _obj_pc_crowd_grid1 = `run("opadd -e -n -v grid grid1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 5.5117200000000004` $_obj_pc_crowd_grid1
opparm -V 16.0.674 $_obj_pc_crowd_grid1 size ( 50 50 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_grid1
opexprlanguage -s hscript $_obj_pc_crowd_grid1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_grid1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_grid1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_grid1

# Node $_obj_pc_crowd_scatter1 (Sop/scatter::2.0)
set _obj_pc_crowd_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 0.848607` $_obj_pc_crowd_scatter1
opparm -V 16.0.674 $_obj_pc_crowd_scatter1 forcetotal ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_scatter1
opexprlanguage -s hscript $_obj_pc_crowd_scatter1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_scatter1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_scatter1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_scatter1

# Node $_obj_pc_crowd_scatter2 (Sop/scatter::2.0)
set _obj_pc_crowd_scatter2 = `run("opadd -e -n -v scatter::2.0 scatter2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + -1.0686800000000001` $_obj_pc_crowd_scatter2
opparm -V 16.0.674 $_obj_pc_crowd_scatter2 npts ( 20 ) relaxpoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_scatter2
opexprlanguage -s hscript $_obj_pc_crowd_scatter2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_scatter2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_scatter2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_scatter2

# Node $_obj_pc_crowd_scatter3 (Sop/scatter::2.0)
set _obj_pc_crowd_scatter3 = `run("opadd -e -n -v scatter::2.0 scatter3")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + -1.31681` $_obj_pc_crowd_scatter3
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_scatter3 npts
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../scatter2/npts")' $_obj_pc_crowd_scatter3/npts
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_scatter3 npts ( npts ) seed ( 3.3799999999999999 ) scaleradiiby ( 1.8 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_scatter3
opexprlanguage -s hscript $_obj_pc_crowd_scatter3
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_scatter3
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_scatter3
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_scatter3

# Node $_obj_pc_crowd_object_merge1 (Sop/object_merge)
set _obj_pc_crowd_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + 8.0308775891609567` -y `$arg3 + -6.9331388883748009` $_obj_pc_crowd_object_merge1
opparm $_obj_pc_crowd_object_merge1  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_object_merge1 xformtype ( local ) objpath1 ( ../DOP_sopsolver2/sopsolver1/null2/ )
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_object_merge1
opexprlanguage -s hscript $_obj_pc_crowd_object_merge1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_object_merge1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_object_merge1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_object_merge1

# Node $_obj_pc_crowd_null1 (Sop/null)
set _obj_pc_crowd_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -11.5685` $_obj_pc_crowd_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_null1
opexprlanguage -s hscript $_obj_pc_crowd_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_null1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_null1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_null1

# Node $_obj_pc_crowd_box1 (Sop/box)
set _obj_pc_crowd_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + -6.5566199999999997` -y `$arg3 + -11.3622` $_obj_pc_crowd_box1
opparm -V 16.0.674 $_obj_pc_crowd_box1 size ( 1 1 0.59999999999999998 ) t ( 0 0.5 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_box1
opexprlanguage -s hscript $_obj_pc_crowd_box1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_box1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_box1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_box1

# Node $_obj_pc_crowd_sphere1 (Sop/sphere)
set _obj_pc_crowd_sphere1 = `run("opadd -e -n -v sphere sphere1")`
oplocate -x `$arg2 + -9.9206599999999998` -y `$arg3 + -11.3622` $_obj_pc_crowd_sphere1
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_sphere1 rady
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_pc_crowd_sphere1/rady
chadd -t 0 0 $_obj_pc_crowd_sphere1 radz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_pc_crowd_sphere1/radz
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_sphere1 type ( poly ) rad ( 0.69999999999999996 rady radz ) t ( 0 1.6000000000000001 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_sphere1
opexprlanguage -s hscript $_obj_pc_crowd_sphere1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_sphere1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_sphere1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_sphere1

# Node $_obj_pc_crowd_merge1 (Sop/merge)
set _obj_pc_crowd_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -7.6420899999999996` -y `$arg3 + -13.053900000000001` $_obj_pc_crowd_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_merge1
opexprlanguage -s hscript $_obj_pc_crowd_merge1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_merge1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_merge1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_merge1

# Node $_obj_pc_crowd_copytopoints1 (Sop/copytopoints)
set _obj_pc_crowd_copytopoints1 = `run("opadd -e -n -v copytopoints copytopoints1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -15.309200000000001` $_obj_pc_crowd_copytopoints1
opparm -V 16.0.674 $_obj_pc_crowd_copytopoints1 setpt ( Cd ) mulpt ( "" ) addpt ( "" )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_copytopoints1
opexprlanguage -s hscript $_obj_pc_crowd_copytopoints1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_copytopoints1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_copytopoints1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_copytopoints1

# Node $_obj_pc_crowd_sphere2 (Sop/sphere)
set _obj_pc_crowd_sphere2 = `run("opadd -e -n -v sphere sphere2")`
oplocate -x `$arg2 + -8.1143300000000007` -y `$arg3 + -11.2661` $_obj_pc_crowd_sphere2
opparm -V 16.0.674 $_obj_pc_crowd_sphere2 type ( poly ) rad ( 0.10000000000000001 0.10000000000000001 0.29999999999999999 ) t ( 0 1.6000000000000001 0.69999999999999996 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_sphere2
opexprlanguage -s hscript $_obj_pc_crowd_sphere2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_sphere2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_sphere2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_sphere2

# Node $_obj_pc_crowd_sort1 (Sop/sort)
set _obj_pc_crowd_sort1 = `run("opadd -e -n -v sort sort1")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 0.848607` $_obj_pc_crowd_sort1
opparm -V 16.0.674 $_obj_pc_crowd_sort1 ptsort ( seed )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_pc_crowd_sort1
opexprlanguage -s hscript $_obj_pc_crowd_sort1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_sort1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_sort1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_sort1

# Node $_obj_pc_crowd_blast2 (Sop/blast)
set _obj_pc_crowd_blast2 = `run("opadd -e -n -v blast blast2")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 0.041596000000000001` $_obj_pc_crowd_blast2
opparm -V 16.0.674 $_obj_pc_crowd_blast2 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_pc_crowd_blast2
opexprlanguage -s hscript $_obj_pc_crowd_blast2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_blast2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_blast2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_blast2

# Node $_obj_pc_crowd_sort2 (Sop/sort)
set _obj_pc_crowd_sort2 = `run("opadd -e -n -v sort sort2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 0.848607` $_obj_pc_crowd_sort2
opparm -V 16.0.674 $_obj_pc_crowd_sort2 ptsort ( seed ) pointseed ( 82 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_pc_crowd_sort2
opexprlanguage -s hscript $_obj_pc_crowd_sort2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_sort2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_sort2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_sort2

# Node $_obj_pc_crowd_blast3 (Sop/blast)
set _obj_pc_crowd_blast3 = `run("opadd -e -n -v blast blast3")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 0.041596000000000001` $_obj_pc_crowd_blast3
opparm -V 16.0.674 $_obj_pc_crowd_blast3 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_pc_crowd_blast3
opexprlanguage -s hscript $_obj_pc_crowd_blast3
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_blast3
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_blast3
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_blast3

# Node $_obj_pc_crowd_facet1 (Sop/facet)
set _obj_pc_crowd_facet1 = `run("opadd -e -n -v facet facet1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 3.2336999999999998` $_obj_pc_crowd_facet1
opparm -V 16.0.674 $_obj_pc_crowd_facet1 postnml ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_facet1
opexprlanguage -s hscript $_obj_pc_crowd_facet1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_facet1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_facet1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_facet1

# Node $_obj_pc_crowd_blast1 (Sop/blast)
set _obj_pc_crowd_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 2.3395000000000001` $_obj_pc_crowd_blast1
opparm -V 16.0.674 $_obj_pc_crowd_blast1 group ( '15-16 20-21 24-25 46 48-52' ) grouptype ( prims ) removegrp ( on )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_blast1
opexprlanguage -s hscript $_obj_pc_crowd_blast1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_blast1
opuserdata -n '___toolcount___' -v '16' $_obj_pc_crowd_blast1
opuserdata -n '___toolid___' -v 'generic_delete' $_obj_pc_crowd_blast1

# Node $_obj_pc_crowd_Prev_Frame (Sop/dopimport)
set _obj_pc_crowd_Prev_Frame = `run("opadd -e -n -v dopimport Prev_Frame")`
oplocate -x `$arg2 + 15.170142936113171` -y `$arg3 + -6.1848953718962507` $_obj_pc_crowd_Prev_Frame
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_Prev_Frame doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_pc_crowd_Prev_Frame/doposxform
chadd -t 0 0 $_obj_pc_crowd_Prev_Frame doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_pc_crowd_Prev_Frame/doxform
chadd -t 0 0 $_obj_pc_crowd_Prev_Frame integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_pc_crowd_Prev_Frame/integrateovertime
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_Prev_Frame doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) singleobject ( on ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) centeratpivot ( off ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_Prev_Frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Prev_Frame
opexprlanguage -s hscript $_obj_pc_crowd_Prev_Frame
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Prev_Frame
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Prev_Frame
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Prev_Frame

# Node $_obj_pc_crowd_Input_1 (Sop/object_merge)
set _obj_pc_crowd_Input_1 = `run("opadd -e -n -v object_merge Input_1")`
oplocate -x `$arg2 + 17.410522936113171` -y `$arg3 + -5.9633353718962505` $_obj_pc_crowd_Input_1
opparm $_obj_pc_crowd_Input_1  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_Input_1 objpath1 ( '`opinputpath("../..", 0)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_pc_crowd_Input_1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Input_1
opexprlanguage -s hscript $_obj_pc_crowd_Input_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Input_1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Input_1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Input_1

# Node $_obj_pc_crowd_Input_2 (Sop/object_merge)
set _obj_pc_crowd_Input_2 = `run("opadd -e -n -v object_merge Input_2")`
oplocate -x `$arg2 + 19.003882936113271` -y `$arg3 + -6.5178653718962511` $_obj_pc_crowd_Input_2
opparm $_obj_pc_crowd_Input_2  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_Input_2 objpath1 ( '`opinputpath("../..", 1)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_pc_crowd_Input_2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Input_2
opexprlanguage -s hscript $_obj_pc_crowd_Input_2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Input_2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Input_2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Input_2

# Node $_obj_pc_crowd_Input_3 (Sop/object_merge)
set _obj_pc_crowd_Input_3 = `run("opadd -e -n -v object_merge Input_3")`
oplocate -x `$arg2 + 20.312632936113271` -y `$arg3 + -7.1333753718962507` $_obj_pc_crowd_Input_3
opparm $_obj_pc_crowd_Input_3  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_Input_3 objpath1 ( '`opinputpath("../..", 2)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_pc_crowd_Input_3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Input_3
opexprlanguage -s hscript $_obj_pc_crowd_Input_3
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Input_3
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Input_3
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Input_3

# Node $_obj_pc_crowd_Input_4 (Sop/object_merge)
set _obj_pc_crowd_Input_4 = `run("opadd -e -n -v object_merge Input_4")`
oplocate -x `$arg2 + 21.82468293611327` -y `$arg3 + -7.6878953718962508` $_obj_pc_crowd_Input_4
opparm $_obj_pc_crowd_Input_4  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_Input_4 objpath1 ( '`opinputpath("../..", 3)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_pc_crowd_Input_4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Input_4
opexprlanguage -s hscript $_obj_pc_crowd_Input_4
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Input_4
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Input_4
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Input_4

# Node $_obj_pc_crowd_switch1 (Sop/switch)
set _obj_pc_crowd_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 15.170142936113171` -y `$arg3 + -9.3446053718962503` $_obj_pc_crowd_switch1
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF==ch("../../../startframe")' $_obj_pc_crowd_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_switch1
opexprlanguage -s hscript $_obj_pc_crowd_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_switch1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_switch1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_switch1

# Node $_obj_pc_crowd_null2 (Sop/null)
set _obj_pc_crowd_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 19.851852936113271` -y `$arg3 + -13.59965537189615` $_obj_pc_crowd_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_null2
opexprlanguage -s hscript $_obj_pc_crowd_null2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_null2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_null2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_null2

# Node $_obj_pc_crowd_add1 (Sop/add)
set _obj_pc_crowd_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + -6.6666396917880615` -y `$arg3 + -6.3205350963386016` $_obj_pc_crowd_add1
opparm $_obj_pc_crowd_add1  points ( 1 ) prims ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_add1 stdswitcher ( 1 1 1 ) switcher ( 1 1 ) add ( attribute ) attrname ( id )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_add1
opexprlanguage -s hscript $_obj_pc_crowd_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_add1

# Node $_obj_pc_crowd_merge2 (Sop/merge)
set _obj_pc_crowd_merge2 = `run("opadd -e -n -v merge merge2")`
oplocate -x `$arg2 + -6.6677897038043579` -y `$arg3 + -4.5360900070497392` $_obj_pc_crowd_merge2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_merge2
opexprlanguage -s hscript $_obj_pc_crowd_merge2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_merge2
opcf $_obj_pc_crowd_DOP_sopsolver2

# Node $_obj_pc_crowd_DOP_sopsolver2_output (Dop/output)
set _obj_pc_crowd_DOP_sopsolver2_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + 0.11764705882352935` -y `$arg3 + -0.2450980392156864` $_obj_pc_crowd_DOP_sopsolver2_output
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_pc_crowd_DOP_sopsolver2_output/f1
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_pc_crowd_DOP_sopsolver2_output/f2
chblockend
opparm $_obj_pc_crowd_DOP_sopsolver2_output
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_output
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_output
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_output
opcf $_obj_pc_crowd_DOP_sopsolver2_sopsolver1

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry (Sop/dopimport)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry = `run("opadd -e -n -v dopimport dop_geometry")`
oplocate -x `$arg2 + 3.6318600000000001` -y `$arg3 + -1.8995500000000001` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry/doposxform
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry/doxform
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry/integrateovertime
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts (Sop/dopimportrecords)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts = `run("opadd -e -n -v dopimportrecords impacts")`
oplocate -x `$arg2 + 6.3931899999999997` -y `$arg3 + -1.8601000000000001` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Impacts ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks (Sop/dopimportrecords)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks = `run("opadd -e -n -v dopimportrecords feedbacks")`
oplocate -x `$arg2 + 8.6226900000000004` -y `$arg3 + -1.9601299999999999` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Feedback ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry (Sop/object_merge)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry = `run("opadd -e -n -v object_merge relationship_geometry")`
oplocate -x `$arg2 + 11.0848` -y `$arg3 + -1.89367` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opspareds '    group {  name    "folder0"       label   "Object Merge"          parm {      name        "xformtype"         baseparm        label       "Transform"         export      none    }       parm {      name        "xformpath"         baseparm        label       "Transform Object"          export      none    }       parm {      name        "invertxform"       baseparm        label       "Invert Transform"          export      none    }       parm {      name        "createptgroups"            baseparm        label       "Create Point Groups"       export      none    }       parm {      name        "ptgroupprefix"             baseparm        label       "Point Group Prefix"        export      none    }       parm {      name        "createprimgroups"          baseparm        label       "Create Primitive Groups"           export      none    }       parm {      name        "primgroupprefix"           baseparm        label       "Primitive Group Prefix"            export      none    }       parm {      name        "verbosegroups"             baseparm        label       "Verbose Group Names"       export      none    }       parm {      name        "createptstring"            baseparm        label       "Create Per-Point Path"             export      none    }       parm {      name        "createprimstring"          baseparm        label       "Create Per-Primitive Path"         export      none    }       parm {      name        "pathattrib"        baseparm        label       "Path Attribute"            export      none    }       parm {      name        "pack"      baseparm        label       "Pack Geometry Before Merging"      export      none    }       parm {      name        "pivot"             baseparm        label       "Pivot Location"            export      none    }       parm {      name        "viewportlod"       baseparm        label       "Display As"        export      none    }       parm {      name        "addpath"           baseparm        label       "Add Path Attribute"        export      none    }       parm {      name        "_separator"        baseparm        label       ""          export      none    }       multiparm {         name        "numobj"            label       "Number of Objects"         baseparm        default     1           parm {              name    "enable#"               baseparm                label   "Enable Merge #"                export  none        }       parm {              name    "objpath#"              baseparm                label   "Object #"              export  none        }       parm {              name    "group#"                baseparm                label   "Group #"               export  none        }       parm {              name    "expand#"               baseparm                label   "Expand Group #"                export  none        }   }      }      group {   name    "folder0_1"     label   "Custom Parameters"     parm {      name        "relnode"           label       "Relationship"      type        oppath      default     { "../.." }         range       { 0 1 }             parmtag     { "opfilter" "!!DOP!!" }            parmtag     { "oprelative" "." }    }     }      parm {     name    "suffixfirstgroup"      baseparm        label   "Add Suffix to First Group"     export  none     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry relnode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import toolutils\n\nnode = hou.node(".")\nsopsolver = hou.node("..")\n\n# Attempt to discover a constraint network that we\'re wired to.\nnodetypes = ["constraintnetwork", "gluenetworkconstraint", "springnetworkconstraint"]\nfor nodetype in nodetypes:\n    network = toolutils.findOutputNodeOfBaseType(sopsolver, nodetype)\n    if network:\n        return node.relativePathTo(network)\n\nreturn "../.."' -l p $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry/relnode
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry objpath1 ( '`stamps("..", "DATAPATH", chsop("relnode") + ":Relationships/" + chs(chsop("relnode") + "/relname") + "/" + chs(chsop("relnode") + "/relationship/dataname") + "/Geometry")`' ) folder0 ( 1 1 ) relnode ( relnode )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 (Sop/object_merge)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 = `run("opadd -e -n -v object_merge input_2")`
oplocate -x `$arg2 + 9.528583754195795` -y `$arg3 + -4.9069557783532654` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 xformtype ( local ) objpath1 ( '`opinputpath("../..",1)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 (Sop/switch)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 3.7591054268727939` -y `$arg3 + -10.010376113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF==ch("../../startframe")' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1/input
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2 (Sop/null)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 8.4407954268727945` -y `$arg3 + -14.265426113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1 (Sop/object_merge)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1 = `run("opadd -e -n -v object_merge input_1")`
oplocate -x `$arg2 + 6.3919399713897702` -y `$arg3 + -4.2437570171058079` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1 xformtype ( local ) objpath1 ( '`opinputpath("../..",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1
oporder -e dop_geometry impacts feedbacks relationship_geometry input_2 attribwrangle2 calc_new_v advect init_v add_v limit_v update_N update_up switch1 null2 input_1 
opcf ..

# Node $_obj_pc_crowd_DOP_sopsolver2_multisolver1 (Dop/multisolver)
set _obj_pc_crowd_DOP_sopsolver2_multisolver1 = `run("opadd -e -n -v multisolver multisolver1")`
oplocate -x `$arg2 + 0.11764705882352955` -y `$arg3 + 1.7213946647679776` $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_multisolver1

# Node $_obj_pc_crowd_DOP_sopsolver2_emptyobject1 (Dop/emptyobject)
set _obj_pc_crowd_DOP_sopsolver2_emptyobject1 = `run("opadd -e -n -v emptyobject emptyobject1")`
oplocate -x `$arg2 + -2.1559056521396434` -y `$arg3 + 4.4051475631031698` $_obj_pc_crowd_DOP_sopsolver2_emptyobject1
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_emptyobject1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$ST == 0' $_obj_pc_crowd_DOP_sopsolver2_emptyobject1/activation
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_emptyobject1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_emptyobject1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_emptyobject1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_emptyobject1

# Node $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 (Dop/sopgeo)
set _obj_pc_crowd_DOP_sopsolver2_sopgeo1 = `run("opadd -e -n -v sopgeo sopgeo1")`
oplocate -x `$arg2 + -2.1546556235294139` -y `$arg3 + 3.2373610513226003` $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
opparm $_obj_pc_crowd_DOP_sopsolver2_sopgeo1  numstamps ( 0 )
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_pc_crowd_DOP_sopsolver2_sopgeo1/time
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 transformtime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_pc_crowd_DOP_sopsolver2_sopgeo1/transformtime
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_pc_crowd_DOP_sopsolver2_sopgeo1/activation
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 soppath ( '`opinputpath("..",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
oporder -e output sopsolver1 multisolver1 emptyobject1 sopgeo1 
opcf ..

# Node $_obj_pc_crowd_dopimportfield1 (Sop/dopimportfield)
set _obj_pc_crowd_dopimportfield1 = `run("opadd -e -n -v dopimportfield dopimportfield1")`
oplocate -x `$arg2 + 3.1928022717649647` -y `$arg3 + -9.6959853296037526` $_obj_pc_crowd_dopimportfield1
opparm $_obj_pc_crowd_dopimportfield1  fields ( 1 ) attribute_numcasts ( 0 ) compression ( 0 )
opparm -V 1 $_obj_pc_crowd_dopimportfield1 doppath ( ../DOP_sopsolver2 ) dopnode ( ../DOP_sopsolver2/emptyobject1 ) fields ( 1 ) visible1 ( nochange ) fieldname1 ( Geometry )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_dopimportfield1
opexprlanguage -s hscript $_obj_pc_crowd_dopimportfield1
opuserdata -n '___Version___' -v '1' $_obj_pc_crowd_dopimportfield1
oporder -e grid1 mountain1 scatter1 scatter2 crt_targetP crt_source crt_terrain DOP_space_colonization_crowd scatter3 object_merge1 null1 attribwrangle1 box1 sphere1 merge1 copytopoints1 sphere2 sort1 blast2 sort2 blast3 facet1 blast1 attribwrangle2 calc_new_v advect init_v add_v limit_v update_N update_up Prev_Frame Input_1 Input_2 Input_3 Input_4 switch1 null2 add1 merge2 attribwrangle3 attribwrangle4 DOP_sopsolver2 dopimportfield1 
opcf ..
opset -p on $_obj_pc_crowd

opcf $arg1
opcf $_obj_pc_crowd
opwire -n $_obj_pc_crowd_grid1 -0 $_obj_pc_crowd_mountain1
opwire -n $_obj_pc_crowd_blast1 -0 $_obj_pc_crowd_scatter1
opwire -n $_obj_pc_crowd_blast3 -0 $_obj_pc_crowd_scatter2
opwire -n $_obj_pc_crowd_attribwrangle4 -0 $_obj_pc_crowd_crt_targetP
opwire -n $_obj_pc_crowd_attribwrangle3 -1 $_obj_pc_crowd_crt_targetP
opwire -n $_obj_pc_crowd_crt_targetP -0 $_obj_pc_crowd_crt_source
opwire -n $_obj_pc_crowd_scatter1 -0 $_obj_pc_crowd_crt_terrain
opwire -n $_obj_pc_crowd_crt_source -0 $_obj_pc_crowd_DOP_space_colonization_crowd
opwire -n $_obj_pc_crowd_crt_terrain -1 $_obj_pc_crowd_DOP_space_colonization_crowd
opwire -n $_obj_pc_crowd_blast2 -0 $_obj_pc_crowd_scatter3
opwire -n $_obj_pc_crowd_attribwrangle1 -0 $_obj_pc_crowd_null1
opwire -n $_obj_pc_crowd_DOP_space_colonization_crowd -0 $_obj_pc_crowd_attribwrangle1
opwire -n $_obj_pc_crowd_sphere1 -0 $_obj_pc_crowd_merge1
opwire -n $_obj_pc_crowd_box1 -1 $_obj_pc_crowd_merge1
opwire -n $_obj_pc_crowd_sphere2 -2 $_obj_pc_crowd_merge1
opwire -n $_obj_pc_crowd_merge1 -0 $_obj_pc_crowd_copytopoints1
opwire -n $_obj_pc_crowd_null1 -1 $_obj_pc_crowd_copytopoints1
opwire -n $_obj_pc_crowd_blast1 -0 $_obj_pc_crowd_sort1
opwire -n $_obj_pc_crowd_sort1 -0 $_obj_pc_crowd_blast2
opwire -n $_obj_pc_crowd_blast1 -0 $_obj_pc_crowd_sort2
opwire -n $_obj_pc_crowd_sort2 -0 $_obj_pc_crowd_blast3
opwire -n $_obj_pc_crowd_mountain1 -0 $_obj_pc_crowd_facet1
opwire -n $_obj_pc_crowd_facet1 -0 $_obj_pc_crowd_blast1
opwire -n $_obj_pc_crowd_Input_2 -0 $_obj_pc_crowd_attribwrangle2
opwire -n $_obj_pc_crowd_switch1 -1 $_obj_pc_crowd_attribwrangle2
opwire -n $_obj_pc_crowd_switch1 -0 $_obj_pc_crowd_calc_new_v
opwire -n $_obj_pc_crowd_attribwrangle2 -1 $_obj_pc_crowd_calc_new_v
opwire -n $_obj_pc_crowd_limit_v -0 $_obj_pc_crowd_advect
opwire -n $_obj_pc_crowd_Input_1 -0 $_obj_pc_crowd_init_v
opwire -n $_obj_pc_crowd_calc_new_v -0 $_obj_pc_crowd_add_v
opwire -n $_obj_pc_crowd_add_v -0 $_obj_pc_crowd_limit_v
opwire -n $_obj_pc_crowd_update_up -0 $_obj_pc_crowd_update_N
opwire -n $_obj_pc_crowd_advect -0 $_obj_pc_crowd_update_up
opwire -n $_obj_pc_crowd_Input_2 -1 $_obj_pc_crowd_update_up
opwire -n $_obj_pc_crowd_Prev_Frame -0 $_obj_pc_crowd_switch1
opwire -n $_obj_pc_crowd_init_v -1 $_obj_pc_crowd_switch1
opwire -n $_obj_pc_crowd_attribwrangle2 -0 $_obj_pc_crowd_null2
opwire -n $_obj_pc_crowd_merge2 -0 $_obj_pc_crowd_add1
opwire -n $_obj_pc_crowd_attribwrangle3 -0 $_obj_pc_crowd_merge2
opwire -n $_obj_pc_crowd_attribwrangle4 -1 $_obj_pc_crowd_merge2
opwire -n $_obj_pc_crowd_scatter3 -0 $_obj_pc_crowd_attribwrangle3
opwire -n $_obj_pc_crowd_scatter2 -0 $_obj_pc_crowd_attribwrangle4
opwire -n $_obj_pc_crowd_crt_source -0 $_obj_pc_crowd_DOP_sopsolver2
opwire -n $_obj_pc_crowd_crt_terrain -1 $_obj_pc_crowd_DOP_sopsolver2
opcf $_obj_pc_crowd_DOP_sopsolver2
opwire -n $_obj_pc_crowd_DOP_sopsolver2_multisolver1 -0 $_obj_pc_crowd_DOP_sopsolver2_output
opcf $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 -1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 -1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1 -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 -1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v -1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opcf ..
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 -0 $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1 -1 $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_emptyobject1 -0 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
opcf ..
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_pc_crowd
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_pc_crowd
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pt_trans_and_rotate_orient" label="pt_trans_and_rotate_orient" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient (Sop/attribvop)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient = `run("opadd -e -n -v attribvop pt_trans_and_rotate_orient")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "trans"         label   "Translate"     type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rot"   label   "Rotate"        type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opparm $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient  bindings ( 0 ) groupbindings ( 0 )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opcf $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 17.225200000000001` -y `$arg3 + 1.03518` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 17.081600000000002` -y `$arg3 + 4.2007099999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2 (Vop/bind)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 9.39405` -y `$arg3 + 4.0423499999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2 parmname ( orient ) parmtype ( float4 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1 (Vop/makexform)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1 = `run("opadd -e -n -v makexform makexform1")`
oplocate -x `$arg2 + 5.9452400000000001` -y `$arg3 + -4.3723999999999998` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1 (Vop/extractxform::2.0)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1 = `run("opadd -e -n -v extractxform::2.0 extractxform1")`
oplocate -x `$arg2 + 8.6840899999999994` -y `$arg3 + -2.9338799999999998` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1 (Vop/eulertoquat::2.0)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1 = `run("opadd -e -n -v eulertoquat::2.0 eulertoquat1")`
oplocate -x `$arg2 + 11.0473` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1 (Vop/add)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 13.974299999999999` -y `$arg3 + 0.88518300000000005` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans (Vop/parameter)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans = `run("opadd -e -n -v parameter trans")`
oplocate -x `$arg2 + 5.2987200000000003` -y `$arg3 + -1.3716699999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans parmname ( trans ) parmlabel ( Translate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e off -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot (Vop/parameter)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot = `run("opadd -e -n -v parameter rot")`
oplocate -x `$arg2 + 5.39872` -y `$arg3 + -1.5716699999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot parmname ( rot ) parmlabel ( Rotate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e off -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1 (Vop/qmultiply)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1 = `run("opadd -e -n -v qmultiply qmultiply1")`
oplocate -x `$arg2 + 13.2202` -y `$arg3 + 4.2007099999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opcf ..
opcf $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
oporder -e geometryvopglobal1 geometryvopoutput1 bind1 bind2 makexform1 extractxform1 eulertoquat1 add1 trans rot qmultiply1 
opcf ..
opset -p on $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient

opcf $arg1
opcf $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1 -0 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1 -0 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans -2 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot -3 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 -5 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 -2 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1 -3 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opwire -n -o 1 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1 -1 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1 -0 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 -1 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2 -0 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1 -1 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="align_orient2" label="align_orient2" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_align_orient2 (Sop/attribvop)
set _obj_fire01_FX_smoke_align_orient2 = `run("opadd -e -n -v attribvop align_orient2")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_align_orient2
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_fire01_FX_smoke_align_orient2
opparm $_obj_fire01_FX_smoke_align_orient2  bindings ( 0 ) groupbindings ( 0 )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_align_orient2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_align_orient2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_align_orient2
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2
opcf $_obj_fire01_FX_smoke_align_orient2

# Node $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_align_orient2_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_align_orient2_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 12.7424` -y `$arg3 + 1.25861` $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_align_orient2_align1 (Vop/align)
set _obj_fire01_FX_smoke_align_orient2_align1 = `run("opadd -e -n -v align align1")`
oplocate -x `$arg2 + 5.2007000000000003` -y `$arg3 + -0.021394799999999999` $_obj_fire01_FX_smoke_align_orient2_align1
opparm $_obj_fire01_FX_smoke_align_orient2_align1 from ( 0 0 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_align1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_align1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_align_orient2_align1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_align1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_align1

# Node $_obj_fire01_FX_smoke_align_orient2_matxtoquat1 (Vop/matxtoquat)
set _obj_fire01_FX_smoke_align_orient2_matxtoquat1 = `run("opadd -e -n -v matxtoquat matxtoquat1")`
oplocate -x `$arg2 + 7.8917099999999998` -y `$arg3 + -0.56757199999999997` $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_matxtoquat1

# Node $_obj_fire01_FX_smoke_align_orient2_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_align_orient2_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 11.057499999999999` -y `$arg3 + -1.2475700000000001` $_obj_fire01_FX_smoke_align_orient2_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_align_orient2_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_align_orient2_bind1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_bind1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_bind1
opcf ..
opcf $_obj_fire01_FX_smoke_align_orient2
oporder -e geometryvopglobal1 geometryvopoutput1 align1 matxtoquat1 bind1 
opcf ..
opset -p on $_obj_fire01_FX_smoke_align_orient2

opcf $arg1
opcf $_obj_fire01_FX_smoke_align_orient2
opwire -n -o 8 $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1 -1 $_obj_fire01_FX_smoke_align_orient2_align1
opwire -n $_obj_fire01_FX_smoke_align_orient2_align1 -0 $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opwire -n $_obj_fire01_FX_smoke_align_orient2_matxtoquat1 -0 $_obj_fire01_FX_smoke_align_orient2_bind1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_align_orient2
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_align_orient2
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pc_crowd_new" label="pc_crowd_new" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_crowd01_pc_crowd_new (Object/geo)
set _obj_crowd01_pc_crowd_new = `run("opadd -e -n -v geo pc_crowd_new")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_crowd01_pc_crowd_new
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "full" }          help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_crowd01_pc_crowd_new
opset -S on $_obj_crowd01_pc_crowd_new
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new use_dcolor ( off )
chautoscope $_obj_crowd01_pc_crowd_new +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_crowd01_pc_crowd_new
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new
opcf $_obj_crowd01_pc_crowd_new

# Node $_obj_crowd01_pc_crowd_new_mountain1 (Sop/mountain::2.0)
set _obj_crowd01_pc_crowd_new_mountain1 = `run("opadd -e -n -v mountain::2.0 mountain1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 5.9363200000000003` $_obj_crowd01_pc_crowd_new_mountain1
opparm $_obj_crowd01_pc_crowd_new_mountain1 height ( 21.600000000000001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_mountain1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_mountain1
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_mountain1
opuserdata -n '___toolcount___' -v '20' $_obj_crowd01_pc_crowd_new_mountain1
opuserdata -n '___toolid___' -v 'sop_mountain::2.0' $_obj_crowd01_pc_crowd_new_mountain1

# Node $_obj_crowd01_pc_crowd_new_crt_targetP (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_crt_targetP = `run("opadd -e -n -v attribwrangle crt_targetP")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -3.35127` $_obj_crowd01_pc_crowd_new_crt_targetP
opparm $_obj_crowd01_pc_crowd_new_crt_targetP  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_crt_targetP snippet ( 'v@targetP = v@opinput1_P;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_crt_targetP
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_crt_targetP
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_crt_targetP
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_crt_targetP
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_crt_targetP
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_crt_targetP

# Node $_obj_crowd01_pc_crowd_new_crt_source (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_crt_source = `run("opadd -e -n -v attribwrangle crt_source")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -4.5402399999999998` $_obj_crowd01_pc_crowd_new_crt_source
opparm $_obj_crowd01_pc_crowd_new_crt_source  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_crt_source snippet ( 'i@source=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_crt_source
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_crowd01_pc_crowd_new_crt_source
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_crt_source
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_crt_source
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_crt_source
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_crt_source

# Node $_obj_crowd01_pc_crowd_new_crt_terrain (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_crt_terrain = `run("opadd -e -n -v attribwrangle crt_terrain")`
oplocate -x `$arg2 + 0.244059` -y `$arg3 + -4.5402399999999998` $_obj_crowd01_pc_crowd_new_crt_terrain
opparm $_obj_crowd01_pc_crowd_new_crt_terrain  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_crt_terrain snippet ( 'i@terrain=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_crt_terrain
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_crowd01_pc_crowd_new_crt_terrain
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_crt_terrain
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_crt_terrain
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_crt_terrain
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_crt_terrain

# Node $_obj_crowd01_pc_crowd_new_attribwrangle1 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + -2.7330899999999998` -y `$arg3 + -10.4206` $_obj_crowd01_pc_crowd_new_attribwrangle1
opparm $_obj_crowd01_pc_crowd_new_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_attribwrangle1 snippet ( '@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_attribwrangle1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_crowd01_pc_crowd_new_attribwrangle1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_attribwrangle1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_attribwrangle1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_attribwrangle1

# Node $_obj_crowd01_pc_crowd_new_attribwrangle2 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 6.23841` -y `$arg3 + -2.93737` $_obj_crowd01_pc_crowd_new_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_attribwrangle2
opparm $_obj_crowd01_pc_crowd_new_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_attribwrangle2 snippet ( 'int nearPt= nearpoint(1,@P);\n\nfloat dist = distance(@P, point(1,"P",nearPt));\n\nif(dist < ch("rad"))\n{\n    @group_in = 1;\n    @Cd = set(1,0,0);\n}\n' ) rad ( 4 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_attribwrangle2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_attribwrangle2

# Node $_obj_crowd01_pc_crowd_new_attribwrangle3 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_attribwrangle3 = `run("opadd -e -n -v attribwrangle attribwrangle3")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -1.22357` $_obj_crowd01_pc_crowd_new_attribwrangle3
opparm $_obj_crowd01_pc_crowd_new_attribwrangle3  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_attribwrangle3 snippet ( '@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_attribwrangle3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_attribwrangle3
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_attribwrangle3

# Node $_obj_crowd01_pc_crowd_new_attribwrangle4 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + -5.49709` -y `$arg3 + -1.22357` $_obj_crowd01_pc_crowd_new_attribwrangle4
opparm $_obj_crowd01_pc_crowd_new_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_attribwrangle4 snippet ( '@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_attribwrangle4
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_attribwrangle4

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver (Sop/dopnet)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver = `run("opadd -e -n -v dopnet DOP_sopsolver")`
oplocate -x `$arg2 + 1.8413600000000001` -y `$arg3 + -8.2098999999999993` $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_crowd01_pc_crowd_new_DOP_sopsolver/timestep
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_crowd01_pc_crowd_new_DOP_sopsolver/timeoffset
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_DOP_sopsolver startframe
chkey -t 41.458333333333002 -v 1 -m 0 -a 0 -A 0 -T a  -F '$SHOT_START' $_obj_crowd01_pc_crowd_new_DOP_sopsolver/startframe
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver stdswitcher ( 1 1 1 ) startframe ( startframe ) objname1 ( * )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1 (Dop/sopsolver::2.0)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1 = `run("opadd -e -n -v sopsolver::2.0 sopsolver1")`
oplocate -x `$arg2 + 1.35425` -y `$arg3 + 2.10493` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1 solveinitframe ( on ) uniquedataname ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 14.541` -y `$arg3 + -20.275400000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "extra_overwrite_rad"   label   "Extra Overwrite Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2 snippet ( 'int pts[]= pcfind(1, "P", @P, ch("rad") + ch("extra_overwrite_rad"), chi("max_pts"));\n\nforeach(int pt; pts)\n{\n    vector nearP = point(1, "P",pt);\n    vector nearV = point(1, "v",pt);\n    if(distance(@P + nearV * @TimeInc, nearP)<ch("rad"))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n    else\n    {\n        @N = normalize((@P) - nearP + nearV * @TimeInc);\n    }\n}' ) rad ( 1.5 ) max_pts ( 1 ) extra_overwrite_rad ( 10 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v = `run("opadd -e -n -v attribwrangle calc_new_v")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -22.4163` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "dot"   label   "Dot"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_deg"       label   "Max Deg"       type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v snippet ( 'float dot = ch("dot");\nint handle = pcopen(@OpInput2, "P", @P + @v * @TimeInc, ch("rad"), chi("max_pts"));\n//"N", normalize(v@targetP - @P), \n//,"ndot",dot\n\nint num = pcnumfound(handle);\nvector filterP;\n\nif(num > 0)\n{\n    int nearest=0;\n    \n    if(1)\n    filterP = pcfilter(handle, "P");\n    \n    vector avoidDir = normalize(filterP - @P);\n    \n    dot = dot(avoidDir, normalize(@v));\n    vector cross = normalize(cross(avoidDir, normalize(@v)));\n    float maxRad = radians(ch("max_deg"));\n    \n    acos(dot);\n    \n    @v = avoidDir * length(@v);\n    v@aaaa = cross;\n    //v@up = filterN;\n}\n\n\n' ) rad ( 6 ) max_pts ( 150 ) dot ( -0.5 ) max_deg ( 40 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -27.532599999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect snippet ( 'if(distance(v@targetP, @P) > length(@v * @TimeInc))\n{\n    @P += @v * @TimeInc;\n}\nelse\n{\n    @Cd = set(1,0,0);\n}\n\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v = `run("opadd -e -n -v attribwrangle init_v")`
oplocate -x `$arg2 + 5.1067900000000002` -y `$arg3 + -10.5482` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spped"         label   "Spped"         type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v snippet ( 'if(length(@v) == 0)\n{\n    @v += normalize(v@targetP - @P) * ch("spped");\n}' ) spped ( 0.5 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v = `run("opadd -e -n -v attribwrangle add_v")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -25.289300000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "add_speed"     label   "Add Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v snippet ( '@v += normalize(@v) * ch("add_speed");' ) add_speed ( 0.20000000000000001 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v = `run("opadd -e -n -v attribwrangle limit_v")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -26.367100000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "max_speed"     label   "Max Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v snippet ( 'if(length(@v) > ch("max_speed"))\n{\n    @v = normalize(@v) * ch("max_speed");\n}' ) max_speed ( 3 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N = `run("opadd -e -n -v attribwrangle update_N")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -30.118400000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N snippet ( 'if(length(@v)>0)@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up = `run("opadd -e -n -v attribwrangle update_up")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -28.685099999999998` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up snippet ( 'int near = nearpoint(1,@P);\n\n@up = point(1,"N",near);' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP = `run("opadd -e -n -v attribwrangle update_targetP")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -9.5852799999999991` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP snippet ( 'v@targetP = v@opinput1_targetP;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3 = `run("opadd -e -n -v attribwrangle attribwrangle3")`
oplocate -x `$arg2 + 9.7042999999999999` -y `$arg3 + -13.690099999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3 snippet ( 'int nearPt= nearpoint(1,@P);\n\nfloat dist = distance(@P, point(1,"P",nearPt));\n\nif(dist < ch("rad"))\n{\n    @group_in = 1;\n    @Cd = set(1,0,0);\n}\n' ) rad ( 5 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + 9.7042999999999999` -y `$arg3 + -20.9712` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "dist"  label   "Dist"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "target_dist"   label   "Target Dist"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "overall_dist"  label   "Overall Dist"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "target_rad"    label   "Target Rad"    type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 dist
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../attribwrangle3/rad")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4/dist
chblockend
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 snippet ( 'int nearPt= nearpoint(1,@P);\n\nvector nearP = point(1, "P", nearPt);\nvector nearV = point(1, "v", nearPt);\nvector nearTargetP = point(1, "targetP", nearPt);\ni@nearest = nearPt;\n\nfloat dist = distance(@P, nearP + nearV * @TimeInc*4);\n\nfloat dotV = dot(normalize(nearV), normalize(@P - nearP));\nfloat dotTarget = dot(normalize(nearTargetP - nearP), normalize(@P - nearP));\n\nif((dist < ch("dist") && dotV > ch("rad")) || (dist < ch("target_dist") && dotTarget > ch("target_rad")) || dist < ch("overall_dist"))\n{\n    \n}\nelse removepoint(geoself(),@ptnum);' ) rad ( 0.5 ) dist ( dist ) target_dist ( 5 ) overall_dist ( 2 ) target_rad ( 0.80000000000000004 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 = `run("opadd -e -n -v attribwrangle attribwrangle5")`
oplocate -x `$arg2 + 7.3249700000000004` -y `$arg3 + -21.623999999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "min_dist"      label   "Min Dist"      type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_dist"      label   "Max Dist"      type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "remap_dist"    label   "Remap Dist"    type    ramp_flt        default { "2" }         range   { 1! 10 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5  bindings ( 0 ) groupbindings ( 0 ) remap_dist ( 3 )
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 rad
chkey -t 41.458333333333002 -v 1.5 -m 0 -a 0 -A 0 -T a  -F 'ch("../attribwrangle3/rad")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5/rad
chblockend
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 snippet ( 'int nearPt= nearpoint(1,@P);\n\nvector nearP = point(1, "P", nearPt);\nvector nearV = point(1, "v", nearPt);\ni@nearest = nearPt;\n\nfloat dist = distance(@P, nearP );//+ nearV * @TimeInc\ndist = fit(dist, ch("min_dist"), ch("max_dist"),1,0);\ndist = chramp("remap_dist", dist);\n\nfloat rand = rand((@ptnum + 1.3) * 1.2);\n\n\nif(dist>rand)\n{\n    removepoint(geoself(),@ptnum);\n}\n' ) rad ( rad ) min_dist ( 1 ) max_dist ( 5 ) remap_dist ( 3 ) remap_dist1interp ( bspline ) remap_dist2pos ( 0.68907564878463745 ) remap_dist2interp ( bspline ) remap_dist3pos ( 1 ) remap_dist3value ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opcf ..
opcf ..
opcf ..
opcf $_obj_crowd01_pc_crowd_new

# Node $_obj_crowd01_pc_crowd_new_grid1 (Sop/grid)
set _obj_crowd01_pc_crowd_new_grid1 = `run("opadd -e -n -v grid grid1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 7.05396` $_obj_crowd01_pc_crowd_new_grid1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_grid1 cols
chkey -t 41.458333333333002 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("rows")' $_obj_crowd01_pc_crowd_new_grid1/cols
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_grid1 size ( 50 50 ) cols ( cols )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_grid1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_grid1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_grid1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_grid1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_grid1

# Node $_obj_crowd01_pc_crowd_new_scatter1 (Sop/scatter::2.0)
set _obj_crowd01_pc_crowd_new_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + -0.86833400000000005` $_obj_crowd01_pc_crowd_new_scatter1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_scatter1 densityscale ( 15 ) forcetotal ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_scatter1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_scatter1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_scatter1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_scatter1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_scatter1

# Node $_obj_crowd01_pc_crowd_new_scatter2 (Sop/scatter::2.0)
set _obj_crowd01_pc_crowd_new_scatter2 = `run("opadd -e -n -v scatter::2.0 scatter2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + -0.0712676` $_obj_crowd01_pc_crowd_new_scatter2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_scatter2 npts ( 20 ) seed ( 7.9100000000000001 ) relaxpoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_scatter2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_scatter2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_scatter2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_scatter2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_scatter2

# Node $_obj_crowd01_pc_crowd_new_scatter3 (Sop/scatter::2.0)
set _obj_crowd01_pc_crowd_new_scatter3 = `run("opadd -e -n -v scatter::2.0 scatter3")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + -0.0712676` $_obj_crowd01_pc_crowd_new_scatter3
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_scatter3 npts
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../scatter2/npts")' $_obj_crowd01_pc_crowd_new_scatter3/npts
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_scatter3 npts ( npts ) seed ( 0.29999999999999999 ) relaxiterations ( 5 ) maxradius ( 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_scatter3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_scatter3
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_scatter3
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_scatter3
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_scatter3

# Node $_obj_crowd01_pc_crowd_new_object_merge1 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + 7.91465` -y `$arg3 + -8.2083499999999994` $_obj_crowd01_pc_crowd_new_object_merge1
opparm $_obj_crowd01_pc_crowd_new_object_merge1  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_object_merge1 xformtype ( local ) objpath1 ( ../DOP_space_colonization_crowd/d/s/null2/ )
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_object_merge1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_object_merge1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_object_merge1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_object_merge1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_object_merge1

# Node $_obj_crowd01_pc_crowd_new_null1 (Sop/null)
set _obj_crowd01_pc_crowd_new_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -11.5685` $_obj_crowd01_pc_crowd_new_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_null1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_null1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_null1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_null1

# Node $_obj_crowd01_pc_crowd_new_box1 (Sop/box)
set _obj_crowd01_pc_crowd_new_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + -6.5566199999999997` -y `$arg3 + -11.3622` $_obj_crowd01_pc_crowd_new_box1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_box1 size ( 1 1 0.59999999999999998 ) t ( 0 0.5 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_box1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_box1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_box1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_box1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_box1

# Node $_obj_crowd01_pc_crowd_new_sphere1 (Sop/sphere)
set _obj_crowd01_pc_crowd_new_sphere1 = `run("opadd -e -n -v sphere sphere1")`
oplocate -x `$arg2 + -9.9206599999999998` -y `$arg3 + -11.3622` $_obj_crowd01_pc_crowd_new_sphere1
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_sphere1 rady
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_crowd01_pc_crowd_new_sphere1/rady
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_sphere1 radz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_crowd01_pc_crowd_new_sphere1/radz
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sphere1 type ( poly ) rad ( 0.69999999999999996 rady radz ) t ( 0 1.6000000000000001 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_sphere1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sphere1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sphere1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_sphere1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_sphere1

# Node $_obj_crowd01_pc_crowd_new_merge1 (Sop/merge)
set _obj_crowd01_pc_crowd_new_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -7.6420899999999996` -y `$arg3 + -13.053900000000001` $_obj_crowd01_pc_crowd_new_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_merge1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_merge1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_merge1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_merge1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_merge1

# Node $_obj_crowd01_pc_crowd_new_copytopoints1 (Sop/copytopoints)
set _obj_crowd01_pc_crowd_new_copytopoints1 = `run("opadd -e -n -v copytopoints copytopoints1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -15.309200000000001` $_obj_crowd01_pc_crowd_new_copytopoints1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_copytopoints1 setpt ( Cd ) mulpt ( "" ) addpt ( "" )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_copytopoints1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_copytopoints1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_copytopoints1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_copytopoints1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_copytopoints1

# Node $_obj_crowd01_pc_crowd_new_sphere2 (Sop/sphere)
set _obj_crowd01_pc_crowd_new_sphere2 = `run("opadd -e -n -v sphere sphere2")`
oplocate -x `$arg2 + -8.1143300000000007` -y `$arg3 + -11.2661` $_obj_crowd01_pc_crowd_new_sphere2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sphere2 type ( poly ) rad ( 0.10000000000000001 0.10000000000000001 0.29999999999999999 ) t ( 0 1.6000000000000001 0.69999999999999996 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_sphere2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sphere2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sphere2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_sphere2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_sphere2

# Node $_obj_crowd01_pc_crowd_new_sort1 (Sop/sort)
set _obj_crowd01_pc_crowd_new_sort1 = `run("opadd -e -n -v sort sort1")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 2.3908499999999999` $_obj_crowd01_pc_crowd_new_sort1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sort1 ptsort ( seed )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_sort1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sort1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sort1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_sort1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_sort1

# Node $_obj_crowd01_pc_crowd_new_blast2 (Sop/blast)
set _obj_crowd01_pc_crowd_new_blast2 = `run("opadd -e -n -v blast blast2")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 1.5838399999999999` $_obj_crowd01_pc_crowd_new_blast2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_blast2 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_blast2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_blast2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_blast2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_blast2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_blast2

# Node $_obj_crowd01_pc_crowd_new_sort2 (Sop/sort)
set _obj_crowd01_pc_crowd_new_sort2 = `run("opadd -e -n -v sort sort2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 2.3908499999999999` $_obj_crowd01_pc_crowd_new_sort2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sort2 ptsort ( seed ) pointseed ( 82 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_sort2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sort2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sort2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_sort2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_sort2

# Node $_obj_crowd01_pc_crowd_new_blast3 (Sop/blast)
set _obj_crowd01_pc_crowd_new_blast3 = `run("opadd -e -n -v blast blast3")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 1.5838399999999999` $_obj_crowd01_pc_crowd_new_blast3
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_blast3 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_blast3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_blast3
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_blast3
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_blast3
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_blast3

# Node $_obj_crowd01_pc_crowd_new_facet1 (Sop/facet)
set _obj_crowd01_pc_crowd_new_facet1 = `run("opadd -e -n -v facet facet1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 4.7759400000000003` $_obj_crowd01_pc_crowd_new_facet1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_facet1 postnml ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_facet1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_facet1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_facet1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_facet1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_facet1

# Node $_obj_crowd01_pc_crowd_new_blast1 (Sop/blast)
set _obj_crowd01_pc_crowd_new_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 3.8817400000000002` $_obj_crowd01_pc_crowd_new_blast1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_blast1 group ( '15-16 20-21 24-25 46 48-52' ) grouptype ( prims ) removegrp ( on )
opset -d off -r off -h on -f on -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_blast1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_blast1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_blast1
opuserdata -n '___toolcount___' -v '16' $_obj_crowd01_pc_crowd_new_blast1
opuserdata -n '___toolid___' -v 'generic_delete' $_obj_crowd01_pc_crowd_new_blast1

# Node $_obj_crowd01_pc_crowd_new_sphere3 (Sop/sphere)
set _obj_crowd01_pc_crowd_new_sphere3 = `run("opadd -e -n -v sphere sphere3")`
oplocate -x `$arg2 + 10.035600000000001` -y `$arg3 + -1.4748300000000001` $_obj_crowd01_pc_crowd_new_sphere3
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sphere3 type ( poly ) rad ( 3 3 3 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_sphere3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sphere3
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sphere3

# Node $_obj_crowd01_pc_crowd_new_copytopoints2 (Sop/copytopoints)
set _obj_crowd01_pc_crowd_new_copytopoints2 = `run("opadd -e -n -v copytopoints copytopoints2")`
oplocate -x `$arg2 + 10.035600000000001` -y `$arg3 + -2.5537200000000002` $_obj_crowd01_pc_crowd_new_copytopoints2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_copytopoints2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_copytopoints2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_copytopoints2

# Node $_obj_crowd01_pc_crowd_new_boolean1 (Sop/boolean::2.0)
set _obj_crowd01_pc_crowd_new_boolean1 = `run("opadd -e -n -v boolean::2.0 boolean1")`
oplocate -x `$arg2 + 8.4181500000000007` -y `$arg3 + -4.2632000000000003` $_obj_crowd01_pc_crowd_new_boolean1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_boolean1 asurface ( surface ) booleanop ( intersect ) removeinlinepoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_boolean1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_boolean1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_boolean1

# Node $_obj_crowd01_pc_crowd_new_grouppromote1 (Sop/grouppromote)
set _obj_crowd01_pc_crowd_new_grouppromote1 = `run("opadd -e -n -v grouppromote grouppromote1")`
oplocate -x `$arg2 + 6.2414100000000001` -y `$arg3 + -3.7894899999999998` $_obj_crowd01_pc_crowd_new_grouppromote1
opparm $_obj_crowd01_pc_crowd_new_grouppromote1  promotions ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_grouppromote1 totype1 ( prims ) group1 ( in )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_grouppromote1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_grouppromote1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_grouppromote1

# Node $_obj_crowd01_pc_crowd_new_blast4 (Sop/blast)
set _obj_crowd01_pc_crowd_new_blast4 = `run("opadd -e -n -v blast blast4")`
oplocate -x `$arg2 + 6.2414100000000001` -y `$arg3 + -5.1421200000000002` $_obj_crowd01_pc_crowd_new_blast4
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_blast4 group ( in ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_blast4
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_blast4
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_blast4

# Node $_obj_crowd01_pc_crowd_new_divide1 (Sop/divide)
set _obj_crowd01_pc_crowd_new_divide1 = `run("opadd -e -n -v divide divide1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 3.0912000000000002` $_obj_crowd01_pc_crowd_new_divide1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_divide1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_divide1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_divide1

# Node $_obj_crowd01_pc_crowd_new_add1 (Sop/add)
set _obj_crowd01_pc_crowd_new_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + -9.3115400000000008` -y `$arg3 + -4.3426900000000002` $_obj_crowd01_pc_crowd_new_add1
opparm $_obj_crowd01_pc_crowd_new_add1  points ( 1 ) prims ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_add1 stdswitcher ( 1 1 1 ) switcher ( 1 1 ) add ( attribute ) attrname ( id )
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_add1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_add1

# Node $_obj_crowd01_pc_crowd_new_merge2 (Sop/merge)
set _obj_crowd01_pc_crowd_new_merge2 = `run("opadd -e -n -v merge merge2")`
oplocate -x `$arg2 + -9.3126899999999999` -y `$arg3 + -3.3471199999999999` $_obj_crowd01_pc_crowd_new_merge2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_merge2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_merge2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_merge2
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output (Dop/output)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + -0.37176500000000001` -y `$arg3 + -0.78360799999999997` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output/f1
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output/f2
chblockend
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1 (Dop/emptyobject)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1 = `run("opadd -e -n -v emptyobject emptyobject1")`
oplocate -x `$arg2 + -2.6352899999999999` -y `$arg3 + 3.1990500000000002` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$ST == 0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1/activation
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 (Dop/sopgeo)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 = `run("opadd -e -n -v sopgeo sopgeo1")`
oplocate -x `$arg2 + -2.6340400000000002` -y `$arg3 + 2.10493` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1  numstamps ( 0 )
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1/time
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 transformtime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1/transformtime
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1/activation
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 soppath ( '`opinputpath("..",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry (Sop/dopimport)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry = `run("opadd -e -n -v dopimport dop_geometry")`
oplocate -x `$arg2 + 3.6318600000000001` -y `$arg3 + -1.8995500000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry/doposxform
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry/doxform
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry/integrateovertime
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts (Sop/dopimportrecords)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts = `run("opadd -e -n -v dopimportrecords impacts")`
oplocate -x `$arg2 + 6.3931899999999997` -y `$arg3 + -1.8601000000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Impacts ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks (Sop/dopimportrecords)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks = `run("opadd -e -n -v dopimportrecords feedbacks")`
oplocate -x `$arg2 + 8.6226900000000004` -y `$arg3 + -1.9601299999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Feedback ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry = `run("opadd -e -n -v object_merge relationship_geometry")`
oplocate -x `$arg2 + 11.0848` -y `$arg3 + -1.89367` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opspareds '    group {  name    "folder0"       label   "Object Merge"          parm {      name        "xformtype"         baseparm        label       "Transform"         export      none    }       parm {      name        "xformpath"         baseparm        label       "Transform Object"          export      none    }       parm {      name        "invertxform"       baseparm        label       "Invert Transform"          export      none    }       parm {      name        "createptgroups"            baseparm        label       "Create Point Groups"       export      none    }       parm {      name        "ptgroupprefix"             baseparm        label       "Point Group Prefix"        export      none    }       parm {      name        "createprimgroups"          baseparm        label       "Create Primitive Groups"           export      none    }       parm {      name        "primgroupprefix"           baseparm        label       "Primitive Group Prefix"            export      none    }       parm {      name        "verbosegroups"             baseparm        label       "Verbose Group Names"       export      none    }       parm {      name        "createptstring"            baseparm        label       "Create Per-Point Path"             export      none    }       parm {      name        "createprimstring"          baseparm        label       "Create Per-Primitive Path"         export      none    }       parm {      name        "pathattrib"        baseparm        label       "Path Attribute"            export      none    }       parm {      name        "pack"      baseparm        label       "Pack Geometry Before Merging"      export      none    }       parm {      name        "pivot"             baseparm        label       "Pivot Location"            export      none    }       parm {      name        "viewportlod"       baseparm        label       "Display As"        export      none    }       parm {      name        "addpath"           baseparm        label       "Add Path Attribute"        export      none    }       parm {      name        "_separator"        baseparm        label       ""          export      none    }       multiparm {         name        "numobj"            label       "Number of Objects"         baseparm        default     1           parm {              name    "enable#"               baseparm                label   "Enable Merge #"                export  none        }       parm {              name    "objpath#"              baseparm                label   "Object #"              export  none        }       parm {              name    "group#"                baseparm                label   "Group #"               export  none        }       parm {              name    "expand#"               baseparm                label   "Expand Group #"                export  none        }   }      }      group {   name    "folder0_1"     label   "Custom Parameters"     parm {      name        "relnode"           label       "Relationship"      type        oppath      default     { "../.." }         range       { 0 1 }             parmtag     { "opfilter" "!!DOP!!" }            parmtag     { "oprelative" "." }    }     }      parm {     name    "suffixfirstgroup"      baseparm        label   "Add Suffix to First Group"     export  none     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry relnode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import toolutils\n\nnode = hou.node(".")\nsopsolver = hou.node("..")\n\n# Attempt to discover a constraint network that we\'re wired to.\nnodetypes = ["constraintnetwork", "gluenetworkconstraint", "springnetworkconstraint"]\nfor nodetype in nodetypes:\n    network = toolutils.findOutputNodeOfBaseType(sopsolver, nodetype)\n    if network:\n        return node.relativePathTo(network)\n\nreturn "../.."' -l p $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry/relnode
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry objpath1 ( '`stamps("..", "DATAPATH", chsop("relnode") + ":Relationships/" + chs(chsop("relnode") + "/relname") + "/" + chs(chsop("relnode") + "/relationship/dataname") + "/Geometry")`' ) folder0 ( 1 1 ) relnode ( relnode )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 = `run("opadd -e -n -v object_merge IN_0")`
oplocate -x `$arg2 + 6.6320499999999996` -y `$arg3 + -3.9689399999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 = `run("opadd -e -n -v object_merge IN_1")`
oplocate -x `$arg2 + 8.4219600000000003` -y `$arg3 + -4.8520899999999996` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2 = `run("opadd -e -n -v object_merge IN_2")`
oplocate -x `$arg2 + 9.9533299999999993` -y `$arg3 + -5.6324899999999998` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3 = `run("opadd -e -n -v object_merge IN_3")`
oplocate -x `$arg2 + 11.4337` -y `$arg3 + -6.4168000000000003` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1 (Sop/switch)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -11.9916` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF==ch("../../startframe")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2 (Sop/null)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 9.7073` -y `$arg3 + -23.635999999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1 (Sop/grouppromote)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1 = `run("opadd -e -n -v grouppromote grouppromote1")`
oplocate -x `$arg2 + 9.7073` -y `$arg3 + -14.542299999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1  promotions ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1 totype1 ( prims ) group1 ( in )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4 (Sop/blast)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4 = `run("opadd -e -n -v blast blast4")`
oplocate -x `$arg2 + 9.7073` -y `$arg3 + -15.4161` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4 group ( in ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 (Sop/scatter::2.0)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 9.7073` -y `$arg3 + -16.416499999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 densityscale
chkey -t 41.458333333333002 -v 5 -m 0 -a 0 -A 0 -T a  -F 15/2 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1/densityscale
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 densityscale ( densityscale ) forcetotal ( off ) relaxiterations ( 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1 (Sop/block_end)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 2.8697599999999999` -y `$arg3 + -23.634599999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1 itermethod ( pieces ) method ( merge ) useattrib ( off ) attrib ( name ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 (Sop/block_begin)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 2.8697599999999999` -y `$arg3 + -17.9649` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 method ( input ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count (Sop/null)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count = `run("opadd -e -n -v null OUT_count")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -13.1248` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 (Sop/block_begin)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 = `run("opadd -e -n -v block_begin foreach_begin2")`
oplocate -x `$arg2 + 9.7088999999999999` -y `$arg3 + -17.9649` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 method ( input ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 (Sop/blast)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -19.700500000000002` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 group ( '`detail("../foreach_begin1_metadata1/","iteration",0)`' ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1 (Sop/block_begin)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1 = `run("opadd -e -n -v block_begin foreach_begin1_metadata1")`
oplocate -x `$arg2 + 7.0339999999999998` -y `$arg3 + -17.9649` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1 method ( metadata ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5 (Sop/blast)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5 = `run("opadd -e -n -v blast blast5")`
oplocate -x `$arg2 + 7.3279699999999997` -y `$arg3 + -19.700500000000002` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5 group ( '`detail("../foreach_begin1_metadata1/","iteration",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
oporder -e dop_geometry impacts feedbacks relationship_geometry IN_0 IN_1 IN_2 IN_3 attribwrangle2 calc_new_v advect init_v add_v limit_v update_N update_up update_targetP attribwrangle3 attribwrangle4 attribwrangle5 switch1 null2 grouppromote1 blast4 scatter1 foreach_end1 foreach_begin1 OUT_count foreach_begin2 blast1 foreach_begin1_metadata1 blast5 
opcf ..

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1 (Dop/multisolver)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1 = `run("opadd -e -n -v multisolver multisolver1")`
oplocate -x `$arg2 + -0.37176500000000001` -y `$arg3 + 0.34681499999999998` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
oporder -e output emptyobject1 sopgeo1 sopsolver1 multisolver1 
opcf ..

# Node $_obj_crowd01_pc_crowd_new_dopimport1 (Sop/dopimport)
set _obj_crowd01_pc_crowd_new_dopimport1 = `run("opadd -e -n -v dopimport dopimport1")`
oplocate -x `$arg2 + 1.8413600000000001` -y `$arg3 + -9.8164099999999994` $_obj_crowd01_pc_crowd_new_dopimport1
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_dopimport1 integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_crowd01_pc_crowd_new_dopimport1/integrateovertime
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_dopimport1 doppath ( ../DOP_sopsolver ) objpattern ( '`dopobjscreatedby("../DOP_sopsolver/emptyobject1/")`' ) importstyle ( fetch ) geodatapath ( Geometry )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_dopimport1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_dopimport1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_dopimport1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_dopimport1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_dopimport1
oporder -e grid1 mountain1 scatter1 scatter2 crt_targetP crt_source crt_terrain scatter3 object_merge1 null1 attribwrangle1 box1 sphere1 merge1 copytopoints1 sphere2 sort1 blast2 sort2 blast3 facet1 blast1 sphere3 copytopoints2 boolean1 attribwrangle2 grouppromote1 blast4 divide1 add1 merge2 attribwrangle3 attribwrangle4 DOP_sopsolver dopimport1 
opcf ..
opset -p on $_obj_crowd01_pc_crowd_new

opcf $arg1
opcf $_obj_crowd01_pc_crowd_new
opwire -n $_obj_crowd01_pc_crowd_new_grid1 -0 $_obj_crowd01_pc_crowd_new_mountain1
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_scatter1
opwire -n $_obj_crowd01_pc_crowd_new_blast3 -0 $_obj_crowd01_pc_crowd_new_scatter2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle3 -0 $_obj_crowd01_pc_crowd_new_crt_targetP
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle4 -1 $_obj_crowd01_pc_crowd_new_crt_targetP
opwire -n $_obj_crowd01_pc_crowd_new_crt_targetP -0 $_obj_crowd01_pc_crowd_new_crt_source
opwire -n $_obj_crowd01_pc_crowd_new_scatter1 -0 $_obj_crowd01_pc_crowd_new_crt_terrain
opwire -n $_obj_crowd01_pc_crowd_new_blast2 -0 $_obj_crowd01_pc_crowd_new_scatter3
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle1 -0 $_obj_crowd01_pc_crowd_new_null1
opwire -n $_obj_crowd01_pc_crowd_new_dopimport1 -0 $_obj_crowd01_pc_crowd_new_attribwrangle1
opwire -n $_obj_crowd01_pc_crowd_new_sphere1 -0 $_obj_crowd01_pc_crowd_new_merge1
opwire -n $_obj_crowd01_pc_crowd_new_box1 -1 $_obj_crowd01_pc_crowd_new_merge1
opwire -n $_obj_crowd01_pc_crowd_new_sphere2 -2 $_obj_crowd01_pc_crowd_new_merge1
opwire -n $_obj_crowd01_pc_crowd_new_merge1 -0 $_obj_crowd01_pc_crowd_new_copytopoints1
opwire -n $_obj_crowd01_pc_crowd_new_null1 -1 $_obj_crowd01_pc_crowd_new_copytopoints1
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_sort1
opwire -n $_obj_crowd01_pc_crowd_new_sort1 -0 $_obj_crowd01_pc_crowd_new_blast2
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_sort2
opwire -n $_obj_crowd01_pc_crowd_new_sort2 -0 $_obj_crowd01_pc_crowd_new_blast3
opwire -n $_obj_crowd01_pc_crowd_new_mountain1 -0 $_obj_crowd01_pc_crowd_new_facet1
opwire -n $_obj_crowd01_pc_crowd_new_facet1 -0 $_obj_crowd01_pc_crowd_new_blast1
opwire -n $_obj_crowd01_pc_crowd_new_sphere3 -0 $_obj_crowd01_pc_crowd_new_copytopoints2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle3 -1 $_obj_crowd01_pc_crowd_new_copytopoints2
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_boolean1
opwire -n $_obj_crowd01_pc_crowd_new_copytopoints2 -1 $_obj_crowd01_pc_crowd_new_boolean1
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_attribwrangle2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle3 -1 $_obj_crowd01_pc_crowd_new_attribwrangle2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle2 -0 $_obj_crowd01_pc_crowd_new_grouppromote1
opwire -n $_obj_crowd01_pc_crowd_new_grouppromote1 -0 $_obj_crowd01_pc_crowd_new_blast4
opwire -n $_obj_crowd01_pc_crowd_new_blast1 -0 $_obj_crowd01_pc_crowd_new_divide1
opwire -n $_obj_crowd01_pc_crowd_new_merge2 -0 $_obj_crowd01_pc_crowd_new_add1
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle4 -0 $_obj_crowd01_pc_crowd_new_merge2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle3 -1 $_obj_crowd01_pc_crowd_new_merge2
opwire -n $_obj_crowd01_pc_crowd_new_scatter2 -0 $_obj_crowd01_pc_crowd_new_attribwrangle3
opwire -n $_obj_crowd01_pc_crowd_new_scatter3 -0 $_obj_crowd01_pc_crowd_new_attribwrangle4
opwire -n $_obj_crowd01_pc_crowd_new_crt_source -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opwire -n $_obj_crowd01_pc_crowd_new_crt_terrain -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
opcf ..
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opcf ..
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_crowd01_pc_crowd_new
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_crowd01_pc_crowd_new
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="crt_partId" label="crt_partId" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_crt_partId (Sop/attribwrangle)
set _obj_fire01_FX_smoke_crt_partId = `run("opadd -e -n -v attribwrangle crt_partId")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_crt_partId
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      multiparm {        name    "folder2"       label   "Folder Name"   default 0       parm {      name        "partId#"           label       "partId"            type        integer             default     { "0" }             range       { 0 10 }        }       parm {      name        "probability#"      label       "probability"       type        float       default     { "0" }             range       { 0 10 }        }     }      parm {     name    "seed"  label   "Seed"  type    float   default { "0" }         range   { 0 1 }     } ' $_obj_fire01_FX_smoke_crt_partId
opparm $_obj_fire01_FX_smoke_crt_partId  bindings ( 0 ) groupbindings ( 0 ) folder2 ( 5 )
opparm $_obj_fire01_FX_smoke_crt_partId snippet ( 'i@partId = 11609;\n\nfloat sum=0;\n\nfor(int i = 0; i < ch("folder2"); i++)\n{\n    sum += ch("probability" + itoa(i + 1));\n}\n\nfloat rand = rand((i@id + ch("seed")+0.21) + (ch("seed")));\nrand = fit01(rand, 0, sum);\n\n\nsum = 0;\nfor(int i = 0; i < ch("folder2"); i++)\n{\n    sum += ch("probability" + itoa(i + 1));\n    if(rand<sum)\n    {\n        i@partId = chi("partId" + itoa(i + 1));\n        break;\n    }\n}' ) folder2 ( 5 ) seed ( 0.16500000000000001 ) partId1 ( 11609 ) probability1 ( 1 ) partId2 ( 90393 ) probability2 ( 1 ) partId3 ( 56750 ) probability3 ( 1 ) partId4 ( 85861 ) partId5 ( 30222 ) probability5 ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_fire01_FX_smoke_crt_partId
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_crt_partId
opexprlanguage -s hscript $_obj_fire01_FX_smoke_crt_partId
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_crt_partId
opuserdata -n '___toolcount___' -v '518' $_obj_fire01_FX_smoke_crt_partId
opuserdata -n '___toolid___' -v 'attribwrangle5' $_obj_fire01_FX_smoke_crt_partId
opset -p on $_obj_fire01_FX_smoke_crt_partId

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_crt_partId
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_crt_partId
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="nonP_trans" label="nonP_trans" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_nonP_trans (Sop/subnet)
set _obj_fire01_FX_smoke_nonP_trans = `run("opadd -e -n -v subnet nonP_trans")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_nonP_trans
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  all     }     multiparm {       name    "folder0"       label   "Folder Name"   parm {      name        "pt#"       label       "pt"        type        integer             default     { "0" }             range       { 0 10 }        }       parm {      name        "trans_#"           label       "trans"             type        vector      size        3           default     { "0" "0" "0" }             range       { -1 1 }        }       parm {      name        "rotate0_#"         label       "rotate0"           type        vector      size        3           default     { "0" "0" "0" }             range       { -1 1 }        }       parm {      name        "rotate1_#"         label       "rotate1"           type        vector      size        3           default     { "0" "0" "0" }             range       { -1 1 }        }     }  ' $_obj_fire01_FX_smoke_nonP_trans
opparm $_obj_fire01_FX_smoke_nonP_trans  folder0 ( 0 )
opcolor -c 0.86699998378753662 0 0 $_obj_fire01_FX_smoke_nonP_trans
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans
opcf $_obj_fire01_FX_smoke_nonP_trans

# Node $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 (Sop/legoBrickGLVisualiser)
set _obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 = `run("opadd -e -n -v legoBrickGLVisualiser legoBrickGLVisualiser1")`
oplocate -x `$arg2 + 4.1903300000000003` -y `$arg3 + -20.913` $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
chblockbegin
chadd -t 0 0 $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 FX_Bricklib
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -F 'chs("legoBricklibSwitch1/IN_FX_BRICKLIB/file")' $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1/FX_Bricklib
chblockend
opparm -V 0034 $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 FX_Bricklib ( FX_Bricklib )
chlock $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 +FX_Bricklib
chautoscope $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 +FX_Bricklib
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opuserdata -n '___Version___' -v '0034' $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 (Sop/attribvop)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 = `run("opadd -e -n -v attribvop pt_trans_and_rotate14")`
oplocate -x `$arg2 + -0.0034500099999999999` -y `$arg3 + 1.85633` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "trans"         label   "Translate"     type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rot"   label   "Rotate"        type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "iter"  label   "iter"  type    string  default { "" }     } ' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opparm $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 trans1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trans_" + chs("iter") + "x")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/trans1
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 trans2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trans_" + chs("iter") + "y")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/trans2
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 trans3
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trans_" + chs("iter") + "z")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/trans3
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 rot1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate0_" + chs("iter") + "x")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/rot1
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 rot2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate0_" + chs("iter") + "y")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/rot2
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 rot3
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate0_" + chs("iter") + "z")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/rot3
chblockend
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 bindgroup ( '`chs("../pt" + chs("iter"))`' ) trans ( trans1 trans2 trans3 ) rot ( rot1 rot2 rot3 ) iter ( '`detail("../foreach_begin1_metadata1/","iteration",0) + 1`' )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opcf $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 17.225200000000001` -y `$arg3 + 1.7904899999999999` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 13.334199999999999` -y `$arg3 + 1.0355700000000001` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 5.9452400000000001` -y `$arg3 + 1.7904899999999999` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2 parmname ( orient ) parmtype ( float4 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1 (Vop/makexform)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1 = `run("opadd -e -n -v makexform makexform1")`
oplocate -x `$arg2 + 7.5664699999999998` -y `$arg3 + -4.5031800000000004` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1 (Vop/extractxform::2.0)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1 = `run("opadd -e -n -v extractxform::2.0 extractxform1")`
oplocate -x `$arg2 + 10.684699999999999` -y `$arg3 + -2.6688800000000001` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1 (Vop/eulertoquat::2.0)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1 = `run("opadd -e -n -v eulertoquat::2.0 eulertoquat1")`
oplocate -x `$arg2 + 13.6358` -y `$arg3 + -3.0838800000000002` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1 (Vop/add)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 14.832800000000001` -y `$arg3 + -0.71978299999999995` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans (Vop/parameter)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans = `run("opadd -e -n -v parameter trans")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + -3.9138799999999998` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans parmname ( trans ) parmlabel ( Translate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot (Vop/parameter)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot = `run("opadd -e -n -v parameter rot")`
oplocate -x `$arg2 + 1.4482699999999999` -y `$arg3 + -6.4089600000000004` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot parmname ( rot ) parmlabel ( Rotate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1 (Vop/qmultiply)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1 = `run("opadd -e -n -v qmultiply qmultiply1")`
oplocate -x `$arg2 + 9.7713400000000004` -y `$arg3 + 1.94885` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1 (Vop/degtorad)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 3.9608400000000001` -y `$arg3 + -6.1089599999999997` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opparm $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1 signature ( v )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opcf ..

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 (Sop/attribvop)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2 = `run("opadd -e -n -v attribvop 2nd_trans2")`
oplocate -x `$arg2 + -0.0034500099999999999` -y `$arg3 + 0.50878599999999996` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "trans"         label   "Translate"     type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rot"   label   "Rotate"        type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "iter"  label   "iter"  type    string  default { "" }     } ' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opparm $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 rot1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate1_" + chs("iter") + "x")' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2/rot1
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 rot2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate1_" + chs("iter") + "y")' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2/rot2
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 rot3
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate1_" + chs("iter") + "z")' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2/rot3
chblockend
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 bindgroup ( '`chs("../pt_trans_and_rotate14/bindgroup")`' ) rot ( rot1 rot2 rot3 ) iter ( '`chs("../pt_trans_and_rotate14/iter")`' )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opcf $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 17.225200000000001` -y `$arg3 + 1.7904899999999999` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 13.334199999999999` -y `$arg3 + 1.0355700000000001` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 5.9452400000000001` -y `$arg3 + 1.7904899999999999` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2 parmname ( orient ) parmtype ( float4 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1 (Vop/makexform)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1 = `run("opadd -e -n -v makexform makexform1")`
oplocate -x `$arg2 + 7.5664699999999998` -y `$arg3 + -4.5031800000000004` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1 (Vop/extractxform::2.0)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1 = `run("opadd -e -n -v extractxform::2.0 extractxform1")`
oplocate -x `$arg2 + 10.684699999999999` -y `$arg3 + -2.6688800000000001` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1 (Vop/eulertoquat::2.0)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1 = `run("opadd -e -n -v eulertoquat::2.0 eulertoquat1")`
oplocate -x `$arg2 + 13.6358` -y `$arg3 + -3.0838800000000002` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1 (Vop/add)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 14.832800000000001` -y `$arg3 + -0.71978299999999995` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans (Vop/parameter)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans = `run("opadd -e -n -v parameter trans")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + -3.9138799999999998` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans parmname ( trans ) parmlabel ( Translate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot (Vop/parameter)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot = `run("opadd -e -n -v parameter rot")`
oplocate -x `$arg2 + 1.4482699999999999` -y `$arg3 + -6.4089600000000004` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot parmname ( rot ) parmlabel ( Rotate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1 (Vop/qmultiply)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1 = `run("opadd -e -n -v qmultiply qmultiply1")`
oplocate -x `$arg2 + 9.7713400000000004` -y `$arg3 + 1.94885` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1 (Vop/degtorad)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 3.9608400000000001` -y `$arg3 + -6.1089599999999997` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opparm $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1 signature ( v )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opcf ..

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges (Sop/attribvop)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges = `run("opadd -e -n -v attribvop rotate_edges")`
oplocate -x `$arg2 + 0.036249999999999998` -y `$arg3 + -18.939` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opparm $_obj_fire01_FX_smoke_nonP_trans_rotate_edges  bindings ( 0 ) groupbindings ( 0 )
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges bindgroup ( edge )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opcf $_obj_fire01_FX_smoke_nonP_trans_rotate_edges

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 16.875900000000001` -y `$arg3 + 2.6859299999999999` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1 (Vop/align)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1 = `run("opadd -e -n -v align align1")`
oplocate -x `$arg2 + 7.6954799999999999` -y `$arg3 + -0.016334899999999999` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opparm $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1 from ( 0 0 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 14.0059` -y `$arg3 + -0.82432499999999997` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1 (Vop/matxtoquat)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1 = `run("opadd -e -n -v matxtoquat matxtoquat1")`
oplocate -x `$arg2 + 11.096299999999999` -y `$arg3 + -0.35891699999999999` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1 (Vop/snippet)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1 = `run("opadd -e -n -v snippet snippet1")`
oplocate -x `$arg2 + 4.9865899999999996` -y `$arg3 + 0.60204599999999997` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opparm $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1  namenum ( 1 )
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1 code ( 'p.y=0;' ) namenum ( 1 ) name1 ( p )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opcf ..
opcf ..
opcf $_obj_fire01_FX_smoke_nonP_trans

# Node $_obj_fire01_FX_smoke_nonP_trans_transform5 (Sop/xform)
set _obj_fire01_FX_smoke_nonP_trans_transform5 = `run("opadd -e -n -v xform transform5")`
oplocate -x `$arg2 + 0.039699999999999999` -y `$arg3 + -18.004200000000001` $_obj_fire01_FX_smoke_nonP_trans_transform5
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_transform5 tx
chkey -t 41.458333333333002 -v -8.5999999999999996 -m 0 -a 0 -A 0 -T a  -F '-$CEX' $_obj_fire01_FX_smoke_nonP_trans_transform5/tx
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_transform5 tz
chkey -t 41.458333333333002 -v 43 -m 0 -a 0 -A 0 -T a  -F '-$CEZ' $_obj_fire01_FX_smoke_nonP_trans_transform5/tz
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_transform5
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_transform5
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_transform5
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_transform5
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_transform5

# Node $_obj_fire01_FX_smoke_nonP_trans_output1 (Sop/output)
set _obj_fire01_FX_smoke_nonP_trans_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 0.039699999999999999` -y `$arg3 + -22.525600000000001` $_obj_fire01_FX_smoke_nonP_trans_output1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_output1 outputidx
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'max(opdigits(".")-1,0)' $_obj_fire01_FX_smoke_nonP_trans_output1/outputidx
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_output1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_output1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_output1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_output1
opcf $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
oporder -e geometryvopglobal1 geometryvopoutput1 bind1 bind2 makexform1 extractxform1 eulertoquat1 add1 trans rot qmultiply1 degtorad1 
opcf ..
opcf $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
oporder -e geometryvopglobal1 geometryvopoutput1 bind1 bind2 makexform1 extractxform1 eulertoquat1 add1 trans rot qmultiply1 degtorad1 
opcf ..
opcf $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
oporder -e geometryvopglobal1 geometryvopoutput1 align1 bind1 matxtoquat1 snippet1 
opcf ..

# Node $_obj_fire01_FX_smoke_nonP_trans_foreach_end1 (Sop/block_end)
set _obj_fire01_FX_smoke_nonP_trans_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + -0.92333200000000004` $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_foreach_end1 iterations
chkey -t 41.458333333333002 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../folder0")' $_obj_fire01_FX_smoke_nonP_trans_foreach_end1/iterations
chblockend
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_foreach_end1 itermethod ( count ) iterations ( iterations ) attrib ( name ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 ) multithread ( on )
opcolor -c 0.75 0.40000000596046448 0 $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_foreach_end1

# Node $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1 (Sop/block_begin)
set _obj_fire01_FX_smoke_nonP_trans_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + 3.3923000000000001` $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1 blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1

# Node $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1 (Sop/block_begin)
set _obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1 = `run("opadd -e -n -v block_begin foreach_begin1_metadata1")`
oplocate -x `$arg2 + 3.0015999999999998` -y `$arg3 + 3.3923000000000001` $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1 method ( metadata ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
oporder -e transform5 output1 legoBrickGLVisualiser1 pt_trans_and_rotate14 2nd_trans2 rotate_edges foreach_end1 foreach_begin1 foreach_begin1_metadata1 
opcf ..
opset -p on $_obj_fire01_FX_smoke_nonP_trans

opcf $arg1
opcf $_obj_fire01_FX_smoke_nonP_trans
opwire -n $_obj_fire01_FX_smoke_nonP_trans_foreach_end1 -0 $_obj_fire01_FX_smoke_nonP_trans_transform5
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges -0 $_obj_fire01_FX_smoke_nonP_trans_output1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges -0 $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opcf $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans -2 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1 -3 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 -5 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 -2 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1 -3 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opwire -n -o 1 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1 -1 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 -1 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2 -1 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opcf ..
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opcf $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans -2 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1 -3 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 -5 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 -2 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1 -3 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opwire -n -o 1 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1 -1 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 -1 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2 -1 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opcf ..
opwire -n $_obj_fire01_FX_smoke_nonP_trans_transform5 -0 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opcf $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1 -1 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1 -0 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1 -0 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1 -0 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opcf ..
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 -0 $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opwire -n -i 0 -0 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_nonP_trans
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_nonP_trans
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pick_up_atr_val_is_1" label="pick_up_atr_val_is_1" icon="SOP_python">
    <helpURL>operator:Sop/python</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/python</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('python'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_pick_up_atr_val_is_1 (Sop/python)
set _obj_fire01_FX_smoke_pick_up_atr_val_is_1 = `run("opadd -e -n -v python pick_up_atr_val_is_1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opspareds '    parm {   name    "python"        baseparm        label   "Python Code"   export  none     }     parm {   name    "search_attribute_name"         label   "search_attribute_name"         type    string  default { "" }     } ' $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pick_up_atr_val_is_1 python ( 'node = hou.pwd()\ngeo = node.geometry()\n\n# Add code to modify contents of geo.\n# Use drop down menu to select examples.\n\n\n\natrs = [atr for atr in geo.pointAttribs() if atr.name().find(node.parm("search_attribute_name").eval()) != -1]\n#print atrs\npts = []\n\nfor pt in geo.points():\n    delPt = True\n    for atr in atrs:\n        if pt.attribValue(atr) == 1:\n            delPt = False\n            break\n    if delPt == True:\n        pts.append(pt)\n        \n        \ngeo.deletePoints(pts)\n        ' ) search_attribute_name ( group_explosion )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opuserdata -n '___toolcount___' -v '512' $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opuserdata -n '___toolid___' -v 'python0' $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opset -p on $_obj_fire01_FX_smoke_pick_up_atr_val_is_1

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet5" label="Capture_kinect" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_Capture_kinect (Sop/subnet)
set _obj_geo1_Capture_kinect = `run("opadd -e -n -v subnet Capture_kinect")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_Capture_kinect
opspareds '    parm { 	name	"label1" 	baseparm 	label	"Input #1 Label" 	invisible 	export	all     }     parm { 	name	"label2" 	baseparm 	label	"Input #2 Label" 	invisible 	export	all     }     parm { 	name	"label3" 	baseparm 	label	"Input #3 Label" 	invisible 	export	all     }     parm { 	name	"label4" 	baseparm 	label	"Input #4 Label" 	invisible 	export	all     }     parm { 	name	"capture" 	label	"capture" 	type	toggle 	default	{ "0" } 	range	{ 0! 10 } 	parmtag	{ "autoscope" "0000000000000000" }     }     parm { 	name	"flip" 	label	"flip" 	type	toggle 	default	{ "0" }     }     parm { 	name	"scale" 	label	"scale" 	type	float 	default	{ "0.001" } 	range	{ 0 1 } 	parmtag	{ "autoscope" "0000000000000000" }     } ' $_obj_geo1_Capture_kinect
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_Capture_kinect
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_Capture_kinect
opexprlanguage -s hscript $_obj_geo1_Capture_kinect
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_Capture_kinect
opuserdata -n '___toolid___' -v 'subnet5' $_obj_geo1_Capture_kinect
opcf $_obj_geo1_Capture_kinect

# Node $_obj_geo1_Capture_kinect_attribwrangle1 (Sop/attribwrangle)
set _obj_geo1_Capture_kinect_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + -0.90038693771361999` -y `$arg3 + 0.72062300908309995` $_obj_geo1_Capture_kinect_attribwrangle1
opspareds '    group { 	name	"folder1" 	label	"Code"  	parm { 	    name	"group" 	    baseparm 	    label	"Group" 	    export	none 	    bindselector points "Modify Points" 	        "Select the points to affect and press Enter to complete." 	        0 1 0xffffffff 0 grouptype 0 	} 	parm { 	    name	"grouptype" 	    baseparm 	    label	"Group Type" 	    export	none 	} 	parm { 	    name	"class" 	    baseparm 	    label	"Run Over" 	    export	none 	} 	parm { 	    name	"vex_numcount" 	    baseparm 	    label	"Number Count" 	    export	none 	} 	parm { 	    name	"vex_threadjobsize" 	    baseparm 	    label	"Thread Job Size" 	    export	none 	} 	parm { 	    name	"snippet" 	    baseparm 	    label	"VEXpression" 	    export	all 	} 	parm { 	    name	"exportlist" 	    baseparm 	    label	"Attributes to Create" 	    export	none 	} 	parm { 	    name	"vex_strict" 	    baseparm 	    label	"Enforce Prototypes" 	    export	none 	}     }      group { 	name	"folder1_1" 	label	"Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	} 	parm { 	    name	"vex_inplace" 	    baseparm 	    label	"Compute Results In Place" 	    export	none 	} 	parm { 	    name	"vex_selectiongroup" 	    baseparm 	    label	"Output Selection Group" 	    export	none 	}     }      parm { 	name	"div" 	label	"Div" 	type	float 	default	{ "0" } 	range	{ 0 1 }     } ' $_obj_geo1_Capture_kinect_attribwrangle1
opparm $_obj_geo1_Capture_kinect_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_Capture_kinect_attribwrangle1 div
chkey -t 0 -v 1000 -m 0 -a 0 -A 0 -T a  -F 'ch("../scale")' $_obj_geo1_Capture_kinect_attribwrangle1/div
chblockend
opparm $_obj_geo1_Capture_kinect_attribwrangle1 snippet ( '@P.y = @P.y*ch("div");' ) div ( div )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_Capture_kinect_attribwrangle1
opexprlanguage -s hscript $_obj_geo1_Capture_kinect_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_geo1_Capture_kinect_attribwrangle1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_Capture_kinect_attribwrangle1
opuserdata -n '___toolid___' -v 'subnet5' $_obj_geo1_Capture_kinect_attribwrangle1
opcf ..
opcf $_obj_geo1_Capture_kinect

# Node $_obj_geo1_Capture_kinect_grid1 (Sop/grid)
set _obj_geo1_Capture_kinect_grid1 = `run("opadd -e -n -v grid grid1")`
oplocate -x `$arg2 + -2.45597794118` -y `$arg3 + 5.2302102869651002` $_obj_geo1_Capture_kinect_grid1
chblockbegin
chadd -t 0 0 $_obj_geo1_Capture_kinect_grid1 sizex
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 10/424*512 $_obj_geo1_Capture_kinect_grid1/sizex
chblockend
opparm -V 16.0.705 $_obj_geo1_Capture_kinect_grid1 size ( sizex 10 ) rows ( 424 ) cols ( 512 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_Capture_kinect_grid1
opexprlanguage -s hscript $_obj_geo1_Capture_kinect_grid1
opuserdata -n '___Version___' -v '16.0.705' $_obj_geo1_Capture_kinect_grid1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_Capture_kinect_grid1
opuserdata -n '___toolid___' -v 'subnet5' $_obj_geo1_Capture_kinect_grid1

# Node $_obj_geo1_Capture_kinect_python1 (Sop/python)
set _obj_geo1_Capture_kinect_python1 = `run("opadd -e -n -v python python1")`
oplocate -x `$arg2 + -0.89738694117999995` -y `$arg3 + 3.5699792869651001` $_obj_geo1_Capture_kinect_python1
opparm -V 16.0.705 $_obj_geo1_Capture_kinect_python1 python ( 'import hou\nimport toolutils\n\nimport socket\nimport time\n\n##########\n# 424 * 512 = 217,088\n##########\n\n\nclass tcp():\n    def __init__(self, geo):\n        self.geo = geo\n        pass\n\n    def onConnectClicked(self):\n        host=\'127.0.0.1\'\n        port = 8889\n\n        self.receivedData = []\n\n        self.serversock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.serversock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n        self.serversock.bind((host,port))\n        self.serversock.listen(1)\n\n        self.recvThread = TcpThread(self, self.serversock, self.geo)\n\n\n    def onDisconnectClicked(self):\n        print "disconnect"\n        self.serversock.close()\n\n    def onCaptureDataClicked(self):\n        self.receivedData\n\n\n    def convertData(data):\n        valsStr = data.split(",")[0:-1]\n        valsInt = []\n        length = len(valsStr)\n        for i in range(0,length - 1):\n            valsInt[i] = int(valsStr[i])\n\n        return valsInt\n\n\n\n\n\nfrom threading import Thread\n\nclass TcpThread(Thread):\n\n    sendToHou =\'\'\n\n    def __init__(self, parent, sock, geo):\n        Thread.__init__(self)\n        self.sock =sock\n        self.parent = parent\n        self.geo = geo\n\n        self.setDaemon(True)\n        self.start()\n\n    def run(self):\n        print (\'Waiting for connections...\')\n        clientsock, client_address = self.sock.accept()\n        print ("accept")\n        msg = bytearray()\n        count = 0\n\n        while True:\n            \n            data = clientsock.recv(4096)\n            \n            if not data:\n                break\n            #print str(\'Received -> %s\' % (data))\n            if "fin" in str(data):\n                msg += data\n                #print (str(data)),\n                self.sendToHou = msg\n                if count %20 == 0:\n                    self.applyData()\n                msg = bytearray()\n            else:\n                msg += data\n                pass\n\n            count+=1\n\n        try:\n            self.socket.shutdown(socket.SHUT_RDWR)\n        except:\n            pass\n\n        print ("end")\n        self.sock.close()\n        #print (len(str(self.sendToHou)))\n        print ("done %d", count)\n\n\n    def applyData(self):\n        valsInt = self.convertData(str(self.sendToHou))\n        #self.parent.receivedData = valsInt\n\n        count = 0\n        for pt in geo.points():\n            pos = pt.position()\n            pt.setPosition(hou.Vector3((pos.x(), valsInt[count], pos.z())))\n            count += 1\n        \n        hou.node("/obj/geo1/Capture_kinect/transform1").cook(True)\n\n\n    def convertData(self, data):\n        valsStr = data.split(",")[0:-1]\n        length = len(valsStr)\n        print (length)\n        valsInt = []\n        for i in range(0, length):\n            valsInt.append(float(valsStr[i]))\n\n        return valsInt\n\nglobal geo\nglobal node\n\nnode = hou.pwd()\ngeo = node.geometry()\n\ntcp = tcp(geo)\ntcp.onConnectClicked()\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_Capture_kinect_python1
opexprlanguage -s hscript $_obj_geo1_Capture_kinect_python1
opuserdata -n '___Version___' -v '16.0.705' $_obj_geo1_Capture_kinect_python1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_Capture_kinect_python1
opuserdata -n '___toolid___' -v 'subnet5' $_obj_geo1_Capture_kinect_python1

# Node $_obj_geo1_Capture_kinect_switch1 (Sop/switch)
set _obj_geo1_Capture_kinect_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + -2.4559779377136` -y `$arg3 + -0.57125699091689996` $_obj_geo1_Capture_kinect_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_Capture_kinect_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../capture")' $_obj_geo1_Capture_kinect_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_Capture_kinect_switch1
opexprlanguage -s hscript $_obj_geo1_Capture_kinect_switch1
opuserdata -n '___Version___' -v '16.0.705' $_obj_geo1_Capture_kinect_switch1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_Capture_kinect_switch1
opuserdata -n '___toolid___' -v 'subnet5' $_obj_geo1_Capture_kinect_switch1

# Node $_obj_geo1_Capture_kinect_output1 (Sop/output)
set _obj_geo1_Capture_kinect_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -2.4559779284004` -y `$arg3 + -2.0971668391381999` $_obj_geo1_Capture_kinect_output1
chblockbegin
chadd -t 0 0 $_obj_geo1_Capture_kinect_output1 outputidx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'max(opdigits(".")-1,0)' $_obj_geo1_Capture_kinect_output1/outputidx
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_Capture_kinect_output1
opexprlanguage -s hscript $_obj_geo1_Capture_kinect_output1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_Capture_kinect_output1
opuserdata -n '___toolid___' -v 'subnet5' $_obj_geo1_Capture_kinect_output1

# Node $_obj_geo1_Capture_kinect_transform1 (Sop/xform)
set _obj_geo1_Capture_kinect_transform1 = `run("opadd -e -n -v xform transform1")`
oplocate -x `$arg2 + -0.89738694117999995` -y `$arg3 + 2.0633103422746002` $_obj_geo1_Capture_kinect_transform1
chblockbegin
chadd -t 0 0 $_obj_geo1_Capture_kinect_transform1 rz
chkey -t 0 -v 180 -m 0 -a 0 -A 0 -T a  -F 'if(ch("../flip"),0,180)' $_obj_geo1_Capture_kinect_transform1/rz
chblockend
opparm -V 16.0.705 $_obj_geo1_Capture_kinect_transform1 r ( 0 0 rz )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_Capture_kinect_transform1
opexprlanguage -s hscript $_obj_geo1_Capture_kinect_transform1
oporder -e attribwrangle1 grid1 python1 switch1 output1 transform1 
opcf ..
opset -p on $_obj_geo1_Capture_kinect

opcf $arg1
opcf $_obj_geo1_Capture_kinect
opwire -n $_obj_geo1_Capture_kinect_transform1 -0 $_obj_geo1_Capture_kinect_attribwrangle1
opwire -n $_obj_geo1_Capture_kinect_grid1 -0 $_obj_geo1_Capture_kinect_python1
opwire -n $_obj_geo1_Capture_kinect_grid1 -0 $_obj_geo1_Capture_kinect_switch1
opwire -n $_obj_geo1_Capture_kinect_attribwrangle1 -1 $_obj_geo1_Capture_kinect_switch1
opwire -n $_obj_geo1_Capture_kinect_switch1 -0 $_obj_geo1_Capture_kinect_output1
opwire -n $_obj_geo1_Capture_kinect_python1 -0 $_obj_geo1_Capture_kinect_transform1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_Capture_kinect
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_Capture_kinect
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
