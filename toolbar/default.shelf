<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="kaTools" label="kaTools">
    <memberTool name="connect"/>
    <memberTool name="disconnectOutputNodes"/>
    <memberTool name="gotToCam"/>
    <memberTool name="changeUpdateMode"/>
    <memberTool name="add_event_when_created"/>
    <memberTool name="sanity_check"/>
    <memberTool name="copyRamp"/>
    <memberTool name="colorize"/>
    <memberTool name="jumpTpDependency"/>
    <memberTool name="recursiveReferenceCopy"/>
    <memberTool name="subnet"/>
    <memberTool name="attribvop"/>
    <memberTool name="attribvop0"/>
    <memberTool name="uv_fixer"/>
    <memberTool name="subnet0"/>
    <memberTool name="subnet1"/>
    <memberTool name="subnet2"/>
  </toolshelf>

  <tool name="add_event_when_created" label="add_event_when_created" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import eventCallBack

eventCallBack.execute(hou.node("/"))]]></script>
  </tool>

  <tool name="sanity_check" label="sanity_check" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import sanityCheck

sanityCheck.execute(hou.node("/"))]]></script>
  </tool>

  <tool name="connect" label="Connect" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import connectNodes

connectNodes.execute()]]></script>
  </tool>

  <tool name="subnet" label="remesh_for_deforming_geo" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Monday October 03, 20:31 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_sphere_remesh_for_deforming_geo (Sop/subnet)
set _obj_sphere_remesh_for_deforming_geo = `run("opadd -e -n -v subnet remesh_for_deforming_geo")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_sphere_remesh_for_deforming_geo
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  dialog     }     parm {         name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  dialog     }     parm {         name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  dialog     }     parm {         name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  dialog     }     parm {         name    "remesh_frame"  label   "remesh_frame"  type    float   default { "1" }         range   { 0 10 }        export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "target_edge"   label   "Target Edge Length"    type    float   default { "0.03" }      range   { 0.001! 1 }    export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_sphere_remesh_for_deforming_geo
opcolor -c 0.86699998378753662 0 0 $_obj_sphere_remesh_for_deforming_geo
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo
opcf $_obj_sphere_remesh_for_deforming_geo

# Node $_obj_sphere_remesh_for_deforming_geo_remesh1 (Sop/remesh)
set _obj_sphere_remesh_for_deforming_geo_remesh1 = `run("opadd -e -n -v remesh remesh1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.4905300000000001` $_obj_sphere_remesh_for_deforming_geo_remesh1
opparm $_obj_sphere_remesh_for_deforming_geo_remesh1  lfs_ramp ( 2 )
chblockbegin
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_remesh1 target_edge
chkey -t 0 -v 0.029999999999999999 -m 0 -a 0 -A 0 -T a  -F 'ch("../target_edge")' $_obj_sphere_remesh_for_deforming_geo_remesh1/target_edge
chblockend
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_remesh1 target_edge ( target_edge ) lfs_ramp1c ( 0 0 1 ) lfs_ramp2pos ( 1 ) lfs_ramp2c ( 1 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_remesh1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_remesh1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_remesh1

# Node $_obj_sphere_remesh_for_deforming_geo_timeshift1 (Sop/timeshift)
set _obj_sphere_remesh_for_deforming_geo_timeshift1 = `run("opadd -e -n -v timeshift timeshift1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_sphere_remesh_for_deforming_geo_timeshift1
chblockbegin
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 frame
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../remesh_frame")' $_obj_sphere_remesh_for_deforming_geo_timeshift1/frame
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_sphere_remesh_for_deforming_geo_timeshift1/time
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_sphere_remesh_for_deforming_geo_timeshift1/frange1
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_sphere_remesh_for_deforming_geo_timeshift1/frange2
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_sphere_remesh_for_deforming_geo_timeshift1/trange1
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_timeshift1 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_sphere_remesh_for_deforming_geo_timeshift1/trange2
chblockend
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_timeshift1 frame ( frame )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_timeshift1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_timeshift1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_timeshift1

# Node $_obj_sphere_remesh_for_deforming_geo_ray1 (Sop/ray)
set _obj_sphere_remesh_for_deforming_geo_ray1 = `run("opadd -e -n -v ray ray1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.1069899999999997` $_obj_sphere_remesh_for_deforming_geo_ray1
chblockbegin
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_ray1 dirx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_sphere_remesh_for_deforming_geo_ray1/dirx
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_ray1 diry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_sphere_remesh_for_deforming_geo_ray1/diry
chadd -t 0 0 $_obj_sphere_remesh_for_deforming_geo_ray1 dirz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_sphere_remesh_for_deforming_geo_ray1/dirz
chblockend
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_ray1 method ( minimum ) useprimnumattrib ( on ) useprimuvwattrib ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_ray1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_ray1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_ray1

# Node $_obj_sphere_remesh_for_deforming_geo_null1 (Sop/null)
set _obj_sphere_remesh_for_deforming_geo_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + 3.5997370000000002` -y `$arg3 + 3.4905300000000001` $_obj_sphere_remesh_for_deforming_geo_null1
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_sphere_remesh_for_deforming_geo_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_null1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_null1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_null1

# Node $_obj_sphere_remesh_for_deforming_geo_null2 (Sop/null)
set _obj_sphere_remesh_for_deforming_geo_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 6.1990769999999999` -y `$arg3 + 3.4905300000000001` $_obj_sphere_remesh_for_deforming_geo_null2
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_sphere_remesh_for_deforming_geo_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_null2
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_null2
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_null2

# Node $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1 (Sop/attribinterpolate)
set _obj_sphere_remesh_for_deforming_geo_attribinterpolate1 = `run("opadd -e -n -v attribinterpolate attribinterpolate1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.93860999999999972` $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1 numberattrib ( hitprim ) weightsattrib ( hitprimuv )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1

# Node $_obj_sphere_remesh_for_deforming_geo_OUT (Sop/null)
set _obj_sphere_remesh_for_deforming_geo_OUT = `run("opadd -e -n -v null OUT")`
oplocate -x `$arg2 + 1` -y `$arg3 + -0.89910999999999941` $_obj_sphere_remesh_for_deforming_geo_OUT
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_sphere_remesh_for_deforming_geo_OUT
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_OUT
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_OUT
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_OUT

# Node $_obj_sphere_remesh_for_deforming_geo_attribute1 (Sop/attribute)
set _obj_sphere_remesh_for_deforming_geo_attribute1 = `run("opadd -e -n -v attribute attribute1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.041730000000000267` $_obj_sphere_remesh_for_deforming_geo_attribute1
opparm -V 15.5.480 $_obj_sphere_remesh_for_deforming_geo_attribute1 ptdel ( 'hitprim hitprimuv' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_attribute1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_attribute1
opuserdata -n '___Version___' -v '15.5.480' $_obj_sphere_remesh_for_deforming_geo_attribute1

# Node $_obj_sphere_remesh_for_deforming_geo_output1 (Sop/output)
set _obj_sphere_remesh_for_deforming_geo_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -2.2995080947875977` $_obj_sphere_remesh_for_deforming_geo_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_sphere_remesh_for_deforming_geo_output1
opexprlanguage -s hscript $_obj_sphere_remesh_for_deforming_geo_output1
oporder -e remesh1 timeshift1 ray1 null1 null2 attribinterpolate1 OUT attribute1 output1
opcf ..
opset -p on $_obj_sphere_remesh_for_deforming_geo

opcf $arg1
opwire -n $_obj_sphere_noise -0 $_obj_sphere_remesh_for_deforming_geo
opcf $_obj_sphere_remesh_for_deforming_geo
opwire -n $_obj_sphere_remesh_for_deforming_geo_timeshift1 -0 $_obj_sphere_remesh_for_deforming_geo_remesh1
opwire -n -i 0 -0 $_obj_sphere_remesh_for_deforming_geo_timeshift1
opwire -n $_obj_sphere_remesh_for_deforming_geo_remesh1 -0 $_obj_sphere_remesh_for_deforming_geo_ray1
opwire -n $_obj_sphere_remesh_for_deforming_geo_null1 -1 $_obj_sphere_remesh_for_deforming_geo_ray1
opwire -n $_obj_sphere_remesh_for_deforming_geo_timeshift1 -0 $_obj_sphere_remesh_for_deforming_geo_null1
opwire -n -i 0 -0 $_obj_sphere_remesh_for_deforming_geo_null2
opwire -n $_obj_sphere_remesh_for_deforming_geo_ray1 -0 $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opwire -n $_obj_sphere_remesh_for_deforming_geo_null2 -1 $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1
opwire -n $_obj_sphere_remesh_for_deforming_geo_attribute1 -0 $_obj_sphere_remesh_for_deforming_geo_OUT
opwire -n $_obj_sphere_remesh_for_deforming_geo_attribinterpolate1 -0 $_obj_sphere_remesh_for_deforming_geo_attribute1
opwire -n $_obj_sphere_remesh_for_deforming_geo_OUT -0 $_obj_sphere_remesh_for_deforming_geo_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_sphere_remesh_for_deforming_geo
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_sphere_remesh_for_deforming_geo
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="changeUpdateMode" label="changeUpdateMode" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import changeUpdateMode

changeUpdateMode.execute()]]></script>
  </tool>

  <tool name="copyRamp" label="copyRamp" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import copyRamp

copyRamp.execute()]]></script>
  </tool>

  <tool name="gotToCam" label="gotToCam" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import goToCam

goToCam.execute()]]></script>
  </tool>

  <tool name="attribvop" label="noise" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Sunday October 30, 18:48 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_noise (Sop/attribvop)
set _obj_geo1_noise = `run("opadd -e -n -v attribvop noise")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_noise
opspareds '    parm { 	name	"bindgroup" 	baseparm 	label	"Group" 	export	none 	bindselector points "Modify Points" 	    "Select the points to affect and press Enter to complete." 	    0 1 0xffffffff 0 bindgrouptype 0     }     parm { 	name	"bindgrouptype" 	baseparm 	label	"Group Type" 	export	none     }     parm { 	name	"bindclass" 	baseparm 	label	"Run Over" 	export	none     }     parm { 	name	"vex_numcount" 	baseparm 	label	"Number Count" 	export	none     }     parm { 	name	"vex_threadjobsize" 	baseparm 	label	"Thread Job Size" 	export	none     }     group { 	name	"stdswitcher3" 	label	"Vex Setup"  	parm { 	    name	"vexsrc" 	    baseparm 	    label	"Vex Source" 	    export	dialog 	} 	parm { 	    name	"shoppath" 	    baseparm 	    label	"Shop Path" 	    export	dialog 	} 	parm { 	    name	"script" 	    baseparm 	    label	"Script" 	    export	all 	} 	parm { 	    name	"clear" 	    baseparm 	    label	"Re-load VEX Functions" 	    export	all 	} 	parm { 	    name	"vop_compiler" 	    baseparm 	    label	"Compiler" 	    export	none 	} 	parm { 	    name	"vop_forcecompile" 	    baseparm 	    label	"Force Compile" 	    export	none 	} 	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_multithread" 	    baseparm 	    label	"Enable Multithreading" 	    export	none 	}     }      group { 	name	"stdswitcher3_1" 	label	"Attribute Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	}     }      parm { 	name	"ptnum" 	label	"Point Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"vtxnum" 	label	"Vertex Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"primnum" 	label	"Primitive Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"id" 	label	"Id" 	type	integer 	invisible 	default	{ "-1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numpt" 	label	"Number of Points" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numvtx" 	label	"Number of Vertices" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numprim" 	label	"Number of Prims" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Time" 	label	"Time" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"TimeInc" 	label	"Time Inc" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Frame" 	label	"Frame" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"life" 	label	"Life" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"age" 	label	"Age" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput2" 	label	"Second Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput3" 	label	"Third Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput4" 	label	"Fourth Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput1" 	label	"First Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"uv" 	label	"UV" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"P" 	label	"P" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"v" 	label	"Velocity" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"force" 	label	"Force" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Cd" 	label	"Cd" 	type	float 	invisible 	size	3 	default	{ "1" "1" "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"N" 	label	"N" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"freq" 	label	"Frequency" 	type	float 	size	4 	default	{ "1" "1" "1" "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"offset" 	label	"Offset" 	type	float 	size	4 	default	{ "0" "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"amp" 	label	"Amplitude" 	type	float 	default	{ "1" } 	range	{ -1 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"rough" 	label	"Roughness" 	type	float 	default	{ "0.5" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_noise
opparm $_obj_geo1_noise  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_noise freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise/freq2
chadd -t 0 0 $_obj_geo1_noise freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise/freq3
chblockend
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_noise
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_noise
opexprlanguage -s hscript $_obj_geo1_noise
opcf $_obj_geo1_noise

# Node $_obj_geo1_noise_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_noise_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_geo1_noise_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_noise_geometryvopglobal1

# Node $_obj_geo1_noise_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_noise_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 9.8721227645874023` -y `$arg3 + 4.2877378463745117` $_obj_geo1_noise_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_noise_geometryvopoutput1

# Node $_obj_geo1_noise_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_noise_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 5.7316727638244629` -y `$arg3 + 2.5695571899414063` $_obj_geo1_noise_aaflownoise1
opparm $_obj_geo1_noise_aaflownoise1 signature ( vp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_noise_aaflownoise1

# Node $_obj_geo1_noise_vectohvec1 (Vop/vectohvec)
set _obj_geo1_noise_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 3.7922172546386719` -y `$arg3 + 3.5579569339752197` $_obj_geo1_noise_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_vectohvec1
opexprlanguage -s hscript $_obj_geo1_noise_vectohvec1

# Node $_obj_geo1_noise_add1 (Vop/add)
set _obj_geo1_noise_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 7.6962054016113282` -y `$arg3 + 4.5701378211975099` $_obj_geo1_noise_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_add1
opexprlanguage -s hscript $_obj_geo1_noise_add1

# Node $_obj_geo1_noise_freq (Vop/parameter)
set _obj_geo1_noise_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 3.0316727757453918` -y `$arg3 + 3.9695571660995483` $_obj_geo1_noise_freq
opparm -V 15.5.480 $_obj_geo1_noise_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_freq
opexprlanguage -s hscript $_obj_geo1_noise_freq

# Node $_obj_geo1_noise_offset (Vop/parameter)
set _obj_geo1_noise_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 3.131672739982605` -y `$arg3 + 3.7695572376251221` $_obj_geo1_noise_offset
opparm -V 15.5.480 $_obj_geo1_noise_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_offset
opexprlanguage -s hscript $_obj_geo1_noise_offset

# Node $_obj_geo1_noise_amp (Vop/parameter)
set _obj_geo1_noise_amp = `run("opadd -e -n -v parameter amp")`
oplocate -x `$arg2 + 3.2316727638244629` -y `$arg3 + 3.5695571899414063` $_obj_geo1_noise_amp
opparm -V 15.5.480 $_obj_geo1_noise_amp parmname ( amp ) parmlabel ( Amplitude ) floatdef ( 1 ) rangeflt ( -1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_amp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_amp
opexprlanguage -s hscript $_obj_geo1_noise_amp

# Node $_obj_geo1_noise_rough (Vop/parameter)
set _obj_geo1_noise_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 3.3316727578639984` -y `$arg3 + 3.3695572018623352` $_obj_geo1_noise_rough
opparm -V 15.5.480 $_obj_geo1_noise_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_rough
opexprlanguage -s hscript $_obj_geo1_noise_rough
opcf ..
opcf $_obj_geo1_noise
oporder -e geometryvopglobal1 geometryvopoutput1 aaflownoise1 vectohvec1 add1 freq offset amp rough 
opcf ..
opset -p on $_obj_geo1_noise

opcf $arg1
opwire -n $_obj_geo1_uvunwrap1 -0 $_obj_geo1_noise
opcf $_obj_geo1_noise
opwire -n $_obj_geo1_noise_add1 -0 $_obj_geo1_noise_geometryvopoutput1
opwire -n $_obj_geo1_noise_vectohvec1 -0 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_freq -1 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_offset -2 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_amp -3 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_rough -4 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_geometryvopglobal1 -0 $_obj_geo1_noise_vectohvec1
opwire -n $_obj_geo1_noise_geometryvopglobal1 -0 $_obj_geo1_noise_add1
opwire -n $_obj_geo1_noise_aaflownoise1 -1 $_obj_geo1_noise_add1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_noise
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_noise
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="uv_fixer" label="uv_fixer" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Tuesday November 01, 00:42 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_uv_fixer (Sop/subnet)
set _obj_geo1_uv_fixer = `run("opadd -e -n -v subnet uv_fixer")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_uv_fixer
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer
opexprlanguage -s hscript $_obj_geo1_uv_fixer
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer
opcf $_obj_geo1_uv_fixer

# Node $_obj_geo1_uv_fixer_color2 (Sop/color)
set _obj_geo1_uv_fixer_color2 = `run("opadd -e -n -v color color2")`
oplocate -x `$arg2 + -9.3327799999999996` -y `$arg3 + -8.77182` $_obj_geo1_uv_fixer_color2
opparm $_obj_geo1_uv_fixer_color2  ramp ( 2 )
opparm $_obj_geo1_uv_fixer_color2 class ( 3 ) colortype ( 4 ) rampattribute ( piece ) ramprange ( 0 4 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_color2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_color2
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_color2
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_uv_fixer_color2
opuserdata -n '___toolid___' -v 'sop_color' $_obj_geo1_uv_fixer_color2

# Node $_obj_geo1_uv_fixer_noise (Sop/attribvop)
set _obj_geo1_uv_fixer_noise = `run("opadd -e -n -v attribvop noise")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.91273000000000004` $_obj_geo1_uv_fixer_noise
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector points "Modify Points"         "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "freq"  label   "Frequency"     type    float   size    4       default { "1" "1" "1" "1" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "offset"        label   "Offset"        type    float   size    4       default { "0" "0" "0" "0" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "amp"   label   "Amplitude"     type    float   default { "1" }         range   { -1 1 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rough"         label   "Roughness"     type    float   default { "0.5" }       range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_uv_fixer_noise
opparm $_obj_geo1_uv_fixer_noise  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_noise freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_uv_fixer_noise/freq2
chadd -t 0 0 $_obj_geo1_uv_fixer_noise freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_uv_fixer_noise/freq3
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise freq ( 1 freq2 freq3 1 ) amp ( 0.5 )
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_uv_fixer_noise
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_noise
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise
opcf $_obj_geo1_uv_fixer_noise

# Node $_obj_geo1_uv_fixer_noise_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_uv_fixer_noise_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_geo1_uv_fixer_noise_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_noise_geometryvopglobal1

# Node $_obj_geo1_uv_fixer_noise_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_uv_fixer_noise_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 9.8721200000000007` -y `$arg3 + 4.2877400000000003` $_obj_geo1_uv_fixer_noise_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_noise_geometryvopoutput1

# Node $_obj_geo1_uv_fixer_noise_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_uv_fixer_noise_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 5.7316700000000003` -y `$arg3 + 2.5695600000000001` $_obj_geo1_uv_fixer_noise_aaflownoise1
opparm $_obj_geo1_uv_fixer_noise_aaflownoise1 signature ( vp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_aaflownoise1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_noise_aaflownoise1

# Node $_obj_geo1_uv_fixer_noise_vectohvec1 (Vop/vectohvec)
set _obj_geo1_uv_fixer_noise_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 3.7922199999999999` -y `$arg3 + 3.55796` $_obj_geo1_uv_fixer_noise_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_vectohvec1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_vectohvec1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_noise_vectohvec1

# Node $_obj_geo1_uv_fixer_noise_add1 (Vop/add)
set _obj_geo1_uv_fixer_noise_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 7.6962099999999998` -y `$arg3 + 4.5701400000000003` $_obj_geo1_uv_fixer_noise_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_add1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_add1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_add1

# Node $_obj_geo1_uv_fixer_noise_freq (Vop/parameter)
set _obj_geo1_uv_fixer_noise_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 3.0316700000000001` -y `$arg3 + 3.96956` $_obj_geo1_uv_fixer_noise_freq
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_uv_fixer_noise_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_freq
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_freq
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_freq

# Node $_obj_geo1_uv_fixer_noise_offset (Vop/parameter)
set _obj_geo1_uv_fixer_noise_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 3.1316700000000002` -y `$arg3 + 3.7695599999999998` $_obj_geo1_uv_fixer_noise_offset
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_uv_fixer_noise_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_offset
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_offset
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_offset

# Node $_obj_geo1_uv_fixer_noise_amp (Vop/parameter)
set _obj_geo1_uv_fixer_noise_amp = `run("opadd -e -n -v parameter amp")`
oplocate -x `$arg2 + 3.2316699999999998` -y `$arg3 + 3.5695600000000001` $_obj_geo1_uv_fixer_noise_amp
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise_amp parmname ( amp ) parmlabel ( Amplitude ) floatdef ( 1 ) rangeflt ( -1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_uv_fixer_noise_amp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_amp
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_amp
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_amp

# Node $_obj_geo1_uv_fixer_noise_rough (Vop/parameter)
set _obj_geo1_uv_fixer_noise_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 3.3316699999999999` -y `$arg3 + 3.3695599999999999` $_obj_geo1_uv_fixer_noise_rough
opparm -V 15.5.480 $_obj_geo1_uv_fixer_noise_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_uv_fixer_noise_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_uv_fixer_noise_rough
opexprlanguage -s hscript $_obj_geo1_uv_fixer_noise_rough
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_noise_rough
opcf ..

# Node $_obj_geo1_uv_fixer_convertline1 (Sop/convertline)
set _obj_geo1_uv_fixer_convertline1 = `run("opadd -e -n -v convertline convertline1")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -9.2699098587036133` $_obj_geo1_uv_fixer_convertline1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_convertline1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_convertline1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_convertline1

# Node $_obj_geo1_uv_fixer_subnet1 (Sop/subnet)
set _obj_geo1_uv_fixer_subnet1 = `run("opadd -e -n -v subnet subnet1")`
oplocate -x `$arg2 + -5.7131891250610352` -y `$arg3 + -13.194344520568848` $_obj_geo1_uv_fixer_subnet1
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        export  dialog     }     parm {         name    "label2"        baseparm        label   "Input #2 Label"        export  dialog     }     parm {         name    "label3"        baseparm        label   "Input #3 Label"        export  dialog     }     parm {         name    "label4"        baseparm        label   "Input #4 Label"        export  dialog     }     parm {         name    "uv_check"      label   "uv_check"      type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "clorize_piece"         label   "clorize_piece"         type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_geo1_uv_fixer_subnet1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet1 uv_check ( on )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_uv_fixer_subnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1
opcf $_obj_geo1_uv_fixer_subnet1

# Node $_obj_geo1_uv_fixer_subnet1_attribwrangle2 (Sop/attribwrangle)
set _obj_geo1_uv_fixer_subnet1_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opparm $_obj_geo1_uv_fixer_subnet1_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_uv_fixer_subnet1_attribwrangle2 class ( primitive ) snippet ( 'int vers[] = primvertices(0, @primnum);\nint length = len(vers);\nint newPts[];\nint pts[];\n\n\nfor(int i=0; i<length; i++)\n{\n    int hedge = vertexhedge(0, vers[i]);\n    \n    int destVer = hedge_dstvertex(0,hedge);\n    \n    float srcPiece = vertex(0,"piece", vers[i]);\n    float destPiece = vertex(0,"piece", destVer);\n    //printf("%d + %d  ",srcPiece, destPiece);\n    \n    int srcPoint = vertexpoint(@OpInput1, vers[i]);\n    int destPoint = vertexpoint(@OpInput1, destVer);\n    \n    //push(pts, srcPoint);\n    \n    if(srcPiece != destPiece)\n    {\n        vector srcP = point(0,"P",srcPoint);\n        vector destP = point(0,"P",destPoint);\n        \n        float srcDist = xyzdist(1, srcP);\n        float destDist = xyzdist(1, destP);\n        \n        float prop = srcDist/(srcDist + destDist);\n        int newPt = addpoint(geoself(), lerp(srcP, destP, prop));\n        push(newPts, newPt);\n        push(pts, newPt);\n        \n    }\n    push(pts,destPoint);\n\n}\n\n//printf("%d ", len(pts));\n\nif(len(newPts)>0)\n{\n    for(int i = 0;i < len(newPts) + 1; i++)\n    {\n        if(len(newPts) == 3)\n        {\n            if(i != len(newPts))\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[i*2]);\n                addvertex(geoself(), newPrim, pts[i*2+1]);\n                if(i*2 + 2 >= len(pts))\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2 - len(pts)]);\n                }\n                else\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2]);\n                }\n            }\n            else\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[0]);\n                addvertex(geoself(), newPrim, pts[2]);\n                addvertex(geoself(), newPrim, pts[4]);\n            }\n            \n        }\n        else if(len(newPts) == 2)\n        {\n            if(pts[0] != newPts[0] && pts[0] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[i]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[i*2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(0,0,1);\n            }\n            else if(pts[2] != newPts[0] && pts[2] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(1,0,0);\n            }\n            else\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                @Cd = set(0,1,0);\n            }\n        }\n    }\n    removeprim(geoself(),@primnum,1);\n}\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet1_attribwrangle2

# Node $_obj_geo1_uv_fixer_subnet1_color3 (Sop/color)
set _obj_geo1_uv_fixer_subnet1_color3 = `run("opadd -e -n -v color color3")`
oplocate -x `$arg2 + 2.5176472663879395` -y `$arg3 + -0.91022348403930664` $_obj_geo1_uv_fixer_subnet1_color3
opparm $_obj_geo1_uv_fixer_subnet1_color3  ramp ( 2 )
opparm $_obj_geo1_uv_fixer_subnet1_color3 class ( 3 ) colortype ( 4 ) rampattribute ( piece ) ramprange ( 0 4 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_color3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_color3
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet1_color3
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_uv_fixer_subnet1_color3
opuserdata -n '___toolid___' -v 'sop_color' $_obj_geo1_uv_fixer_subnet1_color3
opcf ..

# Node $_obj_geo1_uv_fixer_subnet2 (Sop/subnet)
set _obj_geo1_uv_fixer_subnet2 = `run("opadd -e -n -v subnet subnet2")`
oplocate -x `$arg2 + -4.8983566520690918` -y `$arg3 + -14.656028617858887` $_obj_geo1_uv_fixer_subnet2
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        export  all     }     parm {    name    "uv_check"      label   "uv_check"      type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "clorize_piece"         label   "clorize_piece"         type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_geo1_uv_fixer_subnet2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet2 uv_check ( on )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_uv_fixer_subnet2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2
opcf $_obj_geo1_uv_fixer_subnet2

# Node $_obj_geo1_uv_fixer_subnet2_attribwrangle2 (Sop/attribwrangle)
set _obj_geo1_uv_fixer_subnet2_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opparm $_obj_geo1_uv_fixer_subnet2_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_uv_fixer_subnet2_attribwrangle2 class ( primitive ) snippet ( 'int vers[] = primvertices(0, @primnum);\nint length = len(vers);\nint newPts[];\nint pts[];\n\n\nfor(int i=0; i<length; i++)\n{\n    int hedge = vertexhedge(0, vers[i]);\n    \n    int destVer = hedge_dstvertex(0,hedge);\n    \n    float srcPiece = vertex(0,"piece", vers[i]);\n    float destPiece = vertex(0,"piece", destVer);\n    //printf("%d + %d  ",srcPiece, destPiece);\n    \n    int srcPoint = vertexpoint(@OpInput1, vers[i]);\n    int destPoint = vertexpoint(@OpInput1, destVer);\n    \n    //push(pts, srcPoint);\n    \n    if(srcPiece != destPiece)\n    {\n        vector srcP = point(0,"P",srcPoint);\n        vector destP = point(0,"P",destPoint);\n        \n        float srcDist = xyzdist(1, srcP);\n        float destDist = xyzdist(1, destP);\n        \n        float prop = srcDist/(srcDist + destDist);\n        int newPt = addpoint(geoself(), lerp(srcP, destP, prop));\n        push(newPts, newPt);\n        push(pts, newPt);\n        \n    }\n    push(pts,destPoint);\n\n}\n\n//printf("%d ", len(pts));\n\nif(len(newPts)>0)\n{\n    for(int i = 0;i < len(newPts) + 1; i++)\n    {\n        if(len(newPts) == 3)\n        {\n            if(i != len(newPts))\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[i*2]);\n                addvertex(geoself(), newPrim, pts[i*2+1]);\n                if(i*2 + 2 >= len(pts))\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2 - len(pts)]);\n                }\n                else\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2]);\n                }\n            }\n            else\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[0]);\n                addvertex(geoself(), newPrim, pts[2]);\n                addvertex(geoself(), newPrim, pts[4]);\n            }\n            \n        }\n        else if(len(newPts) == 2)\n        {\n            if(pts[0] != newPts[0] && pts[0] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[i]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[i*2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(0,0,1);\n            }\n            else if(pts[2] != newPts[0] && pts[2] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(1,0,0);\n            }\n            else\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                @Cd = set(0,1,0);\n            }\n        }\n    }\n    removeprim(geoself(),@primnum,1);\n}\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet2_attribwrangle2

# Node $_obj_geo1_uv_fixer_subnet2_color3 (Sop/color)
set _obj_geo1_uv_fixer_subnet2_color3 = `run("opadd -e -n -v color color3")`
oplocate -x `$arg2 + 2.5176500000000002` -y `$arg3 + -0.910223` $_obj_geo1_uv_fixer_subnet2_color3
opparm $_obj_geo1_uv_fixer_subnet2_color3  ramp ( 2 )
opparm $_obj_geo1_uv_fixer_subnet2_color3 class ( 3 ) colortype ( 4 ) rampattribute ( piece ) ramprange ( 0 4 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_color3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_color3
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet2_color3
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_uv_fixer_subnet2_color3
opuserdata -n '___toolid___' -v 'sop_color' $_obj_geo1_uv_fixer_subnet2_color3
opcf ..

# Node $_obj_geo1_uv_fixer_subnet3 (Sop/subnet)
set _obj_geo1_uv_fixer_subnet3 = `run("opadd -e -n -v subnet subnet3")`
oplocate -x `$arg2 + -4.4767925498962402` -y `$arg3 + -15.773671974182129` $_obj_geo1_uv_fixer_subnet3
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        export  all     }     parm {    name    "uv_check"      label   "uv_check"      type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "clorize_piece"         label   "clorize_piece"         type    toggle  default { "0" }         range   { 0! 10 }       export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_geo1_uv_fixer_subnet3
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet3 uv_check ( on )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_uv_fixer_subnet3
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3
opcf $_obj_geo1_uv_fixer_subnet3

# Node $_obj_geo1_uv_fixer_subnet3_attribwrangle2 (Sop/attribwrangle)
set _obj_geo1_uv_fixer_subnet3_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opparm $_obj_geo1_uv_fixer_subnet3_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_uv_fixer_subnet3_attribwrangle2 class ( primitive ) snippet ( 'int vers[] = primvertices(0, @primnum);\nint length = len(vers);\nint newPts[];\nint pts[];\n\n\nfor(int i=0; i<length; i++)\n{\n    int hedge = vertexhedge(0, vers[i]);\n    \n    int destVer = hedge_dstvertex(0,hedge);\n    \n    float srcPiece = vertex(0,"piece", vers[i]);\n    float destPiece = vertex(0,"piece", destVer);\n    //printf("%d + %d  ",srcPiece, destPiece);\n    \n    int srcPoint = vertexpoint(@OpInput1, vers[i]);\n    int destPoint = vertexpoint(@OpInput1, destVer);\n    \n    //push(pts, srcPoint);\n    \n    if(srcPiece != destPiece)\n    {\n        vector srcP = point(0,"P",srcPoint);\n        vector destP = point(0,"P",destPoint);\n        \n        float srcDist = xyzdist(1, srcP);\n        float destDist = xyzdist(1, destP);\n        \n        float prop = srcDist/(srcDist + destDist);\n        int newPt = addpoint(geoself(), lerp(srcP, destP, prop));\n        push(newPts, newPt);\n        push(pts, newPt);\n        \n    }\n    push(pts,destPoint);\n\n}\n\n//printf("%d ", len(pts));\n\nif(len(newPts)>0)\n{\n    for(int i = 0;i < len(newPts) + 1; i++)\n    {\n        if(len(newPts) == 3)\n        {\n            if(i != len(newPts))\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[i*2]);\n                addvertex(geoself(), newPrim, pts[i*2+1]);\n                if(i*2 + 2 >= len(pts))\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2 - len(pts)]);\n                }\n                else\n                {\n                    addvertex(geoself(), newPrim, pts[i*2+2]);\n                }\n            }\n            else\n            {\n                int newPrim = addprim(geoself(), "poly");\n                addvertex(geoself(), newPrim, pts[0]);\n                addvertex(geoself(), newPrim, pts[2]);\n                addvertex(geoself(), newPrim, pts[4]);\n            }\n            \n        }\n        else if(len(newPts) == 2)\n        {\n            if(pts[0] != newPts[0] && pts[0] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[i]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[i*2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(0,0,1);\n            }\n            else if(pts[2] != newPts[0] && pts[2] != newPts[1])\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                }\n                @Cd = set(1,0,0);\n            }\n            else\n            {\n                if(i==0)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[0]);\n                    addvertex(geoself(), newPrim, pts[1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                else if(i==1)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[2]);\n                    addvertex(geoself(), newPrim, pts[3]);\n                    addvertex(geoself(), newPrim, pts[4]);\n                }\n                else if(i==2)\n                {\n                    int newPrim = addprim(geoself(), "poly");\n                    addvertex(geoself(), newPrim, pts[4]);\n                    addvertex(geoself(), newPrim, pts[i*2 - len(pts)+1]);\n                    addvertex(geoself(), newPrim, pts[2]);\n                }\n                @Cd = set(0,1,0);\n            }\n        }\n    }\n    removeprim(geoself(),@primnum,1);\n}\n\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet3_attribwrangle2

# Node $_obj_geo1_uv_fixer_subnet3_color3 (Sop/color)
set _obj_geo1_uv_fixer_subnet3_color3 = `run("opadd -e -n -v color color3")`
oplocate -x `$arg2 + 2.5176500000000002` -y `$arg3 + -0.910223` $_obj_geo1_uv_fixer_subnet3_color3
opparm $_obj_geo1_uv_fixer_subnet3_color3  ramp ( 2 )
opparm $_obj_geo1_uv_fixer_subnet3_color3 class ( 3 ) colortype ( 4 ) rampattribute ( piece ) ramprange ( 0 4 ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_color3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_color3
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet3_color3
opuserdata -n '___toolcount___' -v '2' $_obj_geo1_uv_fixer_subnet3_color3
opuserdata -n '___toolid___' -v 'sop_color' $_obj_geo1_uv_fixer_subnet3_color3
opcf ..
opcf ..
opcf $_obj_geo1_uv_fixer
opcf $_obj_geo1_uv_fixer_noise
oporder -e geometryvopglobal1 geometryvopoutput1 aaflownoise1 vectohvec1 add1 freq offset amp rough 
opcf ..

# Node $_obj_geo1_uv_fixer_box1 (Sop/box)
set _obj_geo1_uv_fixer_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 4.7469999999999999` $_obj_geo1_uv_fixer_box1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_box1 size ( 2 2 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_box1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_box1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_box1

# Node $_obj_geo1_uv_fixer_subdivide1 (Sop/subdivide)
set _obj_geo1_uv_fixer_subdivide1 = `run("opadd -e -n -v subdivide subdivide1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.1093600000000001` $_obj_geo1_uv_fixer_subdivide1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subdivide1 iterations ( 4 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subdivide1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subdivide1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subdivide1

# Node $_obj_geo1_uv_fixer_uvunwrap1 (Sop/uvunwrap)
set _obj_geo1_uv_fixer_uvunwrap1 = `run("opadd -e -n -v uvunwrap uvunwrap1")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.0081799999999999` $_obj_geo1_uv_fixer_uvunwrap1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvunwrap1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvunwrap1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_uvunwrap1

# Node $_obj_geo1_uv_fixer_uvquickshade1 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade1 = `run("opadd -e -n -v uvquickshade uvquickshade1")`
oplocate -x `$arg2 + 12.9572` -y `$arg3 + -4.0475099999999999` $_obj_geo1_uv_fixer_uvquickshade1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvquickshade1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade1
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade1

# Node $_obj_geo1_uv_fixer_connectivity1 (Sop/connectivity)
set _obj_geo1_uv_fixer_connectivity1 = `run("opadd -e -n -v connectivity connectivity1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -2.0451600000000001` $_obj_geo1_uv_fixer_connectivity1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_connectivity1 connecttype ( prim ) attribname ( piece ) byuv ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_connectivity1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_connectivity1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_connectivity1

# Node $_obj_geo1_uv_fixer_remesh2 (Sop/remesh)
set _obj_geo1_uv_fixer_remesh2 = `run("opadd -e -n -v remesh remesh2")`
oplocate -x `$arg2 + 1` -y `$arg3 + -7.9133199999999997` $_obj_geo1_uv_fixer_remesh2
opparm $_obj_geo1_uv_fixer_remesh2  lfs_ramp ( 2 )
opparm -V 15.5.480 $_obj_geo1_uv_fixer_remesh2 smoothing_level ( 1 ) target_edge ( 0.10000000000000001 ) lfs_ramp1c ( 0 0 1 ) lfs_ramp2pos ( 1 ) lfs_ramp2c ( 1 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_remesh2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_remesh2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_remesh2

# Node $_obj_geo1_uv_fixer_foreach_end1 (Sop/block_end)
set _obj_geo1_uv_fixer_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -5.4491399999999999` $_obj_geo1_uv_fixer_foreach_end1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_foreach_end1 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( piece ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_uv_fixer_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_foreach_end1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_foreach_end1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_foreach_end1

# Node $_obj_geo1_uv_fixer_foreach_begin1 (Sop/block_begin)
set _obj_geo1_uv_fixer_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -3.87643` $_obj_geo1_uv_fixer_foreach_begin1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_foreach_begin1 method ( piece ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_uv_fixer_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_foreach_begin1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_foreach_begin1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_foreach_begin1

# Node $_obj_geo1_uv_fixer_group1 (Sop/group)
set _obj_geo1_uv_fixer_group1 = `run("opadd -e -n -v group group1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -4.6551999999999998` $_obj_geo1_uv_fixer_group1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_group1 rangeend
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$N' $_obj_geo1_uv_fixer_group1/rangeend
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_group1 crname ( edge ) entity ( edge ) switcher2 ( 3 3 3 3 ) groupnumber ( off ) groupedges ( on ) unshared ( on )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_group1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_group1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_group1

# Node $_obj_geo1_uv_fixer_fuse1 (Sop/fuse)
set _obj_geo1_uv_fixer_fuse1 = `run("opadd -e -n -v fuse fuse1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -6.2892599999999996` $_obj_geo1_uv_fixer_fuse1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_fuse1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_fuse1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_fuse1

# Node $_obj_geo1_uv_fixer_uvquickshade3 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade3 = `run("opadd -e -n -v uvquickshade uvquickshade3")`
oplocate -x `$arg2 + 1.01362` -y `$arg3 + -9.8695199999999996` $_obj_geo1_uv_fixer_uvquickshade3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvquickshade3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade3
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade3

# Node $_obj_geo1_uv_fixer_remesh3 (Sop/remesh)
set _obj_geo1_uv_fixer_remesh3 = `run("opadd -e -n -v remesh remesh3")`
oplocate -x `$arg2 + 9.3443900000000006` -y `$arg3 + -4.0475099999999999` $_obj_geo1_uv_fixer_remesh3
opparm $_obj_geo1_uv_fixer_remesh3  lfs_ramp ( 2 )
opparm -V 15.5.480 $_obj_geo1_uv_fixer_remesh3 hard_edges ( * ) target_edge ( 0.10000000000000001 ) lfs_ramp1c ( 0 0 1 ) lfs_ramp2pos ( 1 ) lfs_ramp2c ( 1 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_remesh3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_remesh3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_remesh3

# Node $_obj_geo1_uv_fixer_uvquickshade4 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade4 = `run("opadd -e -n -v uvquickshade uvquickshade4")`
oplocate -x `$arg2 + 9.3443900000000006` -y `$arg3 + -5.6973000000000003` $_obj_geo1_uv_fixer_uvquickshade4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvquickshade4
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade4
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade4

# Node $_obj_geo1_uv_fixer_vertexsplit1 (Sop/vertexsplit)
set _obj_geo1_uv_fixer_vertexsplit1 = `run("opadd -e -n -v vertexsplit vertexsplit1")`
oplocate -x `$arg2 + 1` -y `$arg3 + -7.1037699999999999` $_obj_geo1_uv_fixer_vertexsplit1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_vertexsplit1 attribname ( uv )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_vertexsplit1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_vertexsplit1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_vertexsplit1

# Node $_obj_geo1_uv_fixer_fuse2 (Sop/fuse)
set _obj_geo1_uv_fixer_fuse2 = `run("opadd -e -n -v fuse fuse2")`
oplocate -x `$arg2 + 1` -y `$arg3 + -9.0577199999999998` $_obj_geo1_uv_fixer_fuse2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_fuse2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_fuse2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_fuse2

# Node $_obj_geo1_uv_fixer_attribpromote1 (Sop/attribpromote)
set _obj_geo1_uv_fixer_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + -3.6851000785827637` -y `$arg3 + -2.7654500007629395` $_obj_geo1_uv_fixer_attribpromote1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_attribpromote1 inname ( piece ) inclass ( primitive ) outclass ( vertex ) method ( first )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_attribpromote1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_attribpromote1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_attribpromote1

# Node $_obj_geo1_uv_fixer_convertvdb1 (Sop/convertvdb)
set _obj_geo1_uv_fixer_convertvdb1 = `run("opadd -e -n -v convertvdb convertvdb1")`
oplocate -x `$arg2 + -9.3327799999999996` -y `$arg3 + -5.7664099999999996` $_obj_geo1_uv_fixer_convertvdb1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_convertvdb1 conversion ( poly ) adaptivity ( 1.6739999999999999 ) transferattributes ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_convertvdb1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_convertvdb1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_convertvdb1

# Node $_obj_geo1_uv_fixer_vdbfrompolygons1 (Sop/vdbfrompolygons)
set _obj_geo1_uv_fixer_vdbfrompolygons1 = `run("opadd -e -n -v vdbfrompolygons vdbfrompolygons1")`
oplocate -x `$arg2 + -10.307087898254395` -y `$arg3 + -4.5771198272705078` $_obj_geo1_uv_fixer_vdbfrompolygons1
opparm $_obj_geo1_uv_fixer_vdbfrompolygons1  numattrib ( 0 )
opparm -V 15.5.480 $_obj_geo1_uv_fixer_vdbfrompolygons1 voxelsize ( 0.0050000000000000001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_vdbfrompolygons1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_vdbfrompolygons1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_vdbfrompolygons1

# Node $_obj_geo1_uv_fixer_uvquickshade6 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade6 = `run("opadd -e -n -v uvquickshade uvquickshade6")`
oplocate -x `$arg2 + -9.3327798843383789` -y `$arg3 + -9.6241550445556641` $_obj_geo1_uv_fixer_uvquickshade6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_uvquickshade6
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade6
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade6

# Node $_obj_geo1_uv_fixer_attribtransfer1 (Sop/attribtransfer)
set _obj_geo1_uv_fixer_attribtransfer1 = `run("opadd -e -n -v attribtransfer attribtransfer1")`
oplocate -x `$arg2 + -9.3327799999999996` -y `$arg3 + -7.8936200000000003` $_obj_geo1_uv_fixer_attribtransfer1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_attribtransfer1 cardswitcher ( 1 1 ) primitiveattribs ( off ) pointattribs ( off ) vertexattribs ( on ) vertexattriblist ( 'uv piece' ) copyvariable ( off ) thresholddist ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_attribtransfer1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_attribtransfer1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_attribtransfer1

# Node $_obj_geo1_uv_fixer_divide1 (Sop/divide)
set _obj_geo1_uv_fixer_divide1 = `run("opadd -e -n -v divide divide1")`
oplocate -x `$arg2 + -9.3327799999999996` -y `$arg3 + -6.6151400000000002` $_obj_geo1_uv_fixer_divide1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_divide1 noslivers ( on ) avoidsmallangles ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_divide1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_divide1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_divide1

# Node $_obj_geo1_uv_fixer_attribcast1 (Sop/attribcast)
set _obj_geo1_uv_fixer_attribcast1 = `run("opadd -e -n -v attribcast attribcast1")`
oplocate -x `$arg2 + -3.6850999999999998` -y `$arg3 + -4.1086099999999997` $_obj_geo1_uv_fixer_attribcast1
opparm $_obj_geo1_uv_fixer_attribcast1  numcasts ( 1 )
opparm -V 15.5.480 $_obj_geo1_uv_fixer_attribcast1 class1 ( vertex ) attribs1 ( piece )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_attribcast1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_attribcast1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_attribcast1

# Node $_obj_geo1_uv_fixer_foreach_end2 (Sop/block_end)
set _obj_geo1_uv_fixer_foreach_end2 = `run("opadd -e -n -v block_end foreach_end2")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -7.4022445678710938` $_obj_geo1_uv_fixer_foreach_end2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_foreach_end2 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( piece ) blockpath ( ../foreach_begin2 ) templatepath ( ../foreach_begin2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_uv_fixer_foreach_end2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_foreach_end2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_foreach_end2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_foreach_end2

# Node $_obj_geo1_uv_fixer_foreach_begin2 (Sop/block_begin)
set _obj_geo1_uv_fixer_foreach_begin2 = `run("opadd -e -n -v block_begin foreach_begin2")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -5.2711033821105957` $_obj_geo1_uv_fixer_foreach_begin2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_foreach_begin2 method ( piece ) blockpath ( ../foreach_end2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_uv_fixer_foreach_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_foreach_begin2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_foreach_begin2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_foreach_begin2

# Node $_obj_geo1_uv_fixer_group2 (Sop/group)
set _obj_geo1_uv_fixer_group2 = `run("opadd -e -n -v group group2")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -6.0703954696655273` $_obj_geo1_uv_fixer_group2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_group2 rangeend
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$N' $_obj_geo1_uv_fixer_group2/rangeend
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_group2 crname ( edge ) entity ( edge ) switcher2 ( 3 3 3 3 ) groupnumber ( off ) groupedges ( on ) unshared ( on )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_group2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_group2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_group2

# Node $_obj_geo1_uv_fixer_dissolve1 (Sop/dissolve::2.0)
set _obj_geo1_uv_fixer_dissolve1 = `run("opadd -e -n -v dissolve::2.0 dissolve1")`
oplocate -x `$arg2 + -2.4993891716003418` -y `$arg3 + -8.4151134490966797` $_obj_geo1_uv_fixer_dissolve1
opparm -V 15.5.480 $_obj_geo1_uv_fixer_dissolve1 group ( edge ) invertsel ( keep ) reminlinepts ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_dissolve1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_dissolve1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_dissolve1

# Node $_obj_geo1_uv_fixer_uvquickshade8 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_uvquickshade8 = `run("opadd -e -n -v uvquickshade uvquickshade8")`
oplocate -x `$arg2 + -3.6851000785827637` -y `$arg3 + -3.425006628036499` $_obj_geo1_uv_fixer_uvquickshade8
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_uvquickshade8
opexprlanguage -s hscript $_obj_geo1_uv_fixer_uvquickshade8
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_uvquickshade8
opcf $_obj_geo1_uv_fixer_subnet1

# Node $_obj_geo1_uv_fixer_subnet1_uvquickshade7 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_subnet1_uvquickshade7 = `run("opadd -e -n -v uvquickshade uvquickshade7")`
oplocate -x `$arg2 + 2.8235292434692383` -y `$arg3 + 1.2404530048370361` $_obj_geo1_uv_fixer_subnet1_uvquickshade7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_uvquickshade7
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_uvquickshade7
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet1_uvquickshade7

# Node $_obj_geo1_uv_fixer_subnet1_attribtransfer2 (Sop/attribtransfer)
set _obj_geo1_uv_fixer_subnet1_attribtransfer2 = `run("opadd -e -n -v attribtransfer attribtransfer2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.5065000000000008` $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet1_attribtransfer2 cardswitcher ( 1 1 ) primitiveattribs ( off ) pointattribs ( off ) vertexattribs ( on ) vertexattriblist ( 'uv piece' ) copyvariable ( off ) kernelradius ( 0.10000000000000001 ) threshold ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_attribtransfer2

# Node $_obj_geo1_uv_fixer_subnet1_fuse3 (Sop/fuse)
set _obj_geo1_uv_fixer_subnet1_fuse3 = `run("opadd -e -n -v fuse fuse3")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.8710000000000004` $_obj_geo1_uv_fixer_subnet1_fuse3
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet1_fuse3 dist ( 0.0001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_fuse3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_fuse3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_fuse3

# Node $_obj_geo1_uv_fixer_subnet1_output1 (Sop/output)
set _obj_geo1_uv_fixer_subnet1_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.1667292358398438` -y `$arg3 + -2.9095188274383545` $_obj_geo1_uv_fixer_subnet1_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_output1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_output1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_output1

# Node $_obj_geo1_uv_fixer_subnet1_switch1 (Sop/switch)
set _obj_geo1_uv_fixer_subnet1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.1667294502258301` -y `$arg3 + -1.9918718338012695` $_obj_geo1_uv_fixer_subnet1_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet1_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../clorize_piece")' $_obj_geo1_uv_fixer_subnet1_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_switch1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_switch1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_switch1

# Node $_obj_geo1_uv_fixer_subnet1_switch2 (Sop/switch)
set _obj_geo1_uv_fixer_subnet1_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.52901172637939453` $_obj_geo1_uv_fixer_subnet1_switch2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet1_switch2 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../uv_check")' $_obj_geo1_uv_fixer_subnet1_switch2/input
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet1_switch2 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet1_switch2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet1_switch2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet1_switch2
oporder -e attribwrangle2 color3 uvquickshade7 attribtransfer2 fuse3 output1 switch1 switch2 
opcf ..

# Node $_obj_geo1_uv_fixer_ray1 (Sop/ray)
set _obj_geo1_uv_fixer_ray1 = `run("opadd -e -n -v ray ray1")`
oplocate -x `$arg2 + -2.4993896484375` -y `$arg3 + -11.242351531982422` $_obj_geo1_uv_fixer_ray1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_ray1 dirx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_uv_fixer_ray1/dirx
chadd -t 0 0 $_obj_geo1_uv_fixer_ray1 diry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_uv_fixer_ray1/diry
chadd -t 0 0 $_obj_geo1_uv_fixer_ray1 dirz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_uv_fixer_ray1/dirz
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_ray1 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_ray1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_ray1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_ray1

# Node $_obj_geo1_uv_fixer_null1 (Sop/null)
set _obj_geo1_uv_fixer_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -2.4993886947631836` -y `$arg3 + -11.988811492919922` $_obj_geo1_uv_fixer_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_null1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_null1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_null1

# Node $_obj_geo1_uv_fixer_ray2 (Sop/ray)
set _obj_geo1_uv_fixer_ray2 = `run("opadd -e -n -v ray ray2")`
oplocate -x `$arg2 + -8.6422478912353515` -y `$arg3 + -11.761212219238281` $_obj_geo1_uv_fixer_ray2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_ray2 dirx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_uv_fixer_ray2/dirx
chadd -t 0 0 $_obj_geo1_uv_fixer_ray2 diry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_uv_fixer_ray2/diry
chadd -t 0 0 $_obj_geo1_uv_fixer_ray2 dirz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_uv_fixer_ray2/dirz
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_ray2 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_ray2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_ray2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_ray2

# Node $_obj_geo1_uv_fixer_ray3 (Sop/ray)
set _obj_geo1_uv_fixer_ray3 = `run("opadd -e -n -v ray ray3")`
oplocate -x `$arg2 + -5.4212689399719238` -y `$arg3 + -11.595293045043945` $_obj_geo1_uv_fixer_ray3
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_ray3 dirx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_uv_fixer_ray3/dirx
chadd -t 0 0 $_obj_geo1_uv_fixer_ray3 diry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_uv_fixer_ray3/diry
chadd -t 0 0 $_obj_geo1_uv_fixer_ray3 dirz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_uv_fixer_ray3/dirz
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_ray3 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b on $_obj_geo1_uv_fixer_ray3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_ray3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_ray3
opcf $_obj_geo1_uv_fixer_subnet2

# Node $_obj_geo1_uv_fixer_subnet2_uvquickshade7 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_subnet2_uvquickshade7 = `run("opadd -e -n -v uvquickshade uvquickshade7")`
oplocate -x `$arg2 + 2.8235299999999999` -y `$arg3 + 1.2404500000000001` $_obj_geo1_uv_fixer_subnet2_uvquickshade7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_uvquickshade7
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_uvquickshade7
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet2_uvquickshade7

# Node $_obj_geo1_uv_fixer_subnet2_attribtransfer2 (Sop/attribtransfer)
set _obj_geo1_uv_fixer_subnet2_attribtransfer2 = `run("opadd -e -n -v attribtransfer attribtransfer2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.5065` $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet2_attribtransfer2 cardswitcher ( 1 1 ) primitiveattribs ( off ) pointattribs ( off ) vertexattribs ( on ) vertexattriblist ( 'uv piece' ) copyvariable ( off ) kernelradius ( 0.10000000000000001 ) threshold ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_attribtransfer2

# Node $_obj_geo1_uv_fixer_subnet2_fuse3 (Sop/fuse)
set _obj_geo1_uv_fixer_subnet2_fuse3 = `run("opadd -e -n -v fuse fuse3")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.871` $_obj_geo1_uv_fixer_subnet2_fuse3
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet2_fuse3 dist ( 0.0001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_fuse3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_fuse3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_fuse3

# Node $_obj_geo1_uv_fixer_subnet2_output1 (Sop/output)
set _obj_geo1_uv_fixer_subnet2_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.16673` -y `$arg3 + -2.9095200000000001` $_obj_geo1_uv_fixer_subnet2_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_output1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_output1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_output1

# Node $_obj_geo1_uv_fixer_subnet2_switch1 (Sop/switch)
set _obj_geo1_uv_fixer_subnet2_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.16673` -y `$arg3 + -1.99187` $_obj_geo1_uv_fixer_subnet2_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet2_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../clorize_piece")' $_obj_geo1_uv_fixer_subnet2_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_switch1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_switch1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_switch1

# Node $_obj_geo1_uv_fixer_subnet2_switch2 (Sop/switch)
set _obj_geo1_uv_fixer_subnet2_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.52901200000000004` $_obj_geo1_uv_fixer_subnet2_switch2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet2_switch2 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../uv_check")' $_obj_geo1_uv_fixer_subnet2_switch2/input
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet2_switch2 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet2_switch2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet2_switch2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet2_switch2
oporder -e attribwrangle2 color3 uvquickshade7 attribtransfer2 fuse3 output1 switch1 switch2 
opcf ..
opcf $_obj_geo1_uv_fixer_subnet3

# Node $_obj_geo1_uv_fixer_subnet3_uvquickshade7 (Sop/uvquickshade)
set _obj_geo1_uv_fixer_subnet3_uvquickshade7 = `run("opadd -e -n -v uvquickshade uvquickshade7")`
oplocate -x `$arg2 + 2.8235299999999999` -y `$arg3 + 1.2404500000000001` $_obj_geo1_uv_fixer_subnet3_uvquickshade7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_uvquickshade7
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_uvquickshade7
opuserdata -n '___Version___' -v '' $_obj_geo1_uv_fixer_subnet3_uvquickshade7

# Node $_obj_geo1_uv_fixer_subnet3_attribtransfer2 (Sop/attribtransfer)
set _obj_geo1_uv_fixer_subnet3_attribtransfer2 = `run("opadd -e -n -v attribtransfer attribtransfer2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 2.5065` $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet3_attribtransfer2 cardswitcher ( 1 1 ) primitiveattribs ( off ) pointattribs ( off ) vertexattribs ( on ) vertexattriblist ( 'uv piece' ) copyvariable ( off ) kernelradius ( 0.10000000000000001 ) threshold ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_attribtransfer2

# Node $_obj_geo1_uv_fixer_subnet3_fuse3 (Sop/fuse)
set _obj_geo1_uv_fixer_subnet3_fuse3 = `run("opadd -e -n -v fuse fuse3")`
oplocate -x `$arg2 + 1` -y `$arg3 + 3.871` $_obj_geo1_uv_fixer_subnet3_fuse3
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet3_fuse3 dist ( 0.0001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_fuse3
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_fuse3
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_fuse3

# Node $_obj_geo1_uv_fixer_subnet3_output1 (Sop/output)
set _obj_geo1_uv_fixer_subnet3_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.16673` -y `$arg3 + -2.9095200000000001` $_obj_geo1_uv_fixer_subnet3_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_output1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_output1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_output1

# Node $_obj_geo1_uv_fixer_subnet3_switch1 (Sop/switch)
set _obj_geo1_uv_fixer_subnet3_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.16673` -y `$arg3 + -1.99187` $_obj_geo1_uv_fixer_subnet3_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet3_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../clorize_piece")' $_obj_geo1_uv_fixer_subnet3_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_switch1
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_switch1
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_switch1

# Node $_obj_geo1_uv_fixer_subnet3_switch2 (Sop/switch)
set _obj_geo1_uv_fixer_subnet3_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 1` -y `$arg3 + 0.52901200000000004` $_obj_geo1_uv_fixer_subnet3_switch2
chblockbegin
chadd -t 0 0 $_obj_geo1_uv_fixer_subnet3_switch2 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../uv_check")' $_obj_geo1_uv_fixer_subnet3_switch2/input
chblockend
opparm -V 15.5.480 $_obj_geo1_uv_fixer_subnet3_switch2 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_uv_fixer_subnet3_switch2
opexprlanguage -s hscript $_obj_geo1_uv_fixer_subnet3_switch2
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_uv_fixer_subnet3_switch2
oporder -e attribwrangle2 color3 uvquickshade7 attribtransfer2 fuse3 output1 switch1 switch2 
opcf ..
oporder -e color2 noise box1 subdivide1 uvunwrap1 uvquickshade1 connectivity1 remesh2 foreach_end1 foreach_begin1 group1 fuse1 uvquickshade3 remesh3 uvquickshade4 vertexsplit1 fuse2 attribpromote1 convertvdb1 vdbfrompolygons1 uvquickshade6 attribtransfer1 divide1 attribcast1 foreach_end2 foreach_begin2 group2 dissolve1 convertline1 uvquickshade8 subnet1 ray1 null1 ray2 ray3 subnet2 subnet3 
opcf ..
opset -p on $_obj_geo1_uv_fixer

opcf $arg1
opcf $_obj_geo1_uv_fixer
opwire -n $_obj_geo1_uv_fixer_attribtransfer1 -0 $_obj_geo1_uv_fixer_color2
opwire -n $_obj_geo1_uv_fixer_uvunwrap1 -0 $_obj_geo1_uv_fixer_noise
opcf $_obj_geo1_uv_fixer_noise
opwire -n $_obj_geo1_uv_fixer_noise_add1 -0 $_obj_geo1_uv_fixer_noise_geometryvopoutput1
opwire -n $_obj_geo1_uv_fixer_noise_vectohvec1 -0 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_freq -1 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_offset -2 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_amp -3 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_rough -4 $_obj_geo1_uv_fixer_noise_aaflownoise1
opwire -n $_obj_geo1_uv_fixer_noise_geometryvopglobal1 -0 $_obj_geo1_uv_fixer_noise_vectohvec1
opwire -n $_obj_geo1_uv_fixer_noise_geometryvopglobal1 -0 $_obj_geo1_uv_fixer_noise_add1
opwire -n $_obj_geo1_uv_fixer_noise_aaflownoise1 -1 $_obj_geo1_uv_fixer_noise_add1
opcf ..
opwire -n $_obj_geo1_uv_fixer_box1 -0 $_obj_geo1_uv_fixer_subdivide1
opwire -n $_obj_geo1_uv_fixer_subdivide1 -0 $_obj_geo1_uv_fixer_uvunwrap1
opwire -n $_obj_geo1_uv_fixer_noise -0 $_obj_geo1_uv_fixer_uvquickshade1
opwire -n $_obj_geo1_uv_fixer_noise -0 $_obj_geo1_uv_fixer_connectivity1
opwire -n $_obj_geo1_uv_fixer_vertexsplit1 -0 $_obj_geo1_uv_fixer_remesh2
opwire -n $_obj_geo1_uv_fixer_group1 -0 $_obj_geo1_uv_fixer_foreach_end1
opwire -n $_obj_geo1_uv_fixer_connectivity1 -0 $_obj_geo1_uv_fixer_foreach_begin1
opwire -n $_obj_geo1_uv_fixer_foreach_begin1 -0 $_obj_geo1_uv_fixer_group1
opwire -n $_obj_geo1_uv_fixer_foreach_end1 -0 $_obj_geo1_uv_fixer_fuse1
opwire -n $_obj_geo1_uv_fixer_fuse2 -0 $_obj_geo1_uv_fixer_uvquickshade3
opwire -n $_obj_geo1_uv_fixer_noise -0 $_obj_geo1_uv_fixer_remesh3
opwire -n $_obj_geo1_uv_fixer_remesh3 -0 $_obj_geo1_uv_fixer_uvquickshade4
opwire -n $_obj_geo1_uv_fixer_fuse1 -0 $_obj_geo1_uv_fixer_vertexsplit1
opwire -n $_obj_geo1_uv_fixer_remesh2 -0 $_obj_geo1_uv_fixer_fuse2
opwire -n $_obj_geo1_uv_fixer_connectivity1 -0 $_obj_geo1_uv_fixer_attribpromote1
opwire -n $_obj_geo1_uv_fixer_vdbfrompolygons1 -0 $_obj_geo1_uv_fixer_convertvdb1
opwire -n $_obj_geo1_uv_fixer_attribcast1 -1 $_obj_geo1_uv_fixer_convertvdb1
opwire -n $_obj_geo1_uv_fixer_attribcast1 -0 $_obj_geo1_uv_fixer_vdbfrompolygons1
opwire -n $_obj_geo1_uv_fixer_color2 -0 $_obj_geo1_uv_fixer_uvquickshade6
opwire -n $_obj_geo1_uv_fixer_divide1 -0 $_obj_geo1_uv_fixer_attribtransfer1
opwire -n $_obj_geo1_uv_fixer_attribcast1 -1 $_obj_geo1_uv_fixer_attribtransfer1
opwire -n $_obj_geo1_uv_fixer_convertvdb1 -0 $_obj_geo1_uv_fixer_divide1
opwire -n $_obj_geo1_uv_fixer_uvquickshade8 -0 $_obj_geo1_uv_fixer_attribcast1
opwire -n $_obj_geo1_uv_fixer_group2 -0 $_obj_geo1_uv_fixer_foreach_end2
opwire -n $_obj_geo1_uv_fixer_connectivity1 -0 $_obj_geo1_uv_fixer_foreach_begin2
opwire -n $_obj_geo1_uv_fixer_foreach_begin2 -0 $_obj_geo1_uv_fixer_group2
opwire -n $_obj_geo1_uv_fixer_foreach_end2 -0 $_obj_geo1_uv_fixer_dissolve1
opwire -n $_obj_geo1_uv_fixer_dissolve1 -0 $_obj_geo1_uv_fixer_convertline1
opwire -n $_obj_geo1_uv_fixer_attribpromote1 -0 $_obj_geo1_uv_fixer_uvquickshade8
opwire -n $_obj_geo1_uv_fixer_ray2 -0 $_obj_geo1_uv_fixer_subnet1
opwire -n $_obj_geo1_uv_fixer_null1 -1 $_obj_geo1_uv_fixer_subnet1
opwire -n $_obj_geo1_uv_fixer_ray3 -2 $_obj_geo1_uv_fixer_subnet1
opcf $_obj_geo1_uv_fixer_subnet1
opwire -n -i 0 -0 $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opwire -n -i 1 -1 $_obj_geo1_uv_fixer_subnet1_attribwrangle2
opwire -n $_obj_geo1_uv_fixer_subnet1_switch2 -0 $_obj_geo1_uv_fixer_subnet1_color3
opwire -n $_obj_geo1_uv_fixer_subnet1_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet1_uvquickshade7
opwire -n $_obj_geo1_uv_fixer_subnet1_fuse3 -0 $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opwire -n -i 2 -1 $_obj_geo1_uv_fixer_subnet1_attribtransfer2
opwire -n $_obj_geo1_uv_fixer_subnet1_attribwrangle2 -0 $_obj_geo1_uv_fixer_subnet1_fuse3
opwire -n $_obj_geo1_uv_fixer_subnet1_switch1 -0 $_obj_geo1_uv_fixer_subnet1_output1
opwire -n $_obj_geo1_uv_fixer_subnet1_switch2 -0 $_obj_geo1_uv_fixer_subnet1_switch1
opwire -n $_obj_geo1_uv_fixer_subnet1_color3 -1 $_obj_geo1_uv_fixer_subnet1_switch1
opwire -n $_obj_geo1_uv_fixer_subnet1_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet1_switch2
opwire -n $_obj_geo1_uv_fixer_subnet1_uvquickshade7 -1 $_obj_geo1_uv_fixer_subnet1_switch2
opcf ..
opwire -n $_obj_geo1_uv_fixer_convertline1 -0 $_obj_geo1_uv_fixer_ray1
opwire -n $_obj_geo1_uv_fixer_uvquickshade6 -1 $_obj_geo1_uv_fixer_ray1
opwire -n $_obj_geo1_uv_fixer_ray1 -0 $_obj_geo1_uv_fixer_null1
opwire -n $_obj_geo1_uv_fixer_uvquickshade6 -0 $_obj_geo1_uv_fixer_ray2
opwire -n $_obj_geo1_uv_fixer_attribcast1 -1 $_obj_geo1_uv_fixer_ray2
opwire -n $_obj_geo1_uv_fixer_attribcast1 -0 $_obj_geo1_uv_fixer_ray3
opwire -n $_obj_geo1_uv_fixer_uvquickshade6 -1 $_obj_geo1_uv_fixer_ray3
opwire -n $_obj_geo1_uv_fixer_subnet1 -0 $_obj_geo1_uv_fixer_subnet2
opwire -n $_obj_geo1_uv_fixer_null1 -1 $_obj_geo1_uv_fixer_subnet2
opwire -n $_obj_geo1_uv_fixer_ray3 -2 $_obj_geo1_uv_fixer_subnet2
opcf $_obj_geo1_uv_fixer_subnet2
opwire -n -i 0 -0 $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opwire -n -i 1 -1 $_obj_geo1_uv_fixer_subnet2_attribwrangle2
opwire -n $_obj_geo1_uv_fixer_subnet2_switch2 -0 $_obj_geo1_uv_fixer_subnet2_color3
opwire -n $_obj_geo1_uv_fixer_subnet2_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet2_uvquickshade7
opwire -n $_obj_geo1_uv_fixer_subnet2_fuse3 -0 $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opwire -n -i 2 -1 $_obj_geo1_uv_fixer_subnet2_attribtransfer2
opwire -n $_obj_geo1_uv_fixer_subnet2_attribwrangle2 -0 $_obj_geo1_uv_fixer_subnet2_fuse3
opwire -n $_obj_geo1_uv_fixer_subnet2_switch1 -0 $_obj_geo1_uv_fixer_subnet2_output1
opwire -n $_obj_geo1_uv_fixer_subnet2_switch2 -0 $_obj_geo1_uv_fixer_subnet2_switch1
opwire -n $_obj_geo1_uv_fixer_subnet2_color3 -1 $_obj_geo1_uv_fixer_subnet2_switch1
opwire -n $_obj_geo1_uv_fixer_subnet2_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet2_switch2
opwire -n $_obj_geo1_uv_fixer_subnet2_uvquickshade7 -1 $_obj_geo1_uv_fixer_subnet2_switch2
opcf ..
opwire -n $_obj_geo1_uv_fixer_subnet2 -0 $_obj_geo1_uv_fixer_subnet3
opwire -n $_obj_geo1_uv_fixer_null1 -1 $_obj_geo1_uv_fixer_subnet3
opwire -n $_obj_geo1_uv_fixer_ray3 -2 $_obj_geo1_uv_fixer_subnet3
opcf $_obj_geo1_uv_fixer_subnet3
opwire -n -i 0 -0 $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opwire -n -i 1 -1 $_obj_geo1_uv_fixer_subnet3_attribwrangle2
opwire -n $_obj_geo1_uv_fixer_subnet3_switch2 -0 $_obj_geo1_uv_fixer_subnet3_color3
opwire -n $_obj_geo1_uv_fixer_subnet3_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet3_uvquickshade7
opwire -n $_obj_geo1_uv_fixer_subnet3_fuse3 -0 $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opwire -n -i 2 -1 $_obj_geo1_uv_fixer_subnet3_attribtransfer2
opwire -n $_obj_geo1_uv_fixer_subnet3_attribwrangle2 -0 $_obj_geo1_uv_fixer_subnet3_fuse3
opwire -n $_obj_geo1_uv_fixer_subnet3_switch1 -0 $_obj_geo1_uv_fixer_subnet3_output1
opwire -n $_obj_geo1_uv_fixer_subnet3_switch2 -0 $_obj_geo1_uv_fixer_subnet3_switch1
opwire -n $_obj_geo1_uv_fixer_subnet3_color3 -1 $_obj_geo1_uv_fixer_subnet3_switch1
opwire -n $_obj_geo1_uv_fixer_subnet3_attribtransfer2 -0 $_obj_geo1_uv_fixer_subnet3_switch2
opwire -n $_obj_geo1_uv_fixer_subnet3_uvquickshade7 -1 $_obj_geo1_uv_fixer_subnet3_switch2
opcf ..
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_uv_fixer
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_uv_fixer
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="colorize" label="colorize" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import colorize

colorize.execute()]]></script>
  </tool>

  <tool name="jumpTpDependency" label="jumpTpDependency" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import jumpTpDependency

jumpTpDependency.execute()]]></script>
  </tool>

  <tool name="recursiveReferenceCopy" label="recursiveReferenceCopy" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import recursiveReferenceCopy

reload(recursiveReferenceCopy)

recursiveReferenceCopy.execute()]]></script>
  </tool>

  <tool name="disconnectOutputNodes" label="disconnectOutputNodes" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import disconnectOutputNodes

disconnectOutputNodes.execute()]]></script>
  </tool>

  <tool name="attribvop0" label="noise_1d" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Tuesday November 08, 22:40 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_noise_1d (Sop/attribvop)
set _obj_geo1_noise_1d = `run("opadd -e -n -v attribvop noise_1d")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_noise_1d
opspareds '    parm { 	name	"bindgroup" 	baseparm 	label	"Group" 	export	none 	bindselector points "Modify Points" 	    "Select the points to affect and press Enter to complete." 	    0 1 0xffffffff 0 bindgrouptype 0     }     parm { 	name	"bindgrouptype" 	baseparm 	label	"Group Type" 	export	none     }     parm { 	name	"bindclass" 	baseparm 	label	"Run Over" 	export	none     }     parm { 	name	"vex_numcount" 	baseparm 	label	"Number Count" 	export	none     }     parm { 	name	"vex_threadjobsize" 	baseparm 	label	"Thread Job Size" 	export	none     }     group { 	name	"stdswitcher3" 	label	"Vex Setup"  	parm { 	    name	"vexsrc" 	    baseparm 	    label	"Vex Source" 	    export	all 	} 	parm { 	    name	"shoppath" 	    baseparm 	    label	"Shop Path" 	    export	all 	} 	parm { 	    name	"script" 	    baseparm 	    label	"Script" 	    export	all 	} 	parm { 	    name	"clear" 	    baseparm 	    label	"Re-load VEX Functions" 	    export	all 	} 	parm { 	    name	"vop_compiler" 	    baseparm 	    label	"Compiler" 	    export	none 	} 	parm { 	    name	"vop_forcecompile" 	    baseparm 	    label	"Force Compile" 	    export	none 	} 	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_multithread" 	    baseparm 	    label	"Enable Multithreading" 	    export	none 	}     }      group { 	name	"stdswitcher3_1" 	label	"Attribute Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	}     }      parm { 	name	"ptnum" 	label	"Point Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"vtxnum" 	label	"Vertex Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"primnum" 	label	"Primitive Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"id" 	label	"Id" 	type	integer 	invisible 	default	{ "-1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numpt" 	label	"Number of Points" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numvtx" 	label	"Number of Vertices" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numprim" 	label	"Number of Prims" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Time" 	label	"Time" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"TimeInc" 	label	"Time Inc" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Frame" 	label	"Frame" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"life" 	label	"Life" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"age" 	label	"Age" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput2" 	label	"Second Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput3" 	label	"Third Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput4" 	label	"Fourth Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput1" 	label	"First Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"uv" 	label	"UV" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"P" 	label	"P" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"v" 	label	"Velocity" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"force" 	label	"Force" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Cd" 	label	"Cd" 	type	float 	invisible 	size	3 	default	{ "1" "1" "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"N" 	label	"N" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"freq" 	label	"Frequency" 	type	float 	size	4 	default	{ "1" "1" "1" "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"offset" 	label	"Offset" 	type	float 	size	4 	default	{ "0" "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"amp" 	label	"Amplitude" 	type	float 	default	{ "1" } 	range	{ -1 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"rough" 	label	"Roughness" 	type	float 	default	{ "0.5" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"ramp" 	label	"ramp" 	type	ramp_flt 	default	{ "2" } 	range	{ 1! 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "rampbasis_var" "ramp_the_basis_strings" } 	parmtag	{ "rampbasisdefault" "linear" } 	parmtag	{ "rampkeys_var" "ramp_the_key_positions" } 	parmtag	{ "rampshowcontrolsdefault" "1" } 	parmtag	{ "rampvalues_var" "ramp_the_key_values" } 	parmtag	{ "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_noise_1d
opparm $_obj_geo1_noise_1d  bindings ( 0 ) groupbindings ( 0 ) ramp ( 2 )
chblockbegin
chadd -t 0 0 $_obj_geo1_noise_1d freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise_1d/freq2
chadd -t 0 0 $_obj_geo1_noise_1d freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise_1d/freq3
chblockend
opparm -V 15.5.480 $_obj_geo1_noise_1d freq ( 1 freq2 freq3 1 ) ramp2pos ( 1 ) ramp2value ( 1 )
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_noise_1d
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_noise_1d
opexprlanguage -s hscript $_obj_geo1_noise_1d
opcf $_obj_geo1_noise_1d

# Node $_obj_geo1_noise_1d_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_noise_1d_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 2.9616677732799999` -y `$arg3 + 1.69100370842` $_obj_geo1_noise_1d_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_noise_1d_geometryvopglobal1

# Node $_obj_geo1_noise_1d_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_noise_1d_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 12.87767219543457` -y `$arg3 + 2.8490509986877441` $_obj_geo1_noise_1d_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_noise_1d_geometryvopoutput1

# Node $_obj_geo1_noise_1d_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_noise_1d_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 6.7875505371045` -y `$arg3 + 2.2842508983614001` $_obj_geo1_noise_1d_aaflownoise1
opparm $_obj_geo1_noise_1d_aaflownoise1 signature ( fp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_noise_1d_aaflownoise1

# Node $_obj_geo1_noise_1d_vectohvec1 (Vop/vectohvec)
set _obj_geo1_noise_1d_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 4.8480950279187001` -y `$arg3 + 3.2726506423952002` $_obj_geo1_noise_1d_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_vectohvec1
opexprlanguage -s hscript $_obj_geo1_noise_1d_vectohvec1

# Node $_obj_geo1_noise_1d_freq (Vop/parameter)
set _obj_geo1_noise_1d_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 4.0875505490253996` -y `$arg3 + 3.6842508745195` $_obj_geo1_noise_1d_freq
opparm -V 15.5.480 $_obj_geo1_noise_1d_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_freq
opexprlanguage -s hscript $_obj_geo1_noise_1d_freq

# Node $_obj_geo1_noise_1d_offset (Vop/parameter)
set _obj_geo1_noise_1d_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 4.1875505132626003` -y `$arg3 + 3.4842509460450999` $_obj_geo1_noise_1d_offset
opparm -V 15.5.480 $_obj_geo1_noise_1d_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_offset
opexprlanguage -s hscript $_obj_geo1_noise_1d_offset

# Node $_obj_geo1_noise_1d_amp (Vop/parameter)
set _obj_geo1_noise_1d_amp = `run("opadd -e -n -v parameter amp")`
oplocate -x `$arg2 + 4.2875505371045` -y `$arg3 + 3.2842508983614001` $_obj_geo1_noise_1d_amp
opparm -V 15.5.480 $_obj_geo1_noise_1d_amp parmname ( amp ) parmlabel ( Amplitude ) floatdef ( 1 ) rangeflt ( -1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_amp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_amp
opexprlanguage -s hscript $_obj_geo1_noise_1d_amp

# Node $_obj_geo1_noise_1d_rough (Vop/parameter)
set _obj_geo1_noise_1d_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 4.387550531144` -y `$arg3 + 3.0842509102823001` $_obj_geo1_noise_1d_rough
opparm -V 15.5.480 $_obj_geo1_noise_1d_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_rough
opexprlanguage -s hscript $_obj_geo1_noise_1d_rough

# Node $_obj_geo1_noise_1d_fit1 (Vop/fit)
set _obj_geo1_noise_1d_fit1 = `run("opadd -e -n -v fit fit1")`
oplocate -x `$arg2 + 8.498382568359375` -y `$arg3 + 2.8490509986877441` $_obj_geo1_noise_1d_fit1
opparm $_obj_geo1_noise_1d_fit1 srcmin ( -0.5 ) srcmax ( 0.5 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_fit1
opexprlanguage -s hscript $_obj_geo1_noise_1d_fit1

# Node $_obj_geo1_noise_1d_ramp1 (Vop/rampparm)
set _obj_geo1_noise_1d_ramp1 = `run("opadd -e -n -v rampparm ramp1")`
oplocate -x `$arg2 + 10.572565078735352` -y `$arg3 + 2.7078509330749512` $_obj_geo1_noise_1d_ramp1
opparm -V 15.5.480 $_obj_geo1_noise_1d_ramp1 ramptype ( flt )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_ramp1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_ramp1
opexprlanguage -s hscript $_obj_geo1_noise_1d_ramp1
opcf ..
opcf $_obj_geo1_noise_1d
oporder -e geometryvopglobal1 geometryvopoutput1 aaflownoise1 vectohvec1 freq offset amp rough fit1 ramp1 
opcf ..
opset -p on $_obj_geo1_noise_1d

opcf $arg1
opcf $_obj_geo1_noise_1d
opwire -n $_obj_geo1_noise_1d_ramp1 -3 $_obj_geo1_noise_1d_geometryvopoutput1
opwire -n $_obj_geo1_noise_1d_vectohvec1 -0 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_freq -1 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_offset -2 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_amp -3 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_rough -4 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_geometryvopglobal1 -0 $_obj_geo1_noise_1d_vectohvec1
opwire -n $_obj_geo1_noise_1d_aaflownoise1 -0 $_obj_geo1_noise_1d_fit1
opwire -n $_obj_geo1_noise_1d_fit1 -0 $_obj_geo1_noise_1d_ramp1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_noise_1d
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_noise_1d
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet0" label="mix_to_noise" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Tuesday November 08, 22:50 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_mix_to_noise (Sop/subnet)
set _obj_geo1_mix_to_noise = `run("opadd -e -n -v subnet mix_to_noise")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_mix_to_noise
opspareds '    parm { 	name	"label1" 	baseparm 	label	"Input #1 Label" 	invisible 	export	dialog     }     parm { 	name	"label2" 	baseparm 	label	"Input #2 Label" 	invisible 	export	dialog     }     parm { 	name	"label3" 	baseparm 	label	"Input #3 Label" 	invisible 	export	dialog     }     parm { 	name	"label4" 	baseparm 	label	"Input #4 Label" 	invisible 	export	dialog     }     parm { 	name	"parm_name" 	label	"parm_name" 	type	string 	default	{ "parm" } 	range	{ 0 1 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" }     }     parm { 	name	"freq" 	label	"Frequency" 	type	float 	size	4 	default	{ "1" [ "ch(\\"freq1\\")" hscript-expr ] [ "ch(\\"freq1\\")" hscript-expr ] "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" } 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"offset" 	label	"Offset" 	type	float 	size	4 	default	{ "0" "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" } 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"rough" 	label	"Roughness" 	type	float 	default	{ "0.5" } 	range	{ 0 1 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" } 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"bias" 	label	"Bias" 	type	float 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "autoscope" "0000000000000000" }     } ' $_obj_geo1_mix_to_noise
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise freq2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise/freq2
chadd -t 0 0 $_obj_geo1_mix_to_noise freq3
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise/freq3
chblockend
opparm -V 15.5.480 $_obj_geo1_mix_to_noise parm_name ( v )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_mix_to_noise
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise
opexprlanguage -s hscript $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise

# Node $_obj_geo1_mix_to_noise_noise (Sop/attribvop)
set _obj_geo1_mix_to_noise_noise = `run("opadd -e -n -v attribvop noise")`
oplocate -x `$arg2 + 2.7294120788574219` -y `$arg3 + 3.9117059707641602` $_obj_geo1_mix_to_noise_noise
opspareds '    parm { 	name	"bindgroup" 	baseparm 	label	"Group" 	export	none 	bindselector points "Modify Points" 	    "Select the points to affect and press Enter to complete." 	    0 1 0xffffffff 0 bindgrouptype 0     }     parm { 	name	"bindgrouptype" 	baseparm 	label	"Group Type" 	export	none     }     parm { 	name	"bindclass" 	baseparm 	label	"Run Over" 	export	none     }     parm { 	name	"vex_numcount" 	baseparm 	label	"Number Count" 	export	none     }     parm { 	name	"vex_threadjobsize" 	baseparm 	label	"Thread Job Size" 	export	none     }     group { 	name	"stdswitcher3" 	label	"Vex Setup"  	parm { 	    name	"vexsrc" 	    baseparm 	    label	"Vex Source" 	    export	all 	} 	parm { 	    name	"shoppath" 	    baseparm 	    label	"Shop Path" 	    export	all 	} 	parm { 	    name	"script" 	    baseparm 	    label	"Script" 	    export	all 	} 	parm { 	    name	"clear" 	    baseparm 	    label	"Re-load VEX Functions" 	    export	all 	} 	parm { 	    name	"vop_compiler" 	    baseparm 	    label	"Compiler" 	    export	none 	} 	parm { 	    name	"vop_forcecompile" 	    baseparm 	    label	"Force Compile" 	    export	none 	} 	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_multithread" 	    baseparm 	    label	"Enable Multithreading" 	    export	none 	}     }      group { 	name	"stdswitcher3_1" 	label	"Attribute Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	}     }      parm { 	name	"ptnum" 	label	"Point Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"vtxnum" 	label	"Vertex Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"primnum" 	label	"Primitive Number" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"id" 	label	"Id" 	type	integer 	invisible 	default	{ "-1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numpt" 	label	"Number of Points" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numvtx" 	label	"Number of Vertices" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"numprim" 	label	"Number of Prims" 	type	integer 	invisible 	default	{ "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Time" 	label	"Time" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"TimeInc" 	label	"Time Inc" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Frame" 	label	"Frame" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"life" 	label	"Life" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"age" 	label	"Age" 	type	float 	invisible 	default	{ "0" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput2" 	label	"Second Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput3" 	label	"Third Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput4" 	label	"Fourth Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"OpInput1" 	label	"First Input" 	type	string 	invisible 	default	{ "" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"uv" 	label	"UV" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"P" 	label	"P" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"force" 	label	"Force" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"Cd" 	label	"Cd" 	type	float 	invisible 	size	3 	default	{ "1" "1" "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"N" 	label	"N" 	type	float 	invisible 	size	3 	default	{ "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"freq" 	label	"Frequency" 	type	float 	size	4 	default	{ "1" "1" "1" "1" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"offset" 	label	"Offset" 	type	float 	size	4 	default	{ "0" "0" "0" "0" } 	range	{ 0 10 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     }     parm { 	name	"rough" 	label	"Roughness" 	type	float 	default	{ "0.5" } 	range	{ 0 1 } 	export	none 	parmtag	{ "parmvop" "1" } 	parmtag	{ "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_mix_to_noise_noise
opparm $_obj_geo1_mix_to_noise_noise  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../freq1")' $_obj_geo1_mix_to_noise_noise/freq1
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise_noise/freq2
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise_noise/freq3
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq4
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../freq4")' $_obj_geo1_mix_to_noise_noise/freq4
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset1")' $_obj_geo1_mix_to_noise_noise/offset1
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset2")' $_obj_geo1_mix_to_noise_noise/offset2
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset3
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset3")' $_obj_geo1_mix_to_noise_noise/offset3
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset4
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset4")' $_obj_geo1_mix_to_noise_noise/offset4
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise rough
chkey -t 0 -v 0.5 -m 0 -a 0 -A 0 -T a  -F 'ch("../rough")' $_obj_geo1_mix_to_noise_noise/rough
chblockend
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_mix_to_noise_noise
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_noise
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise
opcf $_obj_geo1_mix_to_noise_noise

# Node $_obj_geo1_mix_to_noise_noise_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_mix_to_noise_noise_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.49108` -y `$arg3 + 1.3733599999999999` $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_geometryvopglobal1

# Node $_obj_geo1_mix_to_noise_noise_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_mix_to_noise_noise_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 5.3169599999999999` -y `$arg3 + 1.96661` $_obj_geo1_mix_to_noise_noise_aaflownoise1
opparm $_obj_geo1_mix_to_noise_noise_aaflownoise1 signature ( vp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_aaflownoise1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_aaflownoise1

# Node $_obj_geo1_mix_to_noise_noise_vectohvec1 (Vop/vectohvec)
set _obj_geo1_mix_to_noise_noise_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 3.37751` -y `$arg3 + 2.9550100000000001` $_obj_geo1_mix_to_noise_noise_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_vectohvec1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_vectohvec1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_vectohvec1

# Node $_obj_geo1_mix_to_noise_noise_freq (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 2.6169600000000002` -y `$arg3 + 3.3666100000000001` $_obj_geo1_mix_to_noise_noise_freq
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_freq
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_freq
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_freq

# Node $_obj_geo1_mix_to_noise_noise_offset (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 2.7169599999999998` -y `$arg3 + 3.1666099999999999` $_obj_geo1_mix_to_noise_noise_offset
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_offset
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_offset
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_offset

# Node $_obj_geo1_mix_to_noise_noise_rough (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 2.91696` -y `$arg3 + 2.76661` $_obj_geo1_mix_to_noise_noise_rough
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_rough
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_rough
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_rough

# Node $_obj_geo1_mix_to_noise_noise_bind1 (Vop/bind)
set _obj_geo1_mix_to_noise_noise_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 8.295659065246582` -y `$arg3 + 2.955009937286377` $_obj_geo1_mix_to_noise_noise_bind1
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_bind1 parmname ( '`chs("../../parm_name")`' ) parmtype ( vector ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_geo1_mix_to_noise_noise_bind1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_bind1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_bind1
opcf ..

# Node $_obj_geo1_mix_to_noise_mix (Sop/attribwrangle)
set _obj_geo1_mix_to_noise_mix = `run("opadd -e -n -v attribwrangle mix")`
oplocate -x `$arg2 + 1.2623496055603027` -y `$arg3 + 1.5378241539001465` $_obj_geo1_mix_to_noise_mix
opspareds '    group { 	name	"folder1" 	label	"Code"  	parm { 	    name	"group" 	    baseparm 	    label	"Group" 	    export	none 	    bindselector points "Modify Points" 	        "Select the points to affect and press Enter to complete." 	        0 1 0xffffffff 0 grouptype 0 	} 	parm { 	    name	"grouptype" 	    baseparm 	    label	"Group Type" 	    export	none 	} 	parm { 	    name	"class" 	    baseparm 	    label	"Run Over" 	    export	none 	} 	parm { 	    name	"vex_numcount" 	    baseparm 	    label	"Number Count" 	    export	none 	} 	parm { 	    name	"vex_threadjobsize" 	    baseparm 	    label	"Thread Job Size" 	    export	none 	} 	parm { 	    name	"snippet" 	    baseparm 	    label	"VEXpression" 	    export	all 	} 	parm { 	    name	"exportlist" 	    baseparm 	    label	"Attributes to Create" 	    export	none 	} 	parm { 	    name	"vex_strict" 	    baseparm 	    label	"Enforce Prototypes" 	    export	none 	}     }      group { 	name	"folder1_1" 	label	"Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	}     }      parm { 	name	"bias" 	label	"Bias" 	type	float 	default	{ "0" } 	range	{ 0 1 } 	export	none     } ' $_obj_geo1_mix_to_noise_mix
opparm $_obj_geo1_mix_to_noise_mix  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise_mix bias
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../bias")' $_obj_geo1_mix_to_noise_mix/bias
chblockend
opparm $_obj_geo1_mix_to_noise_mix snippet ( 'v@`chs("../parm_name")` = normalize(lerp(normalize(v@`chs("../parm_name")`), normalize(v@opinput1_`chs("../parm_name")`), ch("bias"))) * length(v@`chs("../parm_name")`);' ) bias ( bias )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_mix_to_noise_mix
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_mix
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_mix
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_mix
opcf ..
opcf $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise_noise
oporder -e geometryvopglobal1 aaflownoise1 vectohvec1 freq offset rough bind1 
opcf ..

# Node $_obj_geo1_mix_to_noise_output1 (Sop/output)
set _obj_geo1_mix_to_noise_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.2623496055603027` -y `$arg3 + 0.29860782623291016` $_obj_geo1_mix_to_noise_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_output1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_output1
oporder -e noise mix output1 
opcf ..
opset -p on $_obj_geo1_mix_to_noise

opcf $arg1
opwire -n $_obj_geo1_attribwrangle1 -0 $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise
opwire -n -i 0 -0 $_obj_geo1_mix_to_noise_noise
opcf $_obj_geo1_mix_to_noise_noise
opwire -n $_obj_geo1_mix_to_noise_noise_vectohvec1 -0 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_freq -1 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_offset -2 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_rough -4 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_geometryvopglobal1 -0 $_obj_geo1_mix_to_noise_noise_vectohvec1
opwire -n $_obj_geo1_mix_to_noise_noise_aaflownoise1 -0 $_obj_geo1_mix_to_noise_noise_bind1
opcf ..
opwire -n -i 0 -0 $_obj_geo1_mix_to_noise_mix
opwire -n $_obj_geo1_mix_to_noise_noise -1 $_obj_geo1_mix_to_noise_mix
opwire -n $_obj_geo1_mix_to_noise_mix -0 $_obj_geo1_mix_to_noise_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_mix_to_noise
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_mix_to_noise
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet1" label="GET_interporation_by_id" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_GET_interporation_by_id (Sop/subnet)
set _obj_geo1_GET_interporation_by_id = `run("opadd -e -n -v subnet GET_interporation_by_id")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_GET_interporation_by_id
opspareds '    parm { 	name	"label1" 	baseparm 	label	"Input #1 Label" 	invisible 	export	dialog     }     parm { 	name	"label2" 	baseparm 	label	"Input #2 Label" 	invisible 	export	dialog     }     parm { 	name	"label3" 	baseparm 	label	"Input #3 Label" 	invisible 	export	dialog     }     parm { 	name	"label4" 	baseparm 	label	"Input #4 Label" 	invisible 	export	dialog     }     parm { 	name	"match_by_id" 	label	"match_by_id" 	type	toggle 	default	{ "1" } 	range	{ 0! 10 } 	parmtag	{ "autoscope" "0000000000000000" }     }     parm { 	name	"id_atr" 	label	"id_atr" 	type	string 	default	{ "id" } 	range	{ 0 1 } 	parmtag	{ "autoscope" "0000000000000000" }     } ' $_obj_geo1_GET_interporation_by_id
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_GET_interporation_by_id
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id
opcf $_obj_geo1_GET_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_interporation_by_id (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_interporation_by_id = `run("opadd -e -n -v attribwrangle interporation_by_id")`
oplocate -x `$arg2 + -0.0030000111758708981` -y `$arg3 + -3.6293055612140224` $_obj_geo1_GET_interporation_by_id_interporation_by_id
opspareds '    group { 	name	"folder1" 	label	"Code"  	parm { 	    name	"group" 	    baseparm 	    label	"Group" 	    export	none 	    bindselector points "Modify Points" 	        "Select the points to affect and press Enter to complete." 	        0 1 0xffffffff 0 grouptype 0 	} 	parm { 	    name	"grouptype" 	    baseparm 	    label	"Group Type" 	    export	none 	} 	parm { 	    name	"class" 	    baseparm 	    label	"Run Over" 	    export	none 	} 	parm { 	    name	"vex_numcount" 	    baseparm 	    label	"Number Count" 	    export	none 	} 	parm { 	    name	"vex_threadjobsize" 	    baseparm 	    label	"Thread Job Size" 	    export	none 	} 	parm { 	    name	"snippet" 	    baseparm 	    label	"VEXpression" 	    export	all 	} 	parm { 	    name	"exportlist" 	    baseparm 	    label	"Attributes to Create" 	    export	none 	} 	parm { 	    name	"vex_strict" 	    baseparm 	    label	"Enforce Prototypes" 	    export	none 	}     }      group { 	name	"folder1_1" 	label	"Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	} 	parm { 	    name	"vex_inplace" 	    baseparm 	    label	"Compute Results In Place" 	    export	none 	} 	parm { 	    name	"vex_selectiongroup" 	    baseparm 	    label	"Output Selection Group" 	    export	none 	}     }      parm { 	name	"second_previous_frame" 	label	"Second Previous Frame" 	type	oppath 	default	{ "" } 	parmtag	{ "oprelative" "." }     } ' $_obj_geo1_GET_interporation_by_id_interporation_by_id
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_id  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_interporation_by_id vex_matchattrib
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("../id_atr")' $_obj_geo1_GET_interporation_by_id_interporation_by_id/vex_matchattrib
chblockend
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_id snippet ( 'vector p = @P;\nvector prevPrevP = @P;\nvector prevP = @P;\nvector nextP = @P;\nvector nextNextP = @P;\n\nint idPt = findattribval(1,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    prevP = v@opinput1_P;\n}\n\nidPt = findattribval(2,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    nextP = v@opinput2_P;\n}\n\nidPt = findattribval(3,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    nextNextP = v@opinput3_P;\n}\n\nidPt = findattribval("op:" + chs("second_previous_frame"),"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    prevPrevP = point("op:" + chs("second_previous_frame"),"P", idPt);\n}\n\nvector arrayP[];\nif(rint(@Frame)==floor(@Frame))\n{\n    arrayP = vector[](array(prevP,p,nextP,nextNextP));\n}\nelse\n{\n    arrayP = vector[](array(prevPrevP,prevP,p,nextP));\n}\n\n@P = spline("cubic",frac(@Frame),arrayP);' ) vex_matchattrib ( vex_matchattrib ) folder1 ( 1 1 ) second_previous_frame ( ../OUT_prevPrev_f )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_interporation_by_id
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_interporation_by_id
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_interporation_by_ptnum = `run("opadd -e -n -v attribwrangle interporation_by_ptnum")`
oplocate -x `$arg2 + 4.1869576662367223` -y `$arg3 + -3.6293055612140224` $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opspareds '    group { 	name	"folder1" 	label	"Code"  	parm { 	    name	"group" 	    baseparm 	    label	"Group" 	    export	none 	    bindselector points "Modify Points" 	        "Select the points to affect and press Enter to complete." 	        0 1 0xffffffff 0 grouptype 0 	} 	parm { 	    name	"grouptype" 	    baseparm 	    label	"Group Type" 	    export	none 	} 	parm { 	    name	"class" 	    baseparm 	    label	"Run Over" 	    export	none 	} 	parm { 	    name	"vex_numcount" 	    baseparm 	    label	"Number Count" 	    export	none 	} 	parm { 	    name	"vex_threadjobsize" 	    baseparm 	    label	"Thread Job Size" 	    export	none 	} 	parm { 	    name	"snippet" 	    baseparm 	    label	"VEXpression" 	    export	all 	} 	parm { 	    name	"exportlist" 	    baseparm 	    label	"Attributes to Create" 	    export	none 	} 	parm { 	    name	"vex_strict" 	    baseparm 	    label	"Enforce Prototypes" 	    export	none 	}     }      group { 	name	"folder1_1" 	label	"Bindings"  	parm { 	    name	"autobind" 	    baseparm 	    label	"Autobind by Name" 	    export	none 	} 	multiparm { 	    name	"bindings" 	    label	"Number of Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindname#" 		baseparm 		label	"Attribute Name" 		export	none 	    } 	    parm { 		name	"bindparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"groupautobind" 	    baseparm 	    label	"Autobind Groups by Name" 	    export	none 	} 	multiparm { 	    name	"groupbindings" 	    label	"Group Bindings" 	    baseparm 	    default	0 	    parmtag	{ "autoscope" "0000000000000000" } 	    parmtag	{ "multistartoffset" "1" }  	    parm { 		name	"bindgroupname#" 		baseparm 		label	"Group Name" 		export	none 	    } 	    parm { 		name	"bindgroupparm#" 		baseparm 		label	"VEX Parameter" 		export	none 	    } 	}  	parm { 	    name	"vex_cwdpath" 	    baseparm 	    label	"Evaluation Node Path" 	    export	none 	} 	parm { 	    name	"vex_outputmask" 	    baseparm 	    label	"Export Parameters" 	    export	none 	} 	parm { 	    name	"vex_updatenmls" 	    baseparm 	    label	"Update Normals If Displaced" 	    export	none 	} 	parm { 	    name	"vex_matchattrib" 	    baseparm 	    label	"Attribute to Match" 	    export	none 	} 	parm { 	    name	"vex_inplace" 	    baseparm 	    label	"Compute Results In Place" 	    export	none 	} 	parm { 	    name	"vex_selectiongroup" 	    baseparm 	    label	"Output Selection Group" 	    export	none 	}     }      parm { 	name	"second_previous_frame" 	label	"Second Previous Frame" 	type	oppath 	default	{ "" } 	parmtag	{ "oprelative" "." }     } ' $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum snippet ( 'vector p = @P;\nvector prevPrevP = @P;\nvector prevP = @P;\nvector nextP = @P;\nvector nextNextP = @P;\n\nprevP = point(1,"P",@ptnum);\n\nnextP = point(2,"P",@ptnum);\n\nnextNextP = point(3,"P",@ptnum);\n\nprevPrevP = point("op:" + chs("second_previous_frame"),"P", @ptnum);\n\n\nvector arrayP[];\nif(rint(@Frame)==floor(@Frame))\n{\n    arrayP = vector[](array(prevP,p,nextP,nextNextP));\n}\nelse\n{\n    arrayP = vector[](array(prevPrevP,prevP,p,nextP));\n}\n\n@P = spline("cubic",frac(@Frame),arrayP);' ) second_previous_frame ( ../OUT_prevPrev_f )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opcf ..
opcf $_obj_geo1_GET_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_current_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_current_f = `run("opadd -e -n -v timeshift current_f")`
oplocate -x `$arg2 + -1.1175870895385742e-08` -y `$arg3 + 1.0738444387859776` $_obj_geo1_GET_interporation_by_id_current_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)' $_obj_geo1_GET_interporation_by_id_current_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_current_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_current_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_current_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_current_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_current_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_current_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_current_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_current_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_current_f

# Node $_obj_geo1_GET_interporation_by_id_prev_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_prev_f = `run("opadd -e -n -v timeshift prev_f")`
oplocate -x `$arg2 + 3.057974988824129` -y `$arg3 + 0.83243443878597745` $_obj_geo1_GET_interporation_by_id_prev_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)-1' $_obj_geo1_GET_interporation_by_id_prev_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_prev_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_prev_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_prev_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_prev_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_prev_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_prev_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_prev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_prev_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_prev_f

# Node $_obj_geo1_GET_interporation_by_id_next_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_next_f = `run("opadd -e -n -v timeshift next_f")`
oplocate -x `$arg2 + 5.1191549888241292` -y `$arg3 + 0.38067443878597818` $_obj_geo1_GET_interporation_by_id_next_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)+1' $_obj_geo1_GET_interporation_by_id_next_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_next_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_next_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_next_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_next_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_next_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_next_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_next_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_next_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_next_f

# Node $_obj_geo1_GET_interporation_by_id_prevPrev_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_prevPrev_f = `run("opadd -e -n -v timeshift prevPrev_f")`
oplocate -x `$arg2 + 10.616564988824129` -y `$arg3 + -0.36756556121402184` $_obj_geo1_GET_interporation_by_id_prevPrev_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)-2' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_prevPrev_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_prevPrev_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_prevPrev_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_prevPrev_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_prevPrev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_prevPrev_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_prevPrev_f

# Node $_obj_geo1_GET_interporation_by_id_next_Next_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_next_Next_f = `run("opadd -e -n -v timeshift next_Next_f")`
oplocate -x `$arg2 + 7.523674988824129` -y `$arg3 + -0.15749556121402186` $_obj_geo1_GET_interporation_by_id_next_Next_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)+2' $_obj_geo1_GET_interporation_by_id_next_Next_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_next_Next_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_next_Next_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_next_Next_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_next_Next_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_next_Next_f/trange2
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_next_Next_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_next_Next_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_next_Next_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_next_Next_f

# Node $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f (Sop/null)
set _obj_geo1_GET_interporation_by_id_OUT_prevPrev_f = `run("opadd -e -n -v null OUT_prevPrev_f")`
oplocate -x `$arg2 + 10.616564988824129` -y `$arg3 + -1.2417255612140226` $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f

# Node $_obj_geo1_GET_interporation_by_id_null1 (Sop/null)
set _obj_geo1_GET_interporation_by_id_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -1.1175870895385742e-08` -y `$arg3 + 3.6873253402957116` $_obj_geo1_GET_interporation_by_id_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_null1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_null1

# Node $_obj_geo1_GET_interporation_by_id_output1 (Sop/output)
set _obj_geo1_GET_interporation_by_id_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.4642253617913603e-08` -y `$arg3 + -7.8299650733225654` $_obj_geo1_GET_interporation_by_id_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_output1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_output1

# Node $_obj_geo1_GET_interporation_by_id_switch1 (Sop/switch)
set _obj_geo1_GET_interporation_by_id_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + -2.3955479308557237e-08` -y `$arg3 + -6.2432114844687128` $_obj_geo1_GET_interporation_by_id_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../match_by_id")' $_obj_geo1_GET_interporation_by_id_switch1/input
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_interporation_by_id_switch1 input ( input )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_switch1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_switch1
oporder -e interporation_by_id current_f prev_f next_f prevPrev_f next_Next_f OUT_prevPrev_f null1 output1 interporation_by_ptnum switch1 
opcf ..
opset -p on $_obj_geo1_GET_interporation_by_id

opcf $arg1
opwire -n $_obj_geo1_sort1 -0 $_obj_geo1_GET_interporation_by_id
opcf $_obj_geo1_GET_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_current_f -0 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_prev_f -1 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_next_f -2 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_next_Next_f -3 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_current_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_prev_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_next_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_prevPrev_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_next_Next_f
opwire -n $_obj_geo1_GET_interporation_by_id_prevPrev_f -0 $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opwire -n -i 0 -0 $_obj_geo1_GET_interporation_by_id_null1
opwire -n $_obj_geo1_GET_interporation_by_id_switch1 -0 $_obj_geo1_GET_interporation_by_id_output1
opwire -n $_obj_geo1_GET_interporation_by_id_current_f -0 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_prev_f -1 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_next_f -2 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_next_Next_f -3 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum -0 $_obj_geo1_GET_interporation_by_id_switch1
opwire -n $_obj_geo1_GET_interporation_by_id_interporation_by_id -1 $_obj_geo1_GET_interporation_by_id_switch1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_GET_interporation_by_id
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_GET_interporation_by_id
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet2" label="GET_subframe_geo" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_GET_subframe_geo (Sop/subnet)
set _obj_geo1_GET_subframe_geo = `run("opadd -e -n -v subnet GET_subframe_geo")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_GET_subframe_geo
opspareds '    parm { 	name	"label1" 	baseparm 	label	"Input #1 Label" 	invisible 	export	dialog     }     parm { 	name	"label2" 	baseparm 	label	"Input #2 Label" 	invisible 	export	dialog     }     parm { 	name	"label3" 	baseparm 	label	"Input #3 Label" 	invisible 	export	dialog     }     parm { 	name	"label4" 	baseparm 	label	"Input #4 Label" 	invisible 	export	dialog     }     parm { 	name	"substeps" 	label	"substeps" 	type	integer 	default	{ "10" } 	range	{ 0 10 } 	parmtag	{ "autoscope" "0000000000000000" }     }     parm { 	name	"shutter" 	label	"shutter" 	type	vector2 	size	2 	default	{ "-0.25" "0.25" } 	range	{ -1 1 } 	parmtag	{ "autoscope" "0000000000000000" }     } ' $_obj_geo1_GET_subframe_geo
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_GET_subframe_geo
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_subframe_geo
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo
opcf $_obj_geo1_GET_subframe_geo

# Node $_obj_geo1_GET_subframe_geo_foreach_end1 (Sop/block_end)
set _obj_geo1_GET_subframe_geo_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 0.0015999999999999903` -y `$arg3 + 1.5632552955012902` $_obj_geo1_GET_subframe_geo_foreach_end1
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_foreach_end1 iterations
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../substeps")' $_obj_geo1_GET_subframe_geo_foreach_end1/iterations
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_subframe_geo_foreach_end1 itermethod ( count ) method ( merge ) iterations ( iterations ) class ( primitive ) useattrib ( off ) attrib ( name ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_GET_subframe_geo_foreach_end1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_subframe_geo_foreach_end1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_foreach_end1
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_foreach_end1

# Node $_obj_geo1_GET_subframe_geo_foreach_begin1 (Sop/block_begin)
set _obj_geo1_GET_subframe_geo_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + -2.3491150000000003` -y `$arg3 + 4.0414000000000012` $_obj_geo1_GET_subframe_geo_foreach_begin1
opparm -V 16.0.504.20 $_obj_geo1_GET_subframe_geo_foreach_begin1 method ( piece ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_GET_subframe_geo_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_subframe_geo_foreach_begin1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_foreach_begin1
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_foreach_begin1

# Node $_obj_geo1_GET_subframe_geo_timeshift1 (Sop/timeshift)
set _obj_geo1_GET_subframe_geo_timeshift1 = `run("opadd -e -n -v timeshift timeshift1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 2.9167000000000005` $_obj_geo1_GET_subframe_geo_timeshift1
opspareds '    parm { 	name	"method" 	baseparm 	label	"Method" 	export	none     }     parm { 	name	"frame" 	baseparm 	label	"Frame" 	export	none     }     parm { 	name	"integerframe" 	baseparm 	label	"Integer Frames" 	export	none     }     parm { 	name	"time" 	baseparm 	label	"Time" 	export	none     }     parm { 	name	"rangeclamp" 	baseparm 	label	"Clamp" 	export	none     }     parm { 	name	"frange" 	baseparm 	label	"Start/End Frame" 	export	none     }     parm { 	name	"trange" 	baseparm 	label	"Start/End Time" 	export	none     }     parm { 	name	"bias" 	label	"bias" 	type	float 	default	{ "0" } 	range	{ 0 10 }     }     parm { 	name	"shutter" 	label	"shutter" 	type	vector2 	size	2 	default	{ "0" "0" } 	range	{ -1 1 }     } ' $_obj_geo1_GET_subframe_geo_timeshift1
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF + (1 - ch("bias")) * ch("shutterx") + ch("bias") * ch("shuttery")' $_obj_geo1_GET_subframe_geo_timeshift1/frame
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_subframe_geo_timeshift1/time
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_subframe_geo_timeshift1/frange1
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_subframe_geo_timeshift1/frange2
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_subframe_geo_timeshift1/trange1
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_subframe_geo_timeshift1/trange2
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 bias
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'detail("../foreach_begin1_metadata1","iteration",0)/(ch("../foreach_end1/iterations")-1)' $_obj_geo1_GET_subframe_geo_timeshift1/bias
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 shutterx
chkey -t 0 -v -0.25 -m 0 -a 0 -A 0 -T a  -F 'ch("../shutterx")' $_obj_geo1_GET_subframe_geo_timeshift1/shutterx
chadd -t 0 0 $_obj_geo1_GET_subframe_geo_timeshift1 shuttery
chkey -t 0 -v 0.25 -m 0 -a 0 -A 0 -T a  -F 'ch("../shuttery")' $_obj_geo1_GET_subframe_geo_timeshift1/shuttery
chblockend
opparm -V 16.0.504.20 $_obj_geo1_GET_subframe_geo_timeshift1 frame ( frame ) integerframe ( off ) bias ( bias ) shutter ( shutterx shuttery )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_subframe_geo_timeshift1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_timeshift1
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_timeshift1

# Node $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1 (Sop/block_begin)
set _obj_geo1_GET_subframe_geo_foreach_begin1_metadata1 = `run("opadd -e -n -v block_begin foreach_begin1_metadata1")`
oplocate -x `$arg2 + 2.0408149999999998` -y `$arg3 + 4.0414000000000012` $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1
opparm -V 16.0.504.20 $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1 method ( metadata ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_foreach_begin1_metadata1

# Node $_obj_geo1_GET_subframe_geo_IN (Sop/null)
set _obj_geo1_GET_subframe_geo_IN = `run("opadd -e -n -v null IN")`
oplocate -x `$arg2 + 0` -y `$arg3 + 5.2176000000000009` $_obj_geo1_GET_subframe_geo_IN
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_subframe_geo_IN
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_IN
opuserdata -n '___Version___' -v '16.0.504.20' $_obj_geo1_GET_subframe_geo_IN

# Node $_obj_geo1_GET_subframe_geo_output1 (Sop/output)
set _obj_geo1_GET_subframe_geo_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.3521965547269588e-08` -y `$arg3 + 0.29837161290678677` $_obj_geo1_GET_subframe_geo_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_subframe_geo_output1
opexprlanguage -s hscript $_obj_geo1_GET_subframe_geo_output1
oporder -e foreach_end1 foreach_begin1 timeshift1 foreach_begin1_metadata1 IN output1 
opcf ..
opset -p on $_obj_geo1_GET_subframe_geo

opcf $arg1
opwire -n $_obj_geo1_GET_interporation_by_id -0 $_obj_geo1_GET_subframe_geo
opcf $_obj_geo1_GET_subframe_geo
opwire -n $_obj_geo1_GET_subframe_geo_timeshift1 -0 $_obj_geo1_GET_subframe_geo_foreach_end1
opwire -n $_obj_geo1_GET_subframe_geo_IN -0 $_obj_geo1_GET_subframe_geo_foreach_begin1
opwire -n $_obj_geo1_GET_subframe_geo_IN -0 $_obj_geo1_GET_subframe_geo_timeshift1
opwire -n -i 0 -0 $_obj_geo1_GET_subframe_geo_IN
opwire -n $_obj_geo1_GET_subframe_geo_foreach_end1 -0 $_obj_geo1_GET_subframe_geo_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_GET_subframe_geo
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_GET_subframe_geo
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <shelfSetEdit name="shelf_set_1" fileLocation="C:/PROGRA~1/SIDEEF~1/HOUDIN~1.20/houdini/toolbar\ShelfDefinitions.shelf">
    <addMemberToolshelf name="kaTools" inPosition="16"/>
  </shelfSetEdit>
</shelfDocument>
